{"config":{"indexing":"full","lang":["en","ja"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"License/","text":"License \u00b6 This software is provided under the MIT License \uff0e Copyright \u00a9 2013-2023 Takuto Maeda THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. The author requests that the user cite (at least one of) the following papers in any publications that result from the use of this software, although this is not an obligation. Accompanying Paper \u00b6 Maeda, T., S. Takemura, and T. Furumura (2017), OpenSWPC: An open-source integrated parallel simulation code for modeling seismic wave propagation in 3D heterogeneous viscoelastic media, Earth Planets Space , 69 , 102, doi:10.1186/s40623-017-0687-2. Related Papers \u00b6 Furumura, T. and L. Chen (2004), Large scale parallel simulation and visualization of 3D seismic wavefield using the Earth Simulator, Comp. Model. Eng. Sci. , 6 , 153-168. doi: 10.3970/cmes.2004.006.153 Furumura, T. and L. Chen (2005), Parallel simulation of strong ground motions during recent and historical damaging earthquakes in Tokyo, Japan, Parallel Computing , 31 , 149-165. doi: 10.1016/j.parco.2005.02.003 Furumura, T. Hayakawa, M. Nakamura, K. Koketsu, and T. Baba (2008), Development of long-period ground motions from the Nankai Trough, Japan, earthquakes: Observations and computer simulation of the 1944 Tonankai (Mw 8.1) and the 2004 SE Off-Kii Peninsula (Mw 7.4) earthquakes, Pure Appl. Geophys. , 165 , 585-607. doi: 10.1007/s00024-008-0318-8 Furumura, T. and T. Saito (2009), An integrated simulation of ground motion and tsunami for the 1944 Tonankai earthquake using high-performance super computers, J. Disast. Res. , 4 , 118-126. https://www.fujipress.jp/jdr/dr/dsstr000400020118/ Noguchi, S., T. Maeda, and T. Furumura (2013), FDM simulation of an anomalous later phase from the Japan Trench subduction zone earthquakes, Pure Appl. Geophys. , 170 , 95-108. doi: 10.1007/s00024-011-0412-1 Maeda, T., and T. Furumura (2013), FDM simulation of seismic waves, ocean acoustic waves, and tsunamis based on tsunami-coupled equations of motion, Pure Appl. Geophys. , 170 , 109-127. doi: 10.1007/s00024-011-0430-z Maeda, T., T. Furumura, S. Noguchi, S. Takemura, S. Sakai, M. Shinohara, K. Iwai, S. J. Lee (2013), Seismic and tsunami wave propagation of the 2011 Off the Pacific Coast of Tohoku Earthquake as inferred from the tsunami-coupled finite difference simulation, Bull. Seism. Soc. Am. , 103 , 1456-1472. doi: 10.1785/0120120118 Maeda, T., T. Furumura, and K. Obara (2014), Scattering of teleseismic P-waves by the Japan Trench: A significant effect of reverberation in the seawater column, Earth Planet. Sci. Lett. , 397 , 101-110. doi: 10.1016/j.epsl.2014.04.037 Noguchi, S., T. Maeda, and T. Furumura (2016), Ocean-influenced Rayleigh waves from outer-rise earthquakes and their effects on durations of long-period ground motion, Geophys. J. Int ., 205 , 1099-1107. doi: 10.1093/gji/ggw074 Takemura, S., T. Maeda, T. Furumura, and K. Obara (2016), Constraining the source location of the 30 May 2015 (Mw 7.9) Bonin deep-focus earthquake using seismogram envelopes of high-frequency P waveforms: occurrence of deep-focus earthquake at the bottom of a subducting slab, Geophys. Res. Lett. , 43 , 4297-4302. doi: 10.1002/2016GL068437 Yoshimitsu, N., T. Furumura, and T. Maeda (2016), Geometric effect on a laboratory-scale wavefield inferred from a three-dimensional numerical simulation, J. Appl. Geophys. , 132 , 184-192. doi: 10.1016/j.jappgeo.2016.07.002 Maeda, T., K. Nishida, R. Takagi, and K. Obara (2016), Reconstruction of a 2D seismic wavefield by seismic gradiometry, Prog. Earth Planet. Sci. , 3 , 31. doi: 10.1186/s40645-016-0107-4 Todoriki, M., T. Furumura, and T. Maeda (2017), Effects of seawater on elongated duration of ground motion as well as variation in its amplitude for offshore earthquakes, Geophys. J. Int. , 208 , 226-233. doi: 10.1093/gji/ggw388 Toya, M., A. Kato, T. Maeda, K. Obara, T. Takeda, and K. Yamaoka (2017), Down-dip variations in a subducting low-velocity zone linked to episodic tremor and slip: a new constraint from ScSp waves, Scientific Reports , 7 , 2868. doi: 10.1038/s41598-017-03048-6 Morioka, H., H. Kumagai, and T. Maeda (2017), Theoretical basis of the amplitude source location method for volcano-seismic signals, J. Geophys. Res. , 122 , 6538-6551. doi: 10.1002/2017JB013997 Furumura, T., & Kennett, B. L. N. (2018). Regional distance PL phase in the crustal waveguide\u2014An analog to the teleseismic W phase in the upper\u2010mantle waveguide. J. Geophys. Res. , 123 , 4007\u2013 4024. doi: 10.1029/2018JB015717 Furumura, T., & Kennett, B. L. N. (2019). The significance of long\u2010period ground motion at regional to teleseismic distances from the 610 km deep Mw8.3 Sea of Okhotsk earthquake of 24 May 2013. J. Geophys. Res. , 124 . doi: 10.1029/2019JB018147","title":"License"},{"location":"License/#license","text":"This software is provided under the MIT License \uff0e Copyright \u00a9 2013-2023 Takuto Maeda THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. The author requests that the user cite (at least one of) the following papers in any publications that result from the use of this software, although this is not an obligation.","title":"License"},{"location":"License/#accompanying-paper","text":"Maeda, T., S. Takemura, and T. Furumura (2017), OpenSWPC: An open-source integrated parallel simulation code for modeling seismic wave propagation in 3D heterogeneous viscoelastic media, Earth Planets Space , 69 , 102, doi:10.1186/s40623-017-0687-2.","title":"Accompanying Paper"},{"location":"License/#related-papers","text":"Furumura, T. and L. Chen (2004), Large scale parallel simulation and visualization of 3D seismic wavefield using the Earth Simulator, Comp. Model. Eng. Sci. , 6 , 153-168. doi: 10.3970/cmes.2004.006.153 Furumura, T. and L. Chen (2005), Parallel simulation of strong ground motions during recent and historical damaging earthquakes in Tokyo, Japan, Parallel Computing , 31 , 149-165. doi: 10.1016/j.parco.2005.02.003 Furumura, T. Hayakawa, M. Nakamura, K. Koketsu, and T. Baba (2008), Development of long-period ground motions from the Nankai Trough, Japan, earthquakes: Observations and computer simulation of the 1944 Tonankai (Mw 8.1) and the 2004 SE Off-Kii Peninsula (Mw 7.4) earthquakes, Pure Appl. Geophys. , 165 , 585-607. doi: 10.1007/s00024-008-0318-8 Furumura, T. and T. Saito (2009), An integrated simulation of ground motion and tsunami for the 1944 Tonankai earthquake using high-performance super computers, J. Disast. Res. , 4 , 118-126. https://www.fujipress.jp/jdr/dr/dsstr000400020118/ Noguchi, S., T. Maeda, and T. Furumura (2013), FDM simulation of an anomalous later phase from the Japan Trench subduction zone earthquakes, Pure Appl. Geophys. , 170 , 95-108. doi: 10.1007/s00024-011-0412-1 Maeda, T., and T. Furumura (2013), FDM simulation of seismic waves, ocean acoustic waves, and tsunamis based on tsunami-coupled equations of motion, Pure Appl. Geophys. , 170 , 109-127. doi: 10.1007/s00024-011-0430-z Maeda, T., T. Furumura, S. Noguchi, S. Takemura, S. Sakai, M. Shinohara, K. Iwai, S. J. Lee (2013), Seismic and tsunami wave propagation of the 2011 Off the Pacific Coast of Tohoku Earthquake as inferred from the tsunami-coupled finite difference simulation, Bull. Seism. Soc. Am. , 103 , 1456-1472. doi: 10.1785/0120120118 Maeda, T., T. Furumura, and K. Obara (2014), Scattering of teleseismic P-waves by the Japan Trench: A significant effect of reverberation in the seawater column, Earth Planet. Sci. Lett. , 397 , 101-110. doi: 10.1016/j.epsl.2014.04.037 Noguchi, S., T. Maeda, and T. Furumura (2016), Ocean-influenced Rayleigh waves from outer-rise earthquakes and their effects on durations of long-period ground motion, Geophys. J. Int ., 205 , 1099-1107. doi: 10.1093/gji/ggw074 Takemura, S., T. Maeda, T. Furumura, and K. Obara (2016), Constraining the source location of the 30 May 2015 (Mw 7.9) Bonin deep-focus earthquake using seismogram envelopes of high-frequency P waveforms: occurrence of deep-focus earthquake at the bottom of a subducting slab, Geophys. Res. Lett. , 43 , 4297-4302. doi: 10.1002/2016GL068437 Yoshimitsu, N., T. Furumura, and T. Maeda (2016), Geometric effect on a laboratory-scale wavefield inferred from a three-dimensional numerical simulation, J. Appl. Geophys. , 132 , 184-192. doi: 10.1016/j.jappgeo.2016.07.002 Maeda, T., K. Nishida, R. Takagi, and K. Obara (2016), Reconstruction of a 2D seismic wavefield by seismic gradiometry, Prog. Earth Planet. Sci. , 3 , 31. doi: 10.1186/s40645-016-0107-4 Todoriki, M., T. Furumura, and T. Maeda (2017), Effects of seawater on elongated duration of ground motion as well as variation in its amplitude for offshore earthquakes, Geophys. J. Int. , 208 , 226-233. doi: 10.1093/gji/ggw388 Toya, M., A. Kato, T. Maeda, K. Obara, T. Takeda, and K. Yamaoka (2017), Down-dip variations in a subducting low-velocity zone linked to episodic tremor and slip: a new constraint from ScSp waves, Scientific Reports , 7 , 2868. doi: 10.1038/s41598-017-03048-6 Morioka, H., H. Kumagai, and T. Maeda (2017), Theoretical basis of the amplitude source location method for volcano-seismic signals, J. Geophys. Res. , 122 , 6538-6551. doi: 10.1002/2017JB013997 Furumura, T., & Kennett, B. L. N. (2018). Regional distance PL phase in the crustal waveguide\u2014An analog to the teleseismic W phase in the upper\u2010mantle waveguide. J. Geophys. Res. , 123 , 4007\u2013 4024. doi: 10.1029/2018JB015717 Furumura, T., & Kennett, B. L. N. (2019). The significance of long\u2010period ground motion at regional to teleseismic distances from the 610 km deep Mw8.3 Sea of Okhotsk earthquake of 24 May 2013. J. Geophys. Res. , 124 . doi: 10.1029/2019JB018147","title":"Related Papers"},{"location":"New_Feature/","text":"New features \u00b6 Version 5.3.0 (2023-02-02) \u00b6 Better parallel partitioning \u00b6 In previous versions, automatic MPI area allocation sometimes failed when the number of grids in the X or Y direction was not divisible by the number of MPI partitions and the number of MPI partitions was very large. This problem has been fixed in version 5.3.0. In new version, the partitioning algorithm is as follows: Let N be the number of grid, and P the number of MPI partitions. If N is divisible by P , i.e., \\mod(N,P)= 0 , the number of grids assigned to a node is N_P = N/P . If this is not the case, the following rule is applied: Node ID Number of Grids N_P 0 N_P = (N-M)/P 1 to M N_P = (N-M)/P + 1 M+1 to P-1 N_P = (N-M)/P (where M = \\mod(N,P) ) Example \u00b6 Python integration \u00b6 An example of processing OpenSWPC input/output in Python is included in this manual . Updated documentation \u00b6 Try OpenSWPC on cloud! \u00b6 See this example . This is also would be a nice guide to compile the OpenSWPC in Ubuntu Linux. Better switching between EN/JP documentation \u00b6 One can switch between Japanese and English documentation using the button to the left of the search box. Untranslated documents (for example, this page) are displayed in English even in Japanese mode. Others \u00b6 Tune-up in some supercomputers Updated version of Japanese community model JIVSM Previous Revision Histories \u00b6 2021-08-27 (v5.2.0) Earth-flattening transformation, psmeca (a new source representation), seawater velocity structure w/ SOFAR channel, a new tool that converts 2D simulation output into pseudo-3D, supporting new Japanese supercomputers, and some minor bugfixes. 2020-08-13 (v5.1.0) Strict-mode 2019-08-27 (v5.0.0) New web-based documentation, stress/strain waveform output, slip-based source specification, and many bugfixes. 2017-09-21 (v4.0) Minor bugfixes, new binary output for waveform, updated references. 2016-08-20 (v3.0) Hybrid parallel simulation for 2D codes. 2016-06-19 (v2.0) Hybrid parallel simulation for 2D codes. 2016-05-05 (v1.0) Official first release as an open-source software 2016-02-03 Output in \\texttt{NetCDF} format. 2016-01-14 Body force and reciprocity modes. 2015-07-14 MPI/OpenMP hybrid parallel simulation mode. 2015-06-29 Added random media. 2015-06-10 Revision for the new Earth Simulator. 2015-06-04 First closed version for the ERI/UT joint usage program.","title":"New features"},{"location":"New_Feature/#new-features","text":"","title":"New features"},{"location":"New_Feature/#version-530-2023-02-02","text":"","title":"Version 5.3.0 (2023-02-02)"},{"location":"New_Feature/#better-parallel-partitioning","text":"In previous versions, automatic MPI area allocation sometimes failed when the number of grids in the X or Y direction was not divisible by the number of MPI partitions and the number of MPI partitions was very large. This problem has been fixed in version 5.3.0. In new version, the partitioning algorithm is as follows: Let N be the number of grid, and P the number of MPI partitions. If N is divisible by P , i.e., \\mod(N,P)= 0 , the number of grids assigned to a node is N_P = N/P . If this is not the case, the following rule is applied: Node ID Number of Grids N_P 0 N_P = (N-M)/P 1 to M N_P = (N-M)/P + 1 M+1 to P-1 N_P = (N-M)/P (where M = \\mod(N,P) )","title":"Better parallel partitioning"},{"location":"New_Feature/#example","text":"","title":"Example"},{"location":"New_Feature/#python-integration","text":"An example of processing OpenSWPC input/output in Python is included in this manual .","title":"Python integration"},{"location":"New_Feature/#updated-documentation","text":"","title":"Updated documentation"},{"location":"New_Feature/#try-openswpc-on-cloud","text":"See this example . This is also would be a nice guide to compile the OpenSWPC in Ubuntu Linux.","title":"Try OpenSWPC on cloud!"},{"location":"New_Feature/#better-switching-between-enjp-documentation","text":"One can switch between Japanese and English documentation using the button to the left of the search box. Untranslated documents (for example, this page) are displayed in English even in Japanese mode.","title":"Better switching between EN/JP documentation"},{"location":"New_Feature/#others","text":"Tune-up in some supercomputers Updated version of Japanese community model JIVSM","title":"Others"},{"location":"New_Feature/#previous-revision-histories","text":"2021-08-27 (v5.2.0) Earth-flattening transformation, psmeca (a new source representation), seawater velocity structure w/ SOFAR channel, a new tool that converts 2D simulation output into pseudo-3D, supporting new Japanese supercomputers, and some minor bugfixes. 2020-08-13 (v5.1.0) Strict-mode 2019-08-27 (v5.0.0) New web-based documentation, stress/strain waveform output, slip-based source specification, and many bugfixes. 2017-09-21 (v4.0) Minor bugfixes, new binary output for waveform, updated references. 2016-08-20 (v3.0) Hybrid parallel simulation for 2D codes. 2016-06-19 (v2.0) Hybrid parallel simulation for 2D codes. 2016-05-05 (v1.0) Official first release as an open-source software 2016-02-03 Output in \\texttt{NetCDF} format. 2016-01-14 Body force and reciprocity modes. 2015-07-14 MPI/OpenMP hybrid parallel simulation mode. 2015-06-29 Added random media. 2015-06-10 Revision for the new Earth Simulator. 2015-06-04 First closed version for the ERI/UT joint usage program.","title":"Previous Revision Histories"},{"location":"./","text":"OpenSWPC Users' Guide \u00b6 Description \u00b6 This software simulate seismic wave propagation by solving equations of motion with constitutive equations of linear elastic/viscoelastic medium by finite difference method (FDM) under message passing interface (MPI) environment in 3D and 2D (P-SV or SH) media. This package also provides a set of tools for visualizing/converting simulation output.","title":"OpenSWPC Users' Guide"},{"location":"./#openswpc-users-guide","text":"","title":"OpenSWPC Users' Guide"},{"location":"./#description","text":"This software simulate seismic wave propagation by solving equations of motion with constitutive equations of linear elastic/viscoelastic medium by finite difference method (FDM) under message passing interface (MPI) environment in 3D and 2D (P-SV or SH) media. This package also provides a set of tools for visualizing/converting simulation output.","title":"Description"},{"location":"1._SetUp/0100_trial/","text":"Trial of OpenSWPC \u00b6 Google Colaboratory is a cloud-based Python platform provided by Google Research. Since the Google Colaboratory is working under Ubuntu Linux , we can compile and try to execute small examples of the OpenSWPC without preparing physical Linux server on your office. Computing in this cloud environment is a perfect demonstration to get an overview of OpenSWPC. This document file is created under the Google Colaboratory, and converted to HTML as a part of the user's guide. First, let us confirm that Google Colaboratory is working under ubuntu. Any linux commands can be executed in the Jupyter notebook by prepending ! before the command: 1 ! uname - a 1 Linux 814eb6f6abe0 5.10.133+ #1 SMP Fri Aug 26 08:44:51 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux 1 ! cat / etc / os - release 1 2 3 4 5 6 7 8 9 10 11 12 NAME=\"Ubuntu\" VERSION=\"18.04.6 LTS (Bionic Beaver)\" ID=ubuntu ID_LIKE=debian PRETTY_NAME=\"Ubuntu 18.04.6 LTS\" VERSION_ID=\"18.04\" HOME_URL=\"https://www.ubuntu.com/\" SUPPORT_URL=\"https://help.ubuntu.com/\" BUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\" PRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\" VERSION_CODENAME=bionic UBUNTU_CODENAME=bionic Python preparation \u00b6 The following Python code is to display Mpeg-4 videos. Reference: https://qiita.com/jun40vn/items/ace7758cd0522f2904de 1 2 3 4 5 6 7 8 9 10 11 12 13 from IPython.display import HTML from base64 import b64encode def show_mp4 ( mp4file ): mp4 = open ( mp4file , 'rb' ) . read () data_url = 'data:video/mp4;base64,' + b64encode ( mp4 ) . decode () html = HTML ( f \"\"\" <video width=\"50%\" height=\"50%\" controls> <source src=\" { data_url } \" type=\"video/mp4\"> </video>\"\"\" ) return html Download & Compile OpenSWPC \u00b6 In ubuntu linux, we usually use apt command to install packages. OpenSWPC depends on the NetCDF libraries for input/output, so we need libnetcdf-dev and libnetcdff-dev packages. The latter is the fortran interface of the NetCDF. 1 ! apt install libnetcdf - dev libnetcdff - dev 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 Reading package lists ... Done Building dependency tree Reading state information ... Done libnetcdf - dev is already the newest version ( 1 : 4 . 6 . 0 - 2 build1 ) . libnetcdf - dev set to manually installed . The following package was automatically installed and is no longer required : libnvidia - common - 460 Use 'apt autoremove' to remove it . Suggested packages : netcdf - bin netcdf - doc The following NEW packages will be installed : libnetcdff - dev libnetcdff6 0 upgraded , 2 newly installed , 0 to remove and 7 not upgraded . Need to get 368 kB of archives . After this operation , 1 , 449 kB of additional disk space will be used . Get : 1 http : // archive . ubuntu . com / ubuntu bionic / universe amd64 libnetcdff6 amd64 4 . 4 . 4 + ds - 3 [ 92 . 7 kB ] Get : 2 http : // archive . ubuntu . com / ubuntu bionic / universe amd64 libnetcdff - dev amd64 4 . 4 . 4 + ds - 3 [ 275 kB ] Fetched 368 kB in 1 s ( 586 kB / s ) Selecting previously unselected package libnetcdff6 . ( Reading database ... 124015 files and directories currently installed . ) Preparing to unpack ... / libnetcdff6_4 . 4 . 4 + ds - 3 _amd64 . deb ... Unpacking libnetcdff6 ( 4 . 4 . 4 + ds - 3 ) ... Selecting previously unselected package libnetcdff - dev . Preparing to unpack ... / libnetcdff - dev_4 . 4 . 4 + ds - 3 _amd64 . deb ... Unpacking libnetcdff - dev ( 4 . 4 . 4 + ds - 3 ) ... Setting up libnetcdff6 ( 4 . 4 . 4 + ds - 3 ) ... Setting up libnetcdff - dev ( 4 . 4 . 4 + ds - 3 ) ... Processing triggers for man - db ( 2 . 8 . 3 - 2 ubuntu0 . 1 ) ... Processing triggers for libc - bin ( 2 . 27 - 3 ubuntu1 . 6 ) ... Then, let us download and compile OpenSWPC: 1 ! git clone https : // github . com / tktmyd / OpenSWPC . git 1 2 3 4 5 6 7 Cloning into ' OpenSWPC ' ... remote : Enumerating objects : 4041 , done . \u001b [ K remote : Counting objects : 100 % ( 6 / 6 ), done . \u001b [ K remote : Compressing objects : 100 % ( 6 / 6 ), done . \u001b [ K remote : Total 4041 ( delta 1 ), reused 1 ( delta 0 ), pack - reused 4035 \u001b [ K Receiving objects : 100 % ( 4041 / 4041 ), 52.58 MiB | 35.05 MiB / s , done . Resolving deltas : 100 % ( 2747 / 2747 ), done . 1 ! cd ./ OpenSWPC / src ; make arch = ubuntu - gfortran 1 2 3 4 5 6 7 8 9 10 cd swpc_3d ; make arch = ubuntu - gfortran make [ 1 ]: Entering directory '/content/OpenSWPC/src/swpc_3d' mpif90 - I / usr / include - D_NETCDF - O2 - ffast - math - D_INFO - I ../ include - fopenmp - o m_std . o - c ../ shared / m_std . F90 mpif90 - I / usr / include - D_NETCDF - O2 - ffast - math - D_INFO - I ../ include - fopenmp - o m_pdebug . o - c ../ shared / m_pdebug . F90 mpif90 - I / usr / include - D_NETCDF - O2 - ffast - math - D_INFO - I ../ include - fopenmp - o m_system . o - c ../ shared / m_system . F90 mpif90 - I / usr / include - D_NETCDF - O2 - ffast - math - D_INFO - I ../ include - fopenmp - o m_fdtool . o - c ../ shared / m_fdtool . F90 mpif90 - I / usr / include - D_NETCDF - O2 - ffast - math - D_INFO - I ../ include - fopenmp - o m_pwatch . o - c ../ shared / m_pwatch . F90 mpif90 - I / usr / include - D_NETCDF - O2 - ffast - math - D_INFO - I ../ include - fopenmp - o m_daytim . o - c ../ shared / m_daytim . F90 ... ( omitted below . ) After long messages, we get executable binaries under ./OpenSWPC/bin/ directory: 1 ! ls ./ OpenSWPC / bin 1 2 3 4 diff_snp . x gen_rmed3d . x mapregion . x swpc_psv . x wav2sac . x fdmcond . x grdsnp . x qmodel_tau . x swpc_sh . x wvconv . x fs2grd . x ll2xy . x read_snp . x timvis_abs . gmt xy2ll . x gen_rmed2d . x mapregion . gmt swpc_3d . x timvis . gmt Execution \u00b6 Unfortunatelly, the computational resouce freely available in the Google Colaboratory is limited. So we cannot execute 3D large numerical simulation of the production-level on this. Here, let us execute 2D P-SV example. 1 cd OpenSWPC 1 /content/OpenSWPC To execute a code using MPI under the Google Colaboratory, we need --allow-run-as-root option. 1 ! mpirun -- allow - run - as - root - np 2 ./ bin / swpc_psv . x - i example / input . inf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 ------------------------------------------------------------------------------ SWPC_PSV ------------------------------------------------------------------------------ Grid Size : 384 x 384 MPI Partitioning : 2 Total Memory Size : 0.020 [ GiB ] Node Memory Size : 0.010 [ GiB ] Stability Condition c : 0.526 ( c < 1 ) Wavelength Condition r : 12.488 ( r > 5 - 10 ) Minimum velocity : 3.122 [ km/s ] Maximum velocity : 7.977 [ km/s ] Maximum frequency : 0.500 [ Hz ] ------------------------------------------------------------------------------ it = 0000050 , 0.065 s / loop , eta 000 : 01 : 01 , ( 7.40E-02 2.73E-01 ) it = 0000100 , 0.061 s / loop , eta 000 : 00 : 54 , ( 8.13E-01 2.01E+00 ) it = 0000150 , 0.062 s / loop , eta 000 : 00 : 52 , ( 7.71E-01 1.46E+00 ) it = 0000200 , 0.060 s / loop , eta 000 : 00 : 48 , ( 2.90E-01 2.56E-01 ) it = 0000250 , 0.059 s / loop , eta 000 : 00 : 44 , ( 2.21E-01 3.03E-01 ) it = 0000300 , 0.060 s / loop , eta 000 : 00 : 41 , ( 1.90E-01 3.22E-01 ) it = 0000350 , 0.058 s / loop , eta 000 : 00 : 37 , ( 1.76E-01 3.27E-01 ) it = 0000400 , 0.056 s / loop , eta 000 : 00 : 33 , ( 1.93E-01 3.23E-01 ) it = 0000450 , 0.055 s / loop , eta 000 : 00 : 30 , ( 1.92E-01 3.08E-01 ) it = 0000500 , 0.054 s / loop , eta 000 : 00 : 26 , ( 1.89E-01 3.19E-01 ) it = 0000550 , 0.054 s / loop , eta 000 : 00 : 24 , ( 1.83E-01 3.33E-01 ) it = 0000600 , 0.055 s / loop , eta 000 : 00 : 21 , ( 1.75E-01 3.34E-01 ) it = 0000650 , 0.055 s / loop , eta 000 : 00 : 19 , ( 1.70E-01 3.36E-01 ) it = 0000700 , 0.055 s / loop , eta 000 : 00 : 16 , ( 1.69E-01 3.37E-01 ) it = 0000750 , 0.055 s / loop , eta 000 : 00 : 13 , ( 1.73E-01 3.48E-01 ) it = 0000800 , 0.055 s / loop , eta 000 : 00 : 10 , ( 1.76E-01 3.53E-01 ) it = 0000850 , 0.055 s / loop , eta 000 : 00 : 08 , ( 1.77E-01 3.45E-01 ) it = 0000900 , 0.055 s / loop , eta 000 : 00 : 05 , ( 1.81E-01 3.41E-01 ) it = 0000950 , 0.055 s / loop , eta 000 : 00 : 02 , ( 1.77E-01 3.39E-01 ) it = 0001000 , 0.055 s / loop , eta 000 : 00 : 00 , ( 1.63E-01 3.36E-01 ) ------------------------------------------------------------------------------ Total time : 54.727 s ------------------------------------------------------------------------------ Note : The following floating - point exceptions are signalling : IEEE_UNDERFLOW_FLAG Note : The following floating - point exceptions are signalling : IEEE_UNDERFLOW_FLAG The warning messages regarding floating-point underflow do not matter. Visualization \u00b6 OpenSWPC also comes with dedicated tools for visualization. 1 ! ./ bin / read_snp . x - i out / swpc . xz . v . nc - ppm - pall - mul 10 1 2 3 4 5 6 7 8 9 10 11 12 13 ppm/swpc.xz.v2.000000.ppm ppm/swpc.xz.v2.000001.ppm ppm/swpc.xz.v2.000002.ppm ppm/swpc.xz.v2.000003.ppm ppm/swpc.xz.v2.000004.ppm ppm/swpc.xz.v2.000005.ppm ppm/swpc.xz.v2.000006.ppm ppm/swpc.xz.v2.000007.ppm ppm/swpc.xz.v2.000008.ppm ppm/swpc.xz.v2.000009.ppm ppm/swpc.xz.v2.000010.ppm ... (omitted below) Let us confirm the result as an animation movie by using ffmpeg . 1 ! ffmpeg - i ppm / swpc . xz . v2 .% 6 d . ppm - qscale 0 - pix_fmt yuv420p - y swpc . mp4 1 2 3 4 5 ffmpeg version 3.4 . 11 - 0 ubuntu0 . 1 Copyright ( c ) 2000 - 2022 the FFmpeg developers built with gcc 7 ( Ubuntu 7.5 . 0 - 3 ubuntu1 ~ 18.04 ) configuration : -- prefix =/ usr -- extra - version = 0 ubuntu0 . 1 -- toolchain = hardened -- libdir =/ usr / lib / x86_64 - linux - gnu -- incdir =/ usr / include / x86_64 - linux - gnu -- enable - gpl -- disable - stripping -- enable - avresample -- enable - avisynth -- enable - gnutls -- enable - ladspa -- enable - libass -- enable - libbluray -- enable - libbs2b -- enable - libcaca -- enable - libcdio -- enable - libflite -- enable - libfontconfig -- enable - libfreetype -- enable - libfribidi -- enable - libgme -- enable - libgsm -- enable - libmp3lame -- enable - libmysofa -- enable - libopenjpeg -- enable - libopenmpt -- enable - libopus -- enable - libpulse -- enable - librubberband -- enable - librsvg -- enable - libshine -- enable - libsnappy -- enable - libsoxr -- enable - libspeex -- enable - libssh -- enable - libtheora -- enable - libtwolame -- enable - libvorbis -- enable - libvpx -- enable - libwavpack -- enable - libwebp -- enable - libx265 -- enable - libxml2 -- enable - libxvid -- enable - libzmq -- enable - libzvbi -- enable - omx -- enable - openal -- enable - opengl -- enable - sdl2 -- enable - libdc1394 -- enable - libdrm -- enable - libiec61883 -- enable - chromaprint -- enable - frei0r -- enable - libopencv -- enable - libx264 -- enable - shared ... ( omitted below ) 1 show_mp4 ( \"./swpc.mp4\" )","title":"Trial of OpenSWPC"},{"location":"1._SetUp/0100_trial/#trial-of-openswpc","text":"Google Colaboratory is a cloud-based Python platform provided by Google Research. Since the Google Colaboratory is working under Ubuntu Linux , we can compile and try to execute small examples of the OpenSWPC without preparing physical Linux server on your office. Computing in this cloud environment is a perfect demonstration to get an overview of OpenSWPC. This document file is created under the Google Colaboratory, and converted to HTML as a part of the user's guide. First, let us confirm that Google Colaboratory is working under ubuntu. Any linux commands can be executed in the Jupyter notebook by prepending ! before the command: 1 ! uname - a 1 Linux 814eb6f6abe0 5.10.133+ #1 SMP Fri Aug 26 08:44:51 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux 1 ! cat / etc / os - release 1 2 3 4 5 6 7 8 9 10 11 12 NAME=\"Ubuntu\" VERSION=\"18.04.6 LTS (Bionic Beaver)\" ID=ubuntu ID_LIKE=debian PRETTY_NAME=\"Ubuntu 18.04.6 LTS\" VERSION_ID=\"18.04\" HOME_URL=\"https://www.ubuntu.com/\" SUPPORT_URL=\"https://help.ubuntu.com/\" BUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\" PRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\" VERSION_CODENAME=bionic UBUNTU_CODENAME=bionic","title":"Trial of OpenSWPC"},{"location":"1._SetUp/0100_trial/#python-preparation","text":"The following Python code is to display Mpeg-4 videos. Reference: https://qiita.com/jun40vn/items/ace7758cd0522f2904de 1 2 3 4 5 6 7 8 9 10 11 12 13 from IPython.display import HTML from base64 import b64encode def show_mp4 ( mp4file ): mp4 = open ( mp4file , 'rb' ) . read () data_url = 'data:video/mp4;base64,' + b64encode ( mp4 ) . decode () html = HTML ( f \"\"\" <video width=\"50%\" height=\"50%\" controls> <source src=\" { data_url } \" type=\"video/mp4\"> </video>\"\"\" ) return html","title":"Python preparation"},{"location":"1._SetUp/0100_trial/#download-compile-openswpc","text":"In ubuntu linux, we usually use apt command to install packages. OpenSWPC depends on the NetCDF libraries for input/output, so we need libnetcdf-dev and libnetcdff-dev packages. The latter is the fortran interface of the NetCDF. 1 ! apt install libnetcdf - dev libnetcdff - dev 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 Reading package lists ... Done Building dependency tree Reading state information ... Done libnetcdf - dev is already the newest version ( 1 : 4 . 6 . 0 - 2 build1 ) . libnetcdf - dev set to manually installed . The following package was automatically installed and is no longer required : libnvidia - common - 460 Use 'apt autoremove' to remove it . Suggested packages : netcdf - bin netcdf - doc The following NEW packages will be installed : libnetcdff - dev libnetcdff6 0 upgraded , 2 newly installed , 0 to remove and 7 not upgraded . Need to get 368 kB of archives . After this operation , 1 , 449 kB of additional disk space will be used . Get : 1 http : // archive . ubuntu . com / ubuntu bionic / universe amd64 libnetcdff6 amd64 4 . 4 . 4 + ds - 3 [ 92 . 7 kB ] Get : 2 http : // archive . ubuntu . com / ubuntu bionic / universe amd64 libnetcdff - dev amd64 4 . 4 . 4 + ds - 3 [ 275 kB ] Fetched 368 kB in 1 s ( 586 kB / s ) Selecting previously unselected package libnetcdff6 . ( Reading database ... 124015 files and directories currently installed . ) Preparing to unpack ... / libnetcdff6_4 . 4 . 4 + ds - 3 _amd64 . deb ... Unpacking libnetcdff6 ( 4 . 4 . 4 + ds - 3 ) ... Selecting previously unselected package libnetcdff - dev . Preparing to unpack ... / libnetcdff - dev_4 . 4 . 4 + ds - 3 _amd64 . deb ... Unpacking libnetcdff - dev ( 4 . 4 . 4 + ds - 3 ) ... Setting up libnetcdff6 ( 4 . 4 . 4 + ds - 3 ) ... Setting up libnetcdff - dev ( 4 . 4 . 4 + ds - 3 ) ... Processing triggers for man - db ( 2 . 8 . 3 - 2 ubuntu0 . 1 ) ... Processing triggers for libc - bin ( 2 . 27 - 3 ubuntu1 . 6 ) ... Then, let us download and compile OpenSWPC: 1 ! git clone https : // github . com / tktmyd / OpenSWPC . git 1 2 3 4 5 6 7 Cloning into ' OpenSWPC ' ... remote : Enumerating objects : 4041 , done . \u001b [ K remote : Counting objects : 100 % ( 6 / 6 ), done . \u001b [ K remote : Compressing objects : 100 % ( 6 / 6 ), done . \u001b [ K remote : Total 4041 ( delta 1 ), reused 1 ( delta 0 ), pack - reused 4035 \u001b [ K Receiving objects : 100 % ( 4041 / 4041 ), 52.58 MiB | 35.05 MiB / s , done . Resolving deltas : 100 % ( 2747 / 2747 ), done . 1 ! cd ./ OpenSWPC / src ; make arch = ubuntu - gfortran 1 2 3 4 5 6 7 8 9 10 cd swpc_3d ; make arch = ubuntu - gfortran make [ 1 ]: Entering directory '/content/OpenSWPC/src/swpc_3d' mpif90 - I / usr / include - D_NETCDF - O2 - ffast - math - D_INFO - I ../ include - fopenmp - o m_std . o - c ../ shared / m_std . F90 mpif90 - I / usr / include - D_NETCDF - O2 - ffast - math - D_INFO - I ../ include - fopenmp - o m_pdebug . o - c ../ shared / m_pdebug . F90 mpif90 - I / usr / include - D_NETCDF - O2 - ffast - math - D_INFO - I ../ include - fopenmp - o m_system . o - c ../ shared / m_system . F90 mpif90 - I / usr / include - D_NETCDF - O2 - ffast - math - D_INFO - I ../ include - fopenmp - o m_fdtool . o - c ../ shared / m_fdtool . F90 mpif90 - I / usr / include - D_NETCDF - O2 - ffast - math - D_INFO - I ../ include - fopenmp - o m_pwatch . o - c ../ shared / m_pwatch . F90 mpif90 - I / usr / include - D_NETCDF - O2 - ffast - math - D_INFO - I ../ include - fopenmp - o m_daytim . o - c ../ shared / m_daytim . F90 ... ( omitted below . ) After long messages, we get executable binaries under ./OpenSWPC/bin/ directory: 1 ! ls ./ OpenSWPC / bin 1 2 3 4 diff_snp . x gen_rmed3d . x mapregion . x swpc_psv . x wav2sac . x fdmcond . x grdsnp . x qmodel_tau . x swpc_sh . x wvconv . x fs2grd . x ll2xy . x read_snp . x timvis_abs . gmt xy2ll . x gen_rmed2d . x mapregion . gmt swpc_3d . x timvis . gmt","title":"Download &amp; Compile OpenSWPC"},{"location":"1._SetUp/0100_trial/#execution","text":"Unfortunatelly, the computational resouce freely available in the Google Colaboratory is limited. So we cannot execute 3D large numerical simulation of the production-level on this. Here, let us execute 2D P-SV example. 1 cd OpenSWPC 1 /content/OpenSWPC To execute a code using MPI under the Google Colaboratory, we need --allow-run-as-root option. 1 ! mpirun -- allow - run - as - root - np 2 ./ bin / swpc_psv . x - i example / input . inf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 ------------------------------------------------------------------------------ SWPC_PSV ------------------------------------------------------------------------------ Grid Size : 384 x 384 MPI Partitioning : 2 Total Memory Size : 0.020 [ GiB ] Node Memory Size : 0.010 [ GiB ] Stability Condition c : 0.526 ( c < 1 ) Wavelength Condition r : 12.488 ( r > 5 - 10 ) Minimum velocity : 3.122 [ km/s ] Maximum velocity : 7.977 [ km/s ] Maximum frequency : 0.500 [ Hz ] ------------------------------------------------------------------------------ it = 0000050 , 0.065 s / loop , eta 000 : 01 : 01 , ( 7.40E-02 2.73E-01 ) it = 0000100 , 0.061 s / loop , eta 000 : 00 : 54 , ( 8.13E-01 2.01E+00 ) it = 0000150 , 0.062 s / loop , eta 000 : 00 : 52 , ( 7.71E-01 1.46E+00 ) it = 0000200 , 0.060 s / loop , eta 000 : 00 : 48 , ( 2.90E-01 2.56E-01 ) it = 0000250 , 0.059 s / loop , eta 000 : 00 : 44 , ( 2.21E-01 3.03E-01 ) it = 0000300 , 0.060 s / loop , eta 000 : 00 : 41 , ( 1.90E-01 3.22E-01 ) it = 0000350 , 0.058 s / loop , eta 000 : 00 : 37 , ( 1.76E-01 3.27E-01 ) it = 0000400 , 0.056 s / loop , eta 000 : 00 : 33 , ( 1.93E-01 3.23E-01 ) it = 0000450 , 0.055 s / loop , eta 000 : 00 : 30 , ( 1.92E-01 3.08E-01 ) it = 0000500 , 0.054 s / loop , eta 000 : 00 : 26 , ( 1.89E-01 3.19E-01 ) it = 0000550 , 0.054 s / loop , eta 000 : 00 : 24 , ( 1.83E-01 3.33E-01 ) it = 0000600 , 0.055 s / loop , eta 000 : 00 : 21 , ( 1.75E-01 3.34E-01 ) it = 0000650 , 0.055 s / loop , eta 000 : 00 : 19 , ( 1.70E-01 3.36E-01 ) it = 0000700 , 0.055 s / loop , eta 000 : 00 : 16 , ( 1.69E-01 3.37E-01 ) it = 0000750 , 0.055 s / loop , eta 000 : 00 : 13 , ( 1.73E-01 3.48E-01 ) it = 0000800 , 0.055 s / loop , eta 000 : 00 : 10 , ( 1.76E-01 3.53E-01 ) it = 0000850 , 0.055 s / loop , eta 000 : 00 : 08 , ( 1.77E-01 3.45E-01 ) it = 0000900 , 0.055 s / loop , eta 000 : 00 : 05 , ( 1.81E-01 3.41E-01 ) it = 0000950 , 0.055 s / loop , eta 000 : 00 : 02 , ( 1.77E-01 3.39E-01 ) it = 0001000 , 0.055 s / loop , eta 000 : 00 : 00 , ( 1.63E-01 3.36E-01 ) ------------------------------------------------------------------------------ Total time : 54.727 s ------------------------------------------------------------------------------ Note : The following floating - point exceptions are signalling : IEEE_UNDERFLOW_FLAG Note : The following floating - point exceptions are signalling : IEEE_UNDERFLOW_FLAG The warning messages regarding floating-point underflow do not matter.","title":"Execution"},{"location":"1._SetUp/0100_trial/#visualization","text":"OpenSWPC also comes with dedicated tools for visualization. 1 ! ./ bin / read_snp . x - i out / swpc . xz . v . nc - ppm - pall - mul 10 1 2 3 4 5 6 7 8 9 10 11 12 13 ppm/swpc.xz.v2.000000.ppm ppm/swpc.xz.v2.000001.ppm ppm/swpc.xz.v2.000002.ppm ppm/swpc.xz.v2.000003.ppm ppm/swpc.xz.v2.000004.ppm ppm/swpc.xz.v2.000005.ppm ppm/swpc.xz.v2.000006.ppm ppm/swpc.xz.v2.000007.ppm ppm/swpc.xz.v2.000008.ppm ppm/swpc.xz.v2.000009.ppm ppm/swpc.xz.v2.000010.ppm ... (omitted below) Let us confirm the result as an animation movie by using ffmpeg . 1 ! ffmpeg - i ppm / swpc . xz . v2 .% 6 d . ppm - qscale 0 - pix_fmt yuv420p - y swpc . mp4 1 2 3 4 5 ffmpeg version 3.4 . 11 - 0 ubuntu0 . 1 Copyright ( c ) 2000 - 2022 the FFmpeg developers built with gcc 7 ( Ubuntu 7.5 . 0 - 3 ubuntu1 ~ 18.04 ) configuration : -- prefix =/ usr -- extra - version = 0 ubuntu0 . 1 -- toolchain = hardened -- libdir =/ usr / lib / x86_64 - linux - gnu -- incdir =/ usr / include / x86_64 - linux - gnu -- enable - gpl -- disable - stripping -- enable - avresample -- enable - avisynth -- enable - gnutls -- enable - ladspa -- enable - libass -- enable - libbluray -- enable - libbs2b -- enable - libcaca -- enable - libcdio -- enable - libflite -- enable - libfontconfig -- enable - libfreetype -- enable - libfribidi -- enable - libgme -- enable - libgsm -- enable - libmp3lame -- enable - libmysofa -- enable - libopenjpeg -- enable - libopenmpt -- enable - libopus -- enable - libpulse -- enable - librubberband -- enable - librsvg -- enable - libshine -- enable - libsnappy -- enable - libsoxr -- enable - libspeex -- enable - libssh -- enable - libtheora -- enable - libtwolame -- enable - libvorbis -- enable - libvpx -- enable - libwavpack -- enable - libwebp -- enable - libx265 -- enable - libxml2 -- enable - libxvid -- enable - libzmq -- enable - libzvbi -- enable - omx -- enable - openal -- enable - opengl -- enable - sdl2 -- enable - libdc1394 -- enable - libdrm -- enable - libiec61883 -- enable - chromaprint -- enable - frei0r -- enable - libopencv -- enable - libx264 -- enable - shared ... ( omitted below ) 1 show_mp4 ( \"./swpc.mp4\" )","title":"Visualization"},{"location":"1._SetUp/0101_env/","text":"System requirements \u00b6 Executing OpenSWPC requires a Fortran compiler that can handle (at least a part of) the Fortran 2003 standard and an MPI library. The program can be run on a single CPU or CPU core without parallelization; however, the MPI library is still required. In addition, the NetCDF library, compiled by the same Fortran compiler, is recommended to use the direct input/output of the NetCDF -formatted files. The source code of OpenSWPC almost strictly follows the language standard of Fortran2003. As an exception, system calls (the system() subroutine) are used. Note that this extension is supported by most available Fortran compilers. OpenSWPC uses stream I/O, which is part of the Fortran2003 standards. This functionality may not be implemented with older compilers. This code was developed in the following environment: Apple macOS Ventura 13.0/Apple M1 Max GNU gfortran 12.2.0 OpenMPI 4.0.0 In addition, the following computers were confirmed to work with \\swpc: - Ubuntu Linux 22.0 w/ gfortran 11.3 (Intel Xeon) - JAMSTEC Earth Simulator (NEC SX Aurora Tsubasa) - Wisteria/BDEC-01 of the University of Tokyo (Fujitsu FX1000; A64FX) (The followings are obsolete architectures that no longer exist but worked in the past. ) EIC computer, ERI/UTokyo (ver. 2015; SGI Altix; intel fortran) JAMSTEC Earth Simulator (3rd generation; NEC SX-ACE; NEC compiler) AICS K computer (Fujitsu compiler) Nagoya University (FX10/Fx100; Fujitsu compiler) Linux Cent OS 6.6 (gfortran 4.9.2 & mpich) Linux Ubuntu 16.04LTS (gfortran 5.4 & OpenMPI)","title":"System requirements"},{"location":"1._SetUp/0101_env/#system-requirements","text":"Executing OpenSWPC requires a Fortran compiler that can handle (at least a part of) the Fortran 2003 standard and an MPI library. The program can be run on a single CPU or CPU core without parallelization; however, the MPI library is still required. In addition, the NetCDF library, compiled by the same Fortran compiler, is recommended to use the direct input/output of the NetCDF -formatted files. The source code of OpenSWPC almost strictly follows the language standard of Fortran2003. As an exception, system calls (the system() subroutine) are used. Note that this extension is supported by most available Fortran compilers. OpenSWPC uses stream I/O, which is part of the Fortran2003 standards. This functionality may not be implemented with older compilers. This code was developed in the following environment: Apple macOS Ventura 13.0/Apple M1 Max GNU gfortran 12.2.0 OpenMPI 4.0.0 In addition, the following computers were confirmed to work with \\swpc: - Ubuntu Linux 22.0 w/ gfortran 11.3 (Intel Xeon) - JAMSTEC Earth Simulator (NEC SX Aurora Tsubasa) - Wisteria/BDEC-01 of the University of Tokyo (Fujitsu FX1000; A64FX) (The followings are obsolete architectures that no longer exist but worked in the past. ) EIC computer, ERI/UTokyo (ver. 2015; SGI Altix; intel fortran) JAMSTEC Earth Simulator (3rd generation; NEC SX-ACE; NEC compiler) AICS K computer (Fujitsu compiler) Nagoya University (FX10/Fx100; Fujitsu compiler) Linux Cent OS 6.6 (gfortran 4.9.2 & mpich) Linux Ubuntu 16.04LTS (gfortran 5.4 & OpenMPI)","title":"System requirements"},{"location":"1._SetUp/0102_tree/","text":"Code directory tree \u00b6 1 2 3 4 5 6 7 8 9 |-- doc : manuals |-- bin : executable binaries ( *. x ) |-- example : example input files \\ -- src |-- swpc_3d : 3 D problem |-- swpc_psv : 2 D P - SV problem |-- swpc_sh : 2 D SH problem |-- tools : Miscellaneous utility codes \\ -- shared : Modules commonly used in the above programs","title":"Code directory tree"},{"location":"1._SetUp/0102_tree/#code-directory-tree","text":"1 2 3 4 5 6 7 8 9 |-- doc : manuals |-- bin : executable binaries ( *. x ) |-- example : example input files \\ -- src |-- swpc_3d : 3 D problem |-- swpc_psv : 2 D P - SV problem |-- swpc_sh : 2 D SH problem |-- tools : Miscellaneous utility codes \\ -- shared : Modules commonly used in the above programs","title":"Code directory tree"},{"location":"1._SetUp/0103_compile/","text":"Compilation and Execution \u00b6 make \u00b6 The directories src/swpc_3d , src/swpc_psv , src/swpc_sh , and src/tools contain makefile. Execute the make command in each directory to generate the executable binaries. An executable file (with a *.x extension) will be stored in the bin directory. Specifying Compiler Options \u00b6 In the makefiles, the following variables must be specified according to the environment: variable description FC compiler name FFLAGS compiler option NCFLAG NetCDF flag NCLIB location of the NetCDF library directory NCINC location of the NetCDF header file directory NETCDF linker option for NetCDF If NCFLAG = -D_NETCDF is specified, the make command will try to compile OpenSWPC with NetCDF library. A set of the above variables under different computer environments is defined in src/shared/makefile.arch and src/shared/makefile-tools.arch . The former is for the compilation of FDM codes, and the latter is for the compilation of misc tools. The user can specify the arch option in the make command as in the following example: 1 make arch = mac-gfortran In the above case, the appropriate compiler options for the architecture mac-gfortran is automatically set. In some environments, the debug option is predefined. This option is used in the following way: 1 make arch = eic debug = true The list of pre-defined architecture ( arch ) options is described in the following table. arch name target NetCDF location mac-intel Mac OSX + Intel Compiler + OpenMPI ${HOME}/local mac-gfortran Mac OSX + gfortran + Open MPI /usr/local eic EIC (ERI, UTokyo) with the Intel Compiler ${HOME}/local fx Fujitsu FX10, FX100 and the K-computer ${HOME}/xlocal es3 The Earth Simulator 3 (obsolete) Provided by the system es4 The Earth Simulator 4 Provided by the system ubuntu-gfortran Ubuntu 16.04LTS + gfortran + Open MPI Installation by apt ofp (or oak) Oakforest-PACS of the University of Tokyo (obsolete) automatically specified by the module command obcx Oakbridge-CX of the University of Tokyo (obsolete) automatically specified by the module command bdec-o Wisteria-Odyssey/BDEC01 of the University of Tokyo automatically specified by the module command More about the NetCDF library \u00b6 The NetCDF library consists of the following items: libnetcdf.* : NetCDF library file libnetcdff.* : NetCDF Fortran library file (only for the NetCDF version 4 or later) netcdf.mod : Fortran module information file The extension of the library files may be *.a (static library) or *.so (dynamic library), depending on the installation. All these files are necessary for successful compilation with NetCDF . In particular, the netcdf.mod file must be created by the same Fortran compiler as OpenSWPC . If NetCDF is installed using packaging tools such as yum, apt , or homebrew , the use of gfortran is implicitly assumed. Parameters embedded in the source code \u00b6 Although most of the controlling parameter of the OpenSWPC are given in the input parameter file at the time of execution, a few parameters shown below are embedded in the source code for improving computational performance. All of these parameters are defined in m_global.F90 . If the users edit these parameters, re-compilation ( make clean; make ) is necessary. Parameters UC Unit conversion coefficient from the computation unit (a mixed unit system using km for distance, g/cm ^3 for mass density, and km/s for seismic wave velocity) to the SI unit. If the user changes the unit of input, this parameter should be changed. The default values are 1e-15 for the 3D code and 1e-12 for the 2D codes. MP Preicsion constant for the finite difference calculation. If MP=DP (this is the default), the key calculation of the finite difference will be performed in double precision, while the other calculations are in single precision. If one changes it to MP=SP , all calculation will be done in single precision. In this case, the memory used in the 3D simulation is 2/3 as much as in the MP=DP case, and compuational speed also is faster than the default. On the other hand, single-precision calculation may lead numerical instability around the earthquake source after long-term integration. The values of DP and SP may differ at different compiler, but usually they take 8 and 4 . NM Number of viscoelastic bodies adopted in the generalized Zener body. If this number is greater than 1 , anelastic attenuation is automatically adjusted so that Q-values are approximately frequency independent in a frequency range specified by the paramreters fq_* . If this parameter is zero, the simulation is performed under the assumption of perfectly elastic body, and thus no intrinsic attenuation is taken into account. For 3D simulations, this parameter significantly affects the computation time and required memory size.","title":"Compilation and Execution"},{"location":"1._SetUp/0103_compile/#compilation-and-execution","text":"","title":"Compilation and Execution"},{"location":"1._SetUp/0103_compile/#make","text":"The directories src/swpc_3d , src/swpc_psv , src/swpc_sh , and src/tools contain makefile. Execute the make command in each directory to generate the executable binaries. An executable file (with a *.x extension) will be stored in the bin directory.","title":"make"},{"location":"1._SetUp/0103_compile/#specifying-compiler-options","text":"In the makefiles, the following variables must be specified according to the environment: variable description FC compiler name FFLAGS compiler option NCFLAG NetCDF flag NCLIB location of the NetCDF library directory NCINC location of the NetCDF header file directory NETCDF linker option for NetCDF If NCFLAG = -D_NETCDF is specified, the make command will try to compile OpenSWPC with NetCDF library. A set of the above variables under different computer environments is defined in src/shared/makefile.arch and src/shared/makefile-tools.arch . The former is for the compilation of FDM codes, and the latter is for the compilation of misc tools. The user can specify the arch option in the make command as in the following example: 1 make arch = mac-gfortran In the above case, the appropriate compiler options for the architecture mac-gfortran is automatically set. In some environments, the debug option is predefined. This option is used in the following way: 1 make arch = eic debug = true The list of pre-defined architecture ( arch ) options is described in the following table. arch name target NetCDF location mac-intel Mac OSX + Intel Compiler + OpenMPI ${HOME}/local mac-gfortran Mac OSX + gfortran + Open MPI /usr/local eic EIC (ERI, UTokyo) with the Intel Compiler ${HOME}/local fx Fujitsu FX10, FX100 and the K-computer ${HOME}/xlocal es3 The Earth Simulator 3 (obsolete) Provided by the system es4 The Earth Simulator 4 Provided by the system ubuntu-gfortran Ubuntu 16.04LTS + gfortran + Open MPI Installation by apt ofp (or oak) Oakforest-PACS of the University of Tokyo (obsolete) automatically specified by the module command obcx Oakbridge-CX of the University of Tokyo (obsolete) automatically specified by the module command bdec-o Wisteria-Odyssey/BDEC01 of the University of Tokyo automatically specified by the module command","title":"Specifying Compiler Options"},{"location":"1._SetUp/0103_compile/#more-about-the-netcdf-library","text":"The NetCDF library consists of the following items: libnetcdf.* : NetCDF library file libnetcdff.* : NetCDF Fortran library file (only for the NetCDF version 4 or later) netcdf.mod : Fortran module information file The extension of the library files may be *.a (static library) or *.so (dynamic library), depending on the installation. All these files are necessary for successful compilation with NetCDF . In particular, the netcdf.mod file must be created by the same Fortran compiler as OpenSWPC . If NetCDF is installed using packaging tools such as yum, apt , or homebrew , the use of gfortran is implicitly assumed.","title":"More about the NetCDF library"},{"location":"1._SetUp/0103_compile/#parameters-embedded-in-the-source-code","text":"Although most of the controlling parameter of the OpenSWPC are given in the input parameter file at the time of execution, a few parameters shown below are embedded in the source code for improving computational performance. All of these parameters are defined in m_global.F90 . If the users edit these parameters, re-compilation ( make clean; make ) is necessary. Parameters UC Unit conversion coefficient from the computation unit (a mixed unit system using km for distance, g/cm ^3 for mass density, and km/s for seismic wave velocity) to the SI unit. If the user changes the unit of input, this parameter should be changed. The default values are 1e-15 for the 3D code and 1e-12 for the 2D codes. MP Preicsion constant for the finite difference calculation. If MP=DP (this is the default), the key calculation of the finite difference will be performed in double precision, while the other calculations are in single precision. If one changes it to MP=SP , all calculation will be done in single precision. In this case, the memory used in the 3D simulation is 2/3 as much as in the MP=DP case, and compuational speed also is faster than the default. On the other hand, single-precision calculation may lead numerical instability around the earthquake source after long-term integration. The values of DP and SP may differ at different compiler, but usually they take 8 and 4 . NM Number of viscoelastic bodies adopted in the generalized Zener body. If this number is greater than 1 , anelastic attenuation is automatically adjusted so that Q-values are approximately frequency independent in a frequency range specified by the paramreters fq_* . If this parameter is zero, the simulation is performed under the assumption of perfectly elastic body, and thus no intrinsic attenuation is taken into account. For 3D simulations, this parameter significantly affects the computation time and required memory size.","title":"Parameters embedded in the source code"},{"location":"1._SetUp/0104_dataset/","text":"Preparing the Dataset \u00b6 Subsurface Velocity Structure Model \u00b6 In OpenSWPC , a 3D inhomogeneous medium is represented as a set of velocity discontinuities using NetCDF -formatted files. As an example of the velocity structure beneath the Japanese Archipelago, an automatic model generation script for the Japan Integrated Velocity Structure Model (JIVSM), developed and originally distributed by the Headquarters for Earthquake Research Promotion in Japan, is included. An extension of JIVSM (eJIVSM), which covers a wider area, is also provided. These velocity structure models contain the ground surface (topography and bathymetry), subsurface soil, Moho, and oceanic crust of the two subducting plates. To generate these models, the Generic Mapping Tools (GMT) is required. If the user does not use this model, the following steps may not be necessary. Model area and vertical cross sections of JIVSM/eJIVSM Area of JIVSM and eJIVSM. The colored area in the map is where the original JIVSM is defined. eJIVSM is extended to the gray-shaded area via an extrapolation. The surrounding graphs show the depth sections along the lines on the map of the model. To build this model, first go to dataset/vmodel directory, and then execute the following shell script: 1 $ ./gen_JIVSM.sh After a successful execution, 23 NetCDF -formatted files will be generated in the two model directories for JIVSM and eJIVSM . These files can be read and visualized in GMT by the grdimage or grd2xyz modules. The netcdf filename contains five integer numbers, which correspond to mass density (in kg/m {}^3 ), P wavespeed (m/s), S wavespeed (m/s), Q_P , and Q_S . They indicate the material information below the discontinuity defined in the file. List files of these NetCDF files ( jivsm.lst and ejivsm.lst ) for use in the OpenSWPC will also be generated. Station list \u00b6 An example script to generate a station list file is stored in dataset/station/gen_stlst_hinet.sh . This script generates a formatted list of the high-sensitivity seismograph network Japan (Hi-net) provided by the National Research Institute for Earth Science and Disaster Resilience (NIED). To use this script, first download the station csv list from the Hi-net website following the comments in the gen_stlst_hinet.sh file. Then, executing this bash script will result in the station list file for OpenSWPC . On Embedding Parameters \u00b6 Although most of the behavior of OpenSWPC is controlled dynamically by the input parameter file, several parameters are embedded in the source code to achieve high-computational performance, as described below. These parameters are defined in src/swpc_??/m_global.F90 . If these parameters are modified, re-compilation is necessary. Parameters UC A number to convert the simulation results into the SI unit system. Modifications may be necessary to use a different unit system. The default values are 1e-15 (3D) and 1e-12 (2D). MP Precision of the finite-difference computation. By default ( MP=DP ), i.e., parts of the computation are performed in double precision, while other unnecessary variables are defined and calculated in single precision to save memory space and computation time. The user may change it to MP=SP to switch the entire computation to single precision, which will decrease the required memory up to 2/3 and allow faster computation speeds. However, in this case, a noisy seismic waveform might be observed, in particular, near the seismic source due to the overflow of floating point numbers. NM Number of generalized Zener viscoelastic bodies. If this number is larger than 1, it represents a nearly frequency-independent constant Q model in a specified frequency range. If this is set to zero, the simulation will be conducted with an elastic body without attenuation. Increasing this number enables the reproduction of a wider frequency range of constant Q ; however, it may also result in a significant increase in the computational loads for 3D simulations.","title":"Preparing the Dataset"},{"location":"1._SetUp/0104_dataset/#preparing-the-dataset","text":"","title":"Preparing the Dataset"},{"location":"1._SetUp/0104_dataset/#subsurface-velocity-structure-model","text":"In OpenSWPC , a 3D inhomogeneous medium is represented as a set of velocity discontinuities using NetCDF -formatted files. As an example of the velocity structure beneath the Japanese Archipelago, an automatic model generation script for the Japan Integrated Velocity Structure Model (JIVSM), developed and originally distributed by the Headquarters for Earthquake Research Promotion in Japan, is included. An extension of JIVSM (eJIVSM), which covers a wider area, is also provided. These velocity structure models contain the ground surface (topography and bathymetry), subsurface soil, Moho, and oceanic crust of the two subducting plates. To generate these models, the Generic Mapping Tools (GMT) is required. If the user does not use this model, the following steps may not be necessary. Model area and vertical cross sections of JIVSM/eJIVSM Area of JIVSM and eJIVSM. The colored area in the map is where the original JIVSM is defined. eJIVSM is extended to the gray-shaded area via an extrapolation. The surrounding graphs show the depth sections along the lines on the map of the model. To build this model, first go to dataset/vmodel directory, and then execute the following shell script: 1 $ ./gen_JIVSM.sh After a successful execution, 23 NetCDF -formatted files will be generated in the two model directories for JIVSM and eJIVSM . These files can be read and visualized in GMT by the grdimage or grd2xyz modules. The netcdf filename contains five integer numbers, which correspond to mass density (in kg/m {}^3 ), P wavespeed (m/s), S wavespeed (m/s), Q_P , and Q_S . They indicate the material information below the discontinuity defined in the file. List files of these NetCDF files ( jivsm.lst and ejivsm.lst ) for use in the OpenSWPC will also be generated.","title":"Subsurface Velocity Structure Model"},{"location":"1._SetUp/0104_dataset/#station-list","text":"An example script to generate a station list file is stored in dataset/station/gen_stlst_hinet.sh . This script generates a formatted list of the high-sensitivity seismograph network Japan (Hi-net) provided by the National Research Institute for Earth Science and Disaster Resilience (NIED). To use this script, first download the station csv list from the Hi-net website following the comments in the gen_stlst_hinet.sh file. Then, executing this bash script will result in the station list file for OpenSWPC .","title":"Station list"},{"location":"1._SetUp/0104_dataset/#on-embedding-parameters","text":"Although most of the behavior of OpenSWPC is controlled dynamically by the input parameter file, several parameters are embedded in the source code to achieve high-computational performance, as described below. These parameters are defined in src/swpc_??/m_global.F90 . If these parameters are modified, re-compilation is necessary. Parameters UC A number to convert the simulation results into the SI unit system. Modifications may be necessary to use a different unit system. The default values are 1e-15 (3D) and 1e-12 (2D). MP Precision of the finite-difference computation. By default ( MP=DP ), i.e., parts of the computation are performed in double precision, while other unnecessary variables are defined and calculated in single precision to save memory space and computation time. The user may change it to MP=SP to switch the entire computation to single precision, which will decrease the required memory up to 2/3 and allow faster computation speeds. However, in this case, a noisy seismic waveform might be observed, in particular, near the seismic source due to the overflow of floating point numbers. NM Number of generalized Zener viscoelastic bodies. If this number is larger than 1, it represents a nearly frequency-independent constant Q model in a specified frequency range. If this is set to zero, the simulation will be conducted with an elastic body without attenuation. Increasing this number enables the reproduction of a wider frequency range of constant Q ; however, it may also result in a significant increase in the computational loads for 3D simulations.","title":"On Embedding Parameters"},{"location":"1._SetUp/0105_parallel/","text":"Execution \u00b6 To run the program, the MPI program is necessary, such that 1 $ mpirun -np ${ NP } ./bin/swpc_3d.x -i ${ input } where ${NP} is the number of MPI processes and ${input} is the name of the input file. Note that the mpirun command may be different for different computational systems. A file example/input.inf describes 2x2=4 parallel 3D example simulation in a homogeneous medium. To run the 3D simulation with this, try 1 $ mpirun -np 4 ./bin/swpc_3d.x -i example/input.inf Then, one will have the standard error output as follows. This result is contained in example/example.out file. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 ------------------------------------------------------------------------------ SWPC_3D ------------------------------------------------------------------------------ Grid Size : 384 x 384 x 384 MPI Partitioning : 2 x 2 Total Memory Size : 13.292 [GiB] Node Memory Size : 3.323 [GiB] Stability Condition c : 0.645 (c<1) Wavelength Condition r : 12.488 (r>5-10) Minimum velocity : 3.122 [km/s] Maximum velocity : 7.977 [km/s] Maximum frequency : 0.500 [Hz] ------------------------------------------------------------------------------ it=0000050, 1.024 s/loop, eta 000:16:12, ( 2.94E-05 2.94E-05 1.59E-04 ) it=0000100, 1.028 s/loop, eta 000:15:25, ( 1.95E-04 1.95E-04 8.87E-04 ) it=0000150, 1.023 s/loop, eta 000:14:29, ( 1.04E-04 1.04E-04 4.87E-04 ) it=0000200, 1.014 s/loop, eta 000:13:31, ( 2.62E-05 2.62E-05 4.89E-05 ) it=0000250, 1.010 s/loop, eta 000:12:37, ( 1.32E-05 1.32E-05 3.59E-05 ) it=0000300, 1.001 s/loop, eta 000:11:40, ( 1.13E-05 1.13E-05 3.16E-05 ) it=0000350, 0.996 s/loop, eta 000:10:47, ( 1.26E-05 1.26E-05 2.67E-05 ) it=0000400, 0.992 s/loop, eta 000:09:55, ( 1.13E-05 1.13E-05 2.33E-05 ) it=0000450, 0.991 s/loop, eta 000:09:05, ( 9.68E-06 9.68E-06 2.07E-05 ) it=0000500, 0.987 s/loop, eta 000:08:13, ( 9.22E-06 9.22E-06 1.98E-05 ) it=0000550, 0.984 s/loop, eta 000:07:22, ( 8.90E-06 8.90E-06 1.90E-05 ) it=0000600, 0.981 s/loop, eta 000:06:32, ( 8.37E-06 8.37E-06 1.78E-05 ) it=0000650, 0.978 s/loop, eta 000:05:42, ( 7.78E-06 7.78E-06 1.68E-05 ) it=0000700, 0.975 s/loop, eta 000:04:52, ( 7.63E-06 7.63E-06 1.59E-05 ) it=0000750, 0.973 s/loop, eta 000:04:03, ( 7.47E-06 7.47E-06 1.53E-05 ) it=0000800, 0.972 s/loop, eta 000:03:14, ( 7.01E-06 7.01E-06 1.45E-05 ) it=0000850, 0.974 s/loop, eta 000:02:26, ( 6.79E-06 6.79E-06 1.35E-05 ) it=0000900, 0.974 s/loop, eta 000:01:37, ( 7.07E-06 7.07E-06 1.28E-05 ) it=0000950, 0.973 s/loop, eta 000:00:48, ( 7.38E-06 7.38E-06 1.20E-05 ) it=0001000, 0.973 s/loop, eta 000:00:00, ( 7.22E-06 7.22E-06 1.14E-05 ) ------------------------------------------------------------------------------ Total time : 972.827 s ------------------------------------------------------------------------------``` The first part of the message contains information such as the estimated memory usage, stability condition, and wavelength condition. As shown in the above example, a stability condition of c<1 is mandatory to execute; if the specified parameter violates this condition, the program aborts immediately. In addition, the wavelength condition (the ratio of spatial grid size and minimum wavelength) is recommended to r>5-10 . During the computation, the computational speed, remaining time (eta; estimated time of arrival), and maximum velocity amplitude of the components are shown. Among them, numbers related to the computational speed may vary depending on the environment. If the computation is successful, the maximum amplitude (the three numbers in the last () ) should be the same. The above simulation requires around ~14 GB of computer memory. If this size of the simulation is difficult, try the 2D P-SV simulation with the same input parameter file along the xz cross section: 1 $ mpirun -np 2 ./bin/swpc_psv.x -i example/input.inf Note that the number of parallelization ( -np option) is different between 2D and 3D even for the same input parameter file. The output in this case is as follows. The result is almost the same as the 3D code, only the maximum amplitude is changed from 3 components to 2 components. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 ------------------------------------------------------------------------------ SWPC_PSV ------------------------------------------------------------------------------ Grid Size : 384 x 384 MPI Partitioning : 2 Total Memory Size : 0.020 [GiB] Node Memory Size : 0.010 [GiB] Stability Condition c : 0.526 (c<1) Wavelength Condition r : 12.488 (r>5-10) Minimum velocity : 3.122 [km/s] Maximum velocity : 7.977 [km/s] Maximum frequency : 0.500 [Hz] ------------------------------------------------------------------------------ it=0000050, 0.003 s/loop, eta 000:00:02, ( 7.40E-02 2.73E-01 ) it=0000100, 0.003 s/loop, eta 000:00:02, ( 8.13E-01 2.01E+00 ) it=0000150, 0.003 s/loop, eta 000:00:02, ( 7.71E-01 1.46E+00 ) it=0000200, 0.003 s/loop, eta 000:00:02, ( 2.90E-01 2.56E-01 ) it=0000250, 0.003 s/loop, eta 000:00:01, ( 2.21E-01 3.03E-01 ) it=0000300, 0.003 s/loop, eta 000:00:01, ( 1.90E-01 3.22E-01 ) it=0000350, 0.003 s/loop, eta 000:00:01, ( 1.76E-01 3.27E-01 ) it=0000400, 0.003 s/loop, eta 000:00:01, ( 1.93E-01 3.23E-01 ) it=0000450, 0.003 s/loop, eta 000:00:01, ( 1.92E-01 3.08E-01 ) it=0000500, 0.003 s/loop, eta 000:00:01, ( 1.89E-01 3.19E-01 ) it=0000550, 0.003 s/loop, eta 000:00:01, ( 1.83E-01 3.33E-01 ) it=0000600, 0.003 s/loop, eta 000:00:01, ( 1.75E-01 3.34E-01 ) it=0000650, 0.003 s/loop, eta 000:00:00, ( 1.70E-01 3.36E-01 ) it=0000700, 0.003 s/loop, eta 000:00:00, ( 1.69E-01 3.37E-01 ) it=0000750, 0.003 s/loop, eta 000:00:00, ( 1.73E-01 3.48E-01 ) it=0000800, 0.003 s/loop, eta 000:00:00, ( 1.76E-01 3.53E-01 ) it=0000850, 0.003 s/loop, eta 000:00:00, ( 1.77E-01 3.45E-01 ) it=0000900, 0.003 s/loop, eta 000:00:00, ( 1.81E-01 3.41E-01 ) it=0000950, 0.003 s/loop, eta 000:00:00, ( 1.77E-01 3.39E-01 ) it=0001000, 0.003 s/loop, eta 000:00:00, ( 1.63E-01 3.36E-01 ) ------------------------------------------------------------------------------ Total time : 2.652 s ------------------------------------------------------------------------------ The computation speed depends on the environment, but in general, the computation time is much shorter for 2D calculations than for 3D calculations. Note that the message 1 Note: The following floating-point exceptions are signalling: IEEE_UNDERFLOW_FLAG may appear after the calculation is completed, but this does not affect the calculation results.","title":"Execution"},{"location":"1._SetUp/0105_parallel/#execution","text":"To run the program, the MPI program is necessary, such that 1 $ mpirun -np ${ NP } ./bin/swpc_3d.x -i ${ input } where ${NP} is the number of MPI processes and ${input} is the name of the input file. Note that the mpirun command may be different for different computational systems. A file example/input.inf describes 2x2=4 parallel 3D example simulation in a homogeneous medium. To run the 3D simulation with this, try 1 $ mpirun -np 4 ./bin/swpc_3d.x -i example/input.inf Then, one will have the standard error output as follows. This result is contained in example/example.out file. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 ------------------------------------------------------------------------------ SWPC_3D ------------------------------------------------------------------------------ Grid Size : 384 x 384 x 384 MPI Partitioning : 2 x 2 Total Memory Size : 13.292 [GiB] Node Memory Size : 3.323 [GiB] Stability Condition c : 0.645 (c<1) Wavelength Condition r : 12.488 (r>5-10) Minimum velocity : 3.122 [km/s] Maximum velocity : 7.977 [km/s] Maximum frequency : 0.500 [Hz] ------------------------------------------------------------------------------ it=0000050, 1.024 s/loop, eta 000:16:12, ( 2.94E-05 2.94E-05 1.59E-04 ) it=0000100, 1.028 s/loop, eta 000:15:25, ( 1.95E-04 1.95E-04 8.87E-04 ) it=0000150, 1.023 s/loop, eta 000:14:29, ( 1.04E-04 1.04E-04 4.87E-04 ) it=0000200, 1.014 s/loop, eta 000:13:31, ( 2.62E-05 2.62E-05 4.89E-05 ) it=0000250, 1.010 s/loop, eta 000:12:37, ( 1.32E-05 1.32E-05 3.59E-05 ) it=0000300, 1.001 s/loop, eta 000:11:40, ( 1.13E-05 1.13E-05 3.16E-05 ) it=0000350, 0.996 s/loop, eta 000:10:47, ( 1.26E-05 1.26E-05 2.67E-05 ) it=0000400, 0.992 s/loop, eta 000:09:55, ( 1.13E-05 1.13E-05 2.33E-05 ) it=0000450, 0.991 s/loop, eta 000:09:05, ( 9.68E-06 9.68E-06 2.07E-05 ) it=0000500, 0.987 s/loop, eta 000:08:13, ( 9.22E-06 9.22E-06 1.98E-05 ) it=0000550, 0.984 s/loop, eta 000:07:22, ( 8.90E-06 8.90E-06 1.90E-05 ) it=0000600, 0.981 s/loop, eta 000:06:32, ( 8.37E-06 8.37E-06 1.78E-05 ) it=0000650, 0.978 s/loop, eta 000:05:42, ( 7.78E-06 7.78E-06 1.68E-05 ) it=0000700, 0.975 s/loop, eta 000:04:52, ( 7.63E-06 7.63E-06 1.59E-05 ) it=0000750, 0.973 s/loop, eta 000:04:03, ( 7.47E-06 7.47E-06 1.53E-05 ) it=0000800, 0.972 s/loop, eta 000:03:14, ( 7.01E-06 7.01E-06 1.45E-05 ) it=0000850, 0.974 s/loop, eta 000:02:26, ( 6.79E-06 6.79E-06 1.35E-05 ) it=0000900, 0.974 s/loop, eta 000:01:37, ( 7.07E-06 7.07E-06 1.28E-05 ) it=0000950, 0.973 s/loop, eta 000:00:48, ( 7.38E-06 7.38E-06 1.20E-05 ) it=0001000, 0.973 s/loop, eta 000:00:00, ( 7.22E-06 7.22E-06 1.14E-05 ) ------------------------------------------------------------------------------ Total time : 972.827 s ------------------------------------------------------------------------------``` The first part of the message contains information such as the estimated memory usage, stability condition, and wavelength condition. As shown in the above example, a stability condition of c<1 is mandatory to execute; if the specified parameter violates this condition, the program aborts immediately. In addition, the wavelength condition (the ratio of spatial grid size and minimum wavelength) is recommended to r>5-10 . During the computation, the computational speed, remaining time (eta; estimated time of arrival), and maximum velocity amplitude of the components are shown. Among them, numbers related to the computational speed may vary depending on the environment. If the computation is successful, the maximum amplitude (the three numbers in the last () ) should be the same. The above simulation requires around ~14 GB of computer memory. If this size of the simulation is difficult, try the 2D P-SV simulation with the same input parameter file along the xz cross section: 1 $ mpirun -np 2 ./bin/swpc_psv.x -i example/input.inf Note that the number of parallelization ( -np option) is different between 2D and 3D even for the same input parameter file. The output in this case is as follows. The result is almost the same as the 3D code, only the maximum amplitude is changed from 3 components to 2 components. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 ------------------------------------------------------------------------------ SWPC_PSV ------------------------------------------------------------------------------ Grid Size : 384 x 384 MPI Partitioning : 2 Total Memory Size : 0.020 [GiB] Node Memory Size : 0.010 [GiB] Stability Condition c : 0.526 (c<1) Wavelength Condition r : 12.488 (r>5-10) Minimum velocity : 3.122 [km/s] Maximum velocity : 7.977 [km/s] Maximum frequency : 0.500 [Hz] ------------------------------------------------------------------------------ it=0000050, 0.003 s/loop, eta 000:00:02, ( 7.40E-02 2.73E-01 ) it=0000100, 0.003 s/loop, eta 000:00:02, ( 8.13E-01 2.01E+00 ) it=0000150, 0.003 s/loop, eta 000:00:02, ( 7.71E-01 1.46E+00 ) it=0000200, 0.003 s/loop, eta 000:00:02, ( 2.90E-01 2.56E-01 ) it=0000250, 0.003 s/loop, eta 000:00:01, ( 2.21E-01 3.03E-01 ) it=0000300, 0.003 s/loop, eta 000:00:01, ( 1.90E-01 3.22E-01 ) it=0000350, 0.003 s/loop, eta 000:00:01, ( 1.76E-01 3.27E-01 ) it=0000400, 0.003 s/loop, eta 000:00:01, ( 1.93E-01 3.23E-01 ) it=0000450, 0.003 s/loop, eta 000:00:01, ( 1.92E-01 3.08E-01 ) it=0000500, 0.003 s/loop, eta 000:00:01, ( 1.89E-01 3.19E-01 ) it=0000550, 0.003 s/loop, eta 000:00:01, ( 1.83E-01 3.33E-01 ) it=0000600, 0.003 s/loop, eta 000:00:01, ( 1.75E-01 3.34E-01 ) it=0000650, 0.003 s/loop, eta 000:00:00, ( 1.70E-01 3.36E-01 ) it=0000700, 0.003 s/loop, eta 000:00:00, ( 1.69E-01 3.37E-01 ) it=0000750, 0.003 s/loop, eta 000:00:00, ( 1.73E-01 3.48E-01 ) it=0000800, 0.003 s/loop, eta 000:00:00, ( 1.76E-01 3.53E-01 ) it=0000850, 0.003 s/loop, eta 000:00:00, ( 1.77E-01 3.45E-01 ) it=0000900, 0.003 s/loop, eta 000:00:00, ( 1.81E-01 3.41E-01 ) it=0000950, 0.003 s/loop, eta 000:00:00, ( 1.77E-01 3.39E-01 ) it=0001000, 0.003 s/loop, eta 000:00:00, ( 1.63E-01 3.36E-01 ) ------------------------------------------------------------------------------ Total time : 2.652 s ------------------------------------------------------------------------------ The computation speed depends on the environment, but in general, the computation time is much shorter for 2D calculations than for 3D calculations. Note that the message 1 Note: The following floating-point exceptions are signalling: IEEE_UNDERFLOW_FLAG may appear after the calculation is completed, but this does not affect the calculation results.","title":"Execution"},{"location":"2._Parameters/0201_description/","text":"Notation of the Parameter File \u00b6 In the parameter files, one parameter is defined on each line in the following format. 1 variable_name = value The description of the values should follow Fortran notation. For example, logical (Boolean) values are denoted as .true. or .false. . Lines that do not contain an equal sign ( = ) will be neglected; in addition, lines starting with ! or # are regarded as comment lines and will be skipped. Comments can be followed by variable definitions, that is, comments can be written on the same line as the parameter definition. For example, the following parameter line will work without errors. 1 nx = 1024 ! number of grids The order of the parameter definition can be changed freely. If a parameter is not specified, OpenSWPC may use a pre-defined default variable if the missing parameter is not critical for executing computation. Note that there are parameters that must be defined explicitly. Multiple definitions of the same parameters in a single parameter file are not recommended; however, in this case, the first definition may be adopted. It is acceptable to leave blanks before and after the equal sign; however, it is not permitted to have a blank space between the minus character and succeeding numbers (e.g., \u2019- 35.0\u2019 is not allowed). It is recommended to use quotation marks around string parameters . Without them, the directory path character ('/') may be unexpectedly interpreted as a termination of the string parameter. Caution If a non-essential parameter is not given in the parameter file, an information message will be displayed in the standard error output as an example below: 1 2 [info] key XXXX is not found. [info] Use default value YYYY instead. An Example Parameter File \u00b6 The following is a full set of example parameters. In the following sections, detailed descriptions of each parameter will be given. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 !! ----------------------------------------------------------------------- !! !! !! SWPC input file !! !! ----------------------------------------------------------------------- !! !! ----------------------------------------------------------------------- !! !! Control !! title = 'swpc' !! exe title: used for output filenames odir = './out' !! output directory ntdec_r = 50 !! screen report timing (1/cycle) strict_mode = . false . !! all parameters to be explicitly definied !! ----------------------------------------------------------------------- !! !! Model/Grid Size and Area !! nproc_x = 2 !! parallelization in x-dir nproc_y = 2 !! parallelization in x-dir nx = 384 !! total grid number in x-dir ny = 384 !! total grid number in y-dir nz = 384 !! total grid number in z-dir nt = 1000 !! time step number dx = 0.5 !! grid width in x-dir dy = 0.5 !! grid width in y-dir dz = 0.5 !! grid width in z-dir dt = 0.02 !! time step width vcut = 1.5 !! minimum velocity !- smaller velocities will be increased xbeg = - 9 6.0 !! minimum in x-dir ybeg = - 9 6.0 !! minimum in y-dir zbeg = - 1 0.0 !! minimum in z-dir tbeg = 0.0 !! start time clon = 13 9.7604 !! center longitude clat = 3 5.7182 !! center latitude phi = 0.0 !! horizontal coordinate rotation !- measured clockwise from the north fq_min = 0.02 !! minimum freq. for Q-constant model fq_max = 2.00 !! maximum freq. for Q-constant model fq_ref = 1.0 !! ref. freq. for physical dispersion !! ----------------------------------------------------------------------- !! !! Snapshot Output !! snp_format = 'netcdf' !! snapshot format (netcdf) xy_ps % sw = . false . !! P&S amp. for xy section xz_ps % sw = . true . !! P&S amp. for xz section yz_ps % sw = . false . !! P&S amp. for yz section fs_ps % sw = . false . !! P&S amp. for free surface ob_ps % sw = . true . !! P&S amp. for ocean bottom xy_v % sw = . false . !! 3-comp. velocity for xy section xz_v % sw = . true . !! 3-comp. velocity for xz section yz_v % sw = . false . !! 3-comp. velocity for yz section fs_v % sw = . false . !! 3-comp. velocity for free surface ob_v % sw = . true . !! 3-comp. velocity for ocean bottom xy_u % sw = . false . !! 3-comp. disp. for xy section xz_u % sw = . true . !! 3-comp. disp. for xz section yz_u % sw = . false . !! 3-comp. disp. for yz section fs_u % sw = . false . !! 3-comp. disp. for free surface ob_u % sw = . true . !! 3-comp. disp. for ocean bottom z0_xy = 7.0 !! depth for xy cross section x0_yz = 0.0 !! x-value for yz cross section y0_xz = 0.0 !! y-value for xz cross section ntdec_s = 5 !! time decimation of snapshot !- (specify 1 for no decimation) idec = 2 !! x-decimation for snapshot jdec = 2 !! y-decimation for snapshot kdec = 2 !! z-decimation for snapshot !! ----------------------------------------------------------------------- !! !! Waveform Output !! sw_wav_v = . true . !! velocity trace output at stations sw_wav_u = . false . !! displacement trace output at stations sw_wav_stress = . false . !! stress tensor trace sw_wav_strain = . false . !! strain tansor trace ntdec_w = 5 !! time decimation of waveform output st_format = 'xy' !! station format: 'xy' or 'll' fn_stloc = './example/stloc.xy' !! station location file wav_format = 'sac' !! 'sac' or 'csf' ('sac' recommended) wav_calc_dist = . false . !! Calculate epicentral distance !! ----------------------------------------------------------------------- !! !! Earthquake Source !! !! Moment tensor source format: !! xymoij / xym0dc / llm0ij / llm0dc / xymwij / xymwdc / llmwij / llmwdc !! Body force source format: !! xy or ll stf_format = 'xym0ij' !! Basis source time function !! 'boxcar' / 'triangle' / 'herrmann' / 'kupper' / 'cosine' / 'texp' stftype = 'kupper' fn_stf = \"./example/source.dat\" !! Source grid file name !! source depth correction !! 'asis':use z value, 'bd{i}': i-th boundary (i=0...9) sdep_fit = 'asis' !! --------------------------------------------------------------------- !! !! Body force source mode !! bf_mode = . false . !! --------------------------------------------------------------------- !! !! Plane wave source mode !! pw_mode = . false . !! plane wave input. neglects fn_stf pw_ztop = 10 0. !! top z-coordinate of the initial plane wave pw_zlen = 3 0. !! wavelength of the initial plane wave pw_ps = 'p' !! 'p' P-wave 's' S-wave pw_strike = 0.0 !! strike direction of plane wave (deg.) pw_dip = 0.0 !! dip of plane wave (deg.) pw_rake = 0.0 !! rake of plane S-wave polarization (deg.) !! ----------------------------------------------------------------------- !! !! Absorbing Boundary Condition !! abc_type = 'pml' !! 'pml' or 'cerjan' na = 20 !! absorbing layer thickness stabilize_pml = . false . !! avoid low-v layer in PML region !! ----------------------------------------------------------------------- !! !! Velocity model !! vmodel_type = 'lhm' !! velocity model type 'uni'/'grd'/'lhm' is_ocean = . true . !! topography z<0 is covered by ocean topo_flatten = . false . !! Force topography variation to zero (formerly is_flatten) munk_profile = . true . !! velocity gradient inside the seawater column earth_flattening = . false . !! Earth-flattening tranformation !! --------------------------------------------------------------------- !! !! For uniform velocity model 'uni' !! vp0 = 5.0 !! P-wave velocity [km/s] vs0 = 3.0 !! S-wave velocity [km/s] rho0 = 2.7 !! mass density [g/cm^3] qp0 = 200 !! Qp qs0 = 200 !! Qs topo0 = 0 !! topography location !! --------------------------------------------------------------------- !! !! For GMT grid file input 'grd' ( requires netcdf library ) !! dir_grd = '${DATASET}/vmodel/ejivsm/' !! directory for grd file fn_grdlst = './example/grd.lst' !! grd file list node_grd = 0 !! input MPI node !! --------------------------------------------------------------------- !! !! For layered homogeneous medium model ('lhm') !! fn_lhm = 'example/lhm.dat' !! 1D velocity structure !! --------------------------------------------------------------------- !! !! For random medium models !! dir_rmed = './in/' !! location of random medium file fn_grdlst_rmed = './example/grd.lst' !! grd file list rhomin = 1.0 !! minimum density threshold fn_rmed0 = 'dummy.ns' !! vel. purturb. on a uniform media !! ----------------------------------------------------------------------- !! !! Checkpoint/Restart !! is_ckp = . false . !! perform checkpoint/restart ckpdir = './out/ckp' !! output directory ckp_interval = 1000000 !! interval for checkpoint check\uff081/cycle\uff09 ckp_time = 100000 0. !! checkpoint time ckp_seq = . true . !! sequential output mode !! ----------------------------------------------------------------------- !! !! Reciprocity Green's Function Mode !! green_mode = . false . !! reciprocity Green's function mode green_stnm = 'st01' !! virtual station name from fn_stlst green_cmp = 'z' !! virtual source direction 'x', 'y', 'z' green_trise = 1.0 !! rise time green_bforce = . false . !! also calc. body force Green's function green_maxdist = 55 0. !! horizontal limit of source grid green_fmt = 'llz' !! list file format: 'xyz' or 'llz' fn_glst = 'example/green.lst' !! Green's function grid point list !! ----------------------------------------------------------------------- !! !! MISC !! stopwatch_mode = . false . !! measure computation time at routines benchmark_mode = . false . !! benchmark mode ipad = 0 !! memory padding size for tuning jpad = 0 !! memory padding size for tuning kpad = 0 !! memory padding size for tuning","title":"Notation of the Parameter File"},{"location":"2._Parameters/0201_description/#notation-of-the-parameter-file","text":"In the parameter files, one parameter is defined on each line in the following format. 1 variable_name = value The description of the values should follow Fortran notation. For example, logical (Boolean) values are denoted as .true. or .false. . Lines that do not contain an equal sign ( = ) will be neglected; in addition, lines starting with ! or # are regarded as comment lines and will be skipped. Comments can be followed by variable definitions, that is, comments can be written on the same line as the parameter definition. For example, the following parameter line will work without errors. 1 nx = 1024 ! number of grids The order of the parameter definition can be changed freely. If a parameter is not specified, OpenSWPC may use a pre-defined default variable if the missing parameter is not critical for executing computation. Note that there are parameters that must be defined explicitly. Multiple definitions of the same parameters in a single parameter file are not recommended; however, in this case, the first definition may be adopted. It is acceptable to leave blanks before and after the equal sign; however, it is not permitted to have a blank space between the minus character and succeeding numbers (e.g., \u2019- 35.0\u2019 is not allowed). It is recommended to use quotation marks around string parameters . Without them, the directory path character ('/') may be unexpectedly interpreted as a termination of the string parameter. Caution If a non-essential parameter is not given in the parameter file, an information message will be displayed in the standard error output as an example below: 1 2 [info] key XXXX is not found. [info] Use default value YYYY instead.","title":"Notation of the Parameter File"},{"location":"2._Parameters/0201_description/#an-example-parameter-file","text":"The following is a full set of example parameters. In the following sections, detailed descriptions of each parameter will be given. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 !! ----------------------------------------------------------------------- !! !! !! SWPC input file !! !! ----------------------------------------------------------------------- !! !! ----------------------------------------------------------------------- !! !! Control !! title = 'swpc' !! exe title: used for output filenames odir = './out' !! output directory ntdec_r = 50 !! screen report timing (1/cycle) strict_mode = . false . !! all parameters to be explicitly definied !! ----------------------------------------------------------------------- !! !! Model/Grid Size and Area !! nproc_x = 2 !! parallelization in x-dir nproc_y = 2 !! parallelization in x-dir nx = 384 !! total grid number in x-dir ny = 384 !! total grid number in y-dir nz = 384 !! total grid number in z-dir nt = 1000 !! time step number dx = 0.5 !! grid width in x-dir dy = 0.5 !! grid width in y-dir dz = 0.5 !! grid width in z-dir dt = 0.02 !! time step width vcut = 1.5 !! minimum velocity !- smaller velocities will be increased xbeg = - 9 6.0 !! minimum in x-dir ybeg = - 9 6.0 !! minimum in y-dir zbeg = - 1 0.0 !! minimum in z-dir tbeg = 0.0 !! start time clon = 13 9.7604 !! center longitude clat = 3 5.7182 !! center latitude phi = 0.0 !! horizontal coordinate rotation !- measured clockwise from the north fq_min = 0.02 !! minimum freq. for Q-constant model fq_max = 2.00 !! maximum freq. for Q-constant model fq_ref = 1.0 !! ref. freq. for physical dispersion !! ----------------------------------------------------------------------- !! !! Snapshot Output !! snp_format = 'netcdf' !! snapshot format (netcdf) xy_ps % sw = . false . !! P&S amp. for xy section xz_ps % sw = . true . !! P&S amp. for xz section yz_ps % sw = . false . !! P&S amp. for yz section fs_ps % sw = . false . !! P&S amp. for free surface ob_ps % sw = . true . !! P&S amp. for ocean bottom xy_v % sw = . false . !! 3-comp. velocity for xy section xz_v % sw = . true . !! 3-comp. velocity for xz section yz_v % sw = . false . !! 3-comp. velocity for yz section fs_v % sw = . false . !! 3-comp. velocity for free surface ob_v % sw = . true . !! 3-comp. velocity for ocean bottom xy_u % sw = . false . !! 3-comp. disp. for xy section xz_u % sw = . true . !! 3-comp. disp. for xz section yz_u % sw = . false . !! 3-comp. disp. for yz section fs_u % sw = . false . !! 3-comp. disp. for free surface ob_u % sw = . true . !! 3-comp. disp. for ocean bottom z0_xy = 7.0 !! depth for xy cross section x0_yz = 0.0 !! x-value for yz cross section y0_xz = 0.0 !! y-value for xz cross section ntdec_s = 5 !! time decimation of snapshot !- (specify 1 for no decimation) idec = 2 !! x-decimation for snapshot jdec = 2 !! y-decimation for snapshot kdec = 2 !! z-decimation for snapshot !! ----------------------------------------------------------------------- !! !! Waveform Output !! sw_wav_v = . true . !! velocity trace output at stations sw_wav_u = . false . !! displacement trace output at stations sw_wav_stress = . false . !! stress tensor trace sw_wav_strain = . false . !! strain tansor trace ntdec_w = 5 !! time decimation of waveform output st_format = 'xy' !! station format: 'xy' or 'll' fn_stloc = './example/stloc.xy' !! station location file wav_format = 'sac' !! 'sac' or 'csf' ('sac' recommended) wav_calc_dist = . false . !! Calculate epicentral distance !! ----------------------------------------------------------------------- !! !! Earthquake Source !! !! Moment tensor source format: !! xymoij / xym0dc / llm0ij / llm0dc / xymwij / xymwdc / llmwij / llmwdc !! Body force source format: !! xy or ll stf_format = 'xym0ij' !! Basis source time function !! 'boxcar' / 'triangle' / 'herrmann' / 'kupper' / 'cosine' / 'texp' stftype = 'kupper' fn_stf = \"./example/source.dat\" !! Source grid file name !! source depth correction !! 'asis':use z value, 'bd{i}': i-th boundary (i=0...9) sdep_fit = 'asis' !! --------------------------------------------------------------------- !! !! Body force source mode !! bf_mode = . false . !! --------------------------------------------------------------------- !! !! Plane wave source mode !! pw_mode = . false . !! plane wave input. neglects fn_stf pw_ztop = 10 0. !! top z-coordinate of the initial plane wave pw_zlen = 3 0. !! wavelength of the initial plane wave pw_ps = 'p' !! 'p' P-wave 's' S-wave pw_strike = 0.0 !! strike direction of plane wave (deg.) pw_dip = 0.0 !! dip of plane wave (deg.) pw_rake = 0.0 !! rake of plane S-wave polarization (deg.) !! ----------------------------------------------------------------------- !! !! Absorbing Boundary Condition !! abc_type = 'pml' !! 'pml' or 'cerjan' na = 20 !! absorbing layer thickness stabilize_pml = . false . !! avoid low-v layer in PML region !! ----------------------------------------------------------------------- !! !! Velocity model !! vmodel_type = 'lhm' !! velocity model type 'uni'/'grd'/'lhm' is_ocean = . true . !! topography z<0 is covered by ocean topo_flatten = . false . !! Force topography variation to zero (formerly is_flatten) munk_profile = . true . !! velocity gradient inside the seawater column earth_flattening = . false . !! Earth-flattening tranformation !! --------------------------------------------------------------------- !! !! For uniform velocity model 'uni' !! vp0 = 5.0 !! P-wave velocity [km/s] vs0 = 3.0 !! S-wave velocity [km/s] rho0 = 2.7 !! mass density [g/cm^3] qp0 = 200 !! Qp qs0 = 200 !! Qs topo0 = 0 !! topography location !! --------------------------------------------------------------------- !! !! For GMT grid file input 'grd' ( requires netcdf library ) !! dir_grd = '${DATASET}/vmodel/ejivsm/' !! directory for grd file fn_grdlst = './example/grd.lst' !! grd file list node_grd = 0 !! input MPI node !! --------------------------------------------------------------------- !! !! For layered homogeneous medium model ('lhm') !! fn_lhm = 'example/lhm.dat' !! 1D velocity structure !! --------------------------------------------------------------------- !! !! For random medium models !! dir_rmed = './in/' !! location of random medium file fn_grdlst_rmed = './example/grd.lst' !! grd file list rhomin = 1.0 !! minimum density threshold fn_rmed0 = 'dummy.ns' !! vel. purturb. on a uniform media !! ----------------------------------------------------------------------- !! !! Checkpoint/Restart !! is_ckp = . false . !! perform checkpoint/restart ckpdir = './out/ckp' !! output directory ckp_interval = 1000000 !! interval for checkpoint check\uff081/cycle\uff09 ckp_time = 100000 0. !! checkpoint time ckp_seq = . true . !! sequential output mode !! ----------------------------------------------------------------------- !! !! Reciprocity Green's Function Mode !! green_mode = . false . !! reciprocity Green's function mode green_stnm = 'st01' !! virtual station name from fn_stlst green_cmp = 'z' !! virtual source direction 'x', 'y', 'z' green_trise = 1.0 !! rise time green_bforce = . false . !! also calc. body force Green's function green_maxdist = 55 0. !! horizontal limit of source grid green_fmt = 'llz' !! list file format: 'xyz' or 'llz' fn_glst = 'example/green.lst' !! Green's function grid point list !! ----------------------------------------------------------------------- !! !! MISC !! stopwatch_mode = . false . !! measure computation time at routines benchmark_mode = . false . !! benchmark mode ipad = 0 !! memory padding size for tuning jpad = 0 !! memory padding size for tuning kpad = 0 !! memory padding size for tuning","title":"An Example Parameter File"},{"location":"2._Parameters/0202_env/","text":"Controlling Parameters \u00b6 Parameters title Title of the computation to be used for the output filename. odir Name of output directory. This is a relative directory path from the location of the program execution. If this directory does not exist at the time of run, OpenSWPC will automatically create it. ntdec_r N umber of T ime-step DEC imation factors for screen R eporting. The maximum amplitudes of the velocity components are reported in the standard error output every ntdec_r steps. This screen output is generally used to confirm that the model is working correctly. A cycle that is too short (this parameter is too small) may slow down the computation. stopwatch_mode Measure the computation times at major subroutines and export the accumulated times to (odir)/(title).tim . This function is used for benchmarking and perforance tuning. The output *.tim file can be visualized with GMT (versions 4 or 5) via tools/timvis.gmt? . benchmark_mode If this flag is .true. , the fixed homogeneous medium and single-point moment tensor source will be selected irrespective of the parameter specification. This is used for validation and performance measurements. strict_mode (New in v5.1) If this flag is .true. , the all necessary parameter must be explicitly written in the input file. By default this parameter is set to .false. , so that OpenSWPC will use parameter-specific default values if the parameter is not found in the input file. ipad, jpad, kpad Expand the Fortran array sizes along the x-, y-, and z-directions. In some computer architectures, the computation speed is very sensitive to the array size. In such cases, slightly changing the array size using these parameters may improve the performance. The expanded array will not be used for the simulation. Therefore, the simulation result is not affected by changing this option. Benchmark Mode Until version 5.0.2, an example input file example/input.inf contained benchmark_mode = .true. which neglects many changes of parameters related to velocity structure and earthquake source. After version 5.1, this parameter is set to .false. in the example file.","title":"Controlling Parameters"},{"location":"2._Parameters/0202_env/#controlling-parameters","text":"Parameters title Title of the computation to be used for the output filename. odir Name of output directory. This is a relative directory path from the location of the program execution. If this directory does not exist at the time of run, OpenSWPC will automatically create it. ntdec_r N umber of T ime-step DEC imation factors for screen R eporting. The maximum amplitudes of the velocity components are reported in the standard error output every ntdec_r steps. This screen output is generally used to confirm that the model is working correctly. A cycle that is too short (this parameter is too small) may slow down the computation. stopwatch_mode Measure the computation times at major subroutines and export the accumulated times to (odir)/(title).tim . This function is used for benchmarking and perforance tuning. The output *.tim file can be visualized with GMT (versions 4 or 5) via tools/timvis.gmt? . benchmark_mode If this flag is .true. , the fixed homogeneous medium and single-point moment tensor source will be selected irrespective of the parameter specification. This is used for validation and performance measurements. strict_mode (New in v5.1) If this flag is .true. , the all necessary parameter must be explicitly written in the input file. By default this parameter is set to .false. , so that OpenSWPC will use parameter-specific default values if the parameter is not found in the input file. ipad, jpad, kpad Expand the Fortran array sizes along the x-, y-, and z-directions. In some computer architectures, the computation speed is very sensitive to the array size. In such cases, slightly changing the array size using these parameters may improve the performance. The expanded array will not be used for the simulation. Therefore, the simulation result is not affected by changing this option. Benchmark Mode Until version 5.0.2, an example input file example/input.inf contained benchmark_mode = .true. which neglects many changes of parameters related to velocity structure and earthquake source. After version 5.1, this parameter is set to .false. in the example file.","title":"Controlling Parameters"},{"location":"2._Parameters/0203_coord/","text":"Coordinates and Parallel Computation \u00b6 For parallel computation, OpenSWPC performs 2D model partitioning for a 3D code (see figure below) and 1D partitioning for a 2D code, in the horizontal direction in both cases. The computation is performed in Cartesian coordinates. We adopt the computational coordinate system depicted in the Figure. Figure (a) Partitioning of the computational domain for MPI. (b) Schematic of the data exchange by the MPI protocol\uff08Modified from Maeda et al., 2013 1 \uff09\uff0e By default, the coordinate axes x , y , and z represent the north, east, and depth directions, respectively. They cover the region of xbeg \\le x \\le xend , ybeg \\le y \\le yend , and zbeg \\le z \\le zend . Note that the z -axis is defined as positive downward. Because the free surface is usually defined at z=0 , it is recommended to let zbeg be a negative value to include the free surface in the model. The volume is discretized into nx , ny , and nz grids with spatial grid widths of dx , dy , and dz , respectively, in each direction. The parameter file must provide definitions of xbeg , ybeg , and zbeg and nx , ny , and nz ; other parameters ( xend , yend , and zend ) are automatically computed from them. The center of the Cartesian coordinate ( x = 0 , y = 0 ) corresponds to the center longitude ( clon ) and latitude ( clat ). The geographical coordinate is projected onto the Cartesian coordinate by the Gauss--Kr\u00fcger transform as follows (see Figure below): First generate an evenly spaced grid in Cartesian coordinates from the input parameters phi and those related to the x, y coordinates. Project the grid location onto the geographical coordinate by using the Gauss--Kr\u00fcger transform with a center location of ( clon , clat ). Obtain the medium parameter at the grid location via a bicubic interpolation of the input velocity structure model. If the specified area exceeds that of the input velocity model, the outermost value of the velocity structure is used for the extrapolation. Figure Relation between computational coordinate and geographical coordinate systems. Staggered Grid \u00b6 OpenSWPC adopts the staggered-grid coordinate system shown in the following figure. Figure Staggered grid layout in 3D space for the case of xbeg=ybeg=zbeg=0 The unit volume shown in the figure is defined as a \"voxel\" at the grid indices ( I,J,K ). A grid location x belongs to the voxel number \\begin{align} I = \\left \\lceil \\frac{ x-x_{\\text{beg}} }{ \\Delta x } \\right \\rceil, \\end{align} and if the voxel number I is given, its center coordinate location is \\begin{align} x = x_{\\text{beg}} + \\left( I - \\frac{1}{2} \\right) \\Delta x \\end{align} where \\lceil \\cdot \\rceil is a ceiling function and x_{\\text{beg}} is the minimum value of the x -coordinate. Note that x_{\\text{beg}} is set to belong to the voxel I=1 . A voxel has a volume of \\begin{align} \\begin{split} x_\\text{beg} + (I-1)\\Delta x < x \\le x_\\text{beg} + I \\Delta x, \\\\ y_\\text{beg} + (J-1)\\Delta y < y \\le y_\\text{beg} + J \\Delta y, \\\\ z_\\text{beg} + (K-1)\\Delta z < z \\le z_\\text{beg} + K \\Delta z \\end{split} \\end{align} The normal stress tensor components are defined at the center of the voxel, the shear stress is defined on the edge, and velocity vector components are defined on its surface. Medium parameters are defined at the center of the voxel at \\begin{align} x_\\text{beg} + (I-1/2) \\Delta x, \\quad y_\\text{beg} + (J-1/2) \\Delta y, \\quad z_\\text{beg} + (K-1/2) \\Delta z \\end{align} If necessary, averaging will be performed between neighboring voxels. Stability and Wavelength Conditions \u00b6 The spatial grid width, \\Delta x , \\Delta y , and \\Delta z , and the time step width, \\Delta t , must satisfy the stability condition. The stability condition in N_D -dimensional space for the order of the finite difference method P is given by \\begin{align} \\Delta t < \\frac{ 1 }{ V_{\\max} } \\left( \\sum_{i=1}^{N_D} \\frac{1}{\\Delta x_i^2} \\right)^{-1/2} \\left( \\sum_{p=1}^{P/2} C_p\\right) ^{-1} \\end{align} where V_{\\max} is the maximum velocity of the medium, C_p are the coefficients of the finite difference formula, and \\Delta x_i is the spatial grid width in the i -th direction. For the fourth-order formula of the finite difference method, which is used in the code, the coefficients are C_1 = 9/8 and C_2 = 1/24 . For example, for the fourth-order finite difference with isotropic grid sizes ( \\Delta x = \\Delta y =\\Delta z = h ) in three-dimensional space, the stability condition is reduced to \\begin{align} \\Delta t < \\frac{6}{7} \\dfrac{1}{V_{\\max} \\sqrt{ \\dfrac{1}{\\Delta x^2} + \\dfrac{1}{\\Delta y^2} +\\dfrac{1}{\\Delta z^2}}} = \\frac{6 h}{7 \\sqrt{3} V_{\\max}} \\simeq 0.495 \\frac{h}{V_{\\max}}. \\end{align} This condition can be interpreted as \"the distance that the seismic wave propagates within a single time step must be much smaller than the spatial grid width.\" The numerical simulation will diverge immediately if this condition is not satisfied. In addition, the minimum wavelength of the simulated seismic waves should be much longer than the spatial grid width . If the wavelength becomes relatively small compared to this condition, a fictitious numerical dispersion will appear and result into inaccurate later phases. Usually, the wavelength is taken to be longer than 5--10 times the spatial grid width to avoid this effect. Therefore, the minimum velocity (usually the S-wave velocity) in the velocity model should be selected carefully. One may specify a smaller spatial grid size to avoid this problem; however, in this case, the time-step size must also be shortened to satisfy the stability condition. Parameters related to the above conditions will be displayed to the standard error output when the OpenSWPC programs start computation as the Stability Condition c and the Wavelength Condition r . They representes ratios between allowed maximum timestep by the stability condition and the time step parameter dt , and between the minimum wavelength in the medium and grid spacing, respectively. The former must be smaller than 1 to perform computation. Parameters nproc_x , nproc_y Number of partitions in the x - and y -directions. The total number of partitions will be nproc_x \\times nproc_y for the 3D case and nproc_x for the 2D case. This total number of partitions must be equal to the number of processes given in mpirun . These numbers can be 1. If nproc_x=nproc_y=1 , this will become a serial (non-parallel) computation in practice. nx , ny , nz Total number of spatial grids in each direction. nx and ny do not need to be multiples of nproc_x and nproc_y , respectively. dx , dy , dz Spatial grid width in each direction in units of km. The total computational size in the physical domain will be nx \\times dx , ny \\times dy , and nz \\times dz . The grid widths in different directions do not necessarily need to be equal. nt Number of time steps. dt Length of the time step in seconds. The total physical simulation time will be nt \\times dt . xbeg , ybeg , zbeg Minimum value of the coordinates. If specifications of xbeg or ybeg are omitted, they will automatically be set to xbeg\u2006=\u2006-\u2006nx\u2006 \\times \u2006dx\u2006/\u20062 and ybeg\u2006=\u2006-\u2006ny\u2006 \\times \u2006dy\u2006/\u20062. This setting is recommended to minimize distortion due to the map projection. The default value of zbeg is -30 \\times dz . tbeg Starting time. Usually it is set to zero but can be changed if necessary. clon , clat Center longitude and latitude in degrees. The map projection will be performed with this location as a reference point. phi Horizontal rotation angle of the computational coordinate (see figure). If phi =0, the x - and y -axes correspond to the north and east directions, respectively. Note that the output files (snapshot and waveform) will be rotated if this value is nonzero. Maeda, T., Furumura, T., Noguchi, S., Takemura, S., Sakai, S., Shinohara, M., Iwai, K., & Lee, S.-J. (2013). Seismic and tsunami wave propagation of the 2011 Off the Pacific Coast of Tohoku Earthquake as inferred from the tsunami-coupled finite difference simulation, Bulletin of the Seismological Society of America , 103, 1456\u20131472, doi:10.1785/0120120118. (article link) \u21a9 Kawase, K. (2011), A general formula for calculating meridian arc length and its application to coordinate conversion in the Gauss-Kr\u00fcger projection, Bulletin of the Geospatial Information Authority of Japan , 59 , 1\u201313. (article link) \u21a9","title":"Coordinates and Parallel Computation"},{"location":"2._Parameters/0203_coord/#coordinates-and-parallel-computation","text":"For parallel computation, OpenSWPC performs 2D model partitioning for a 3D code (see figure below) and 1D partitioning for a 2D code, in the horizontal direction in both cases. The computation is performed in Cartesian coordinates. We adopt the computational coordinate system depicted in the Figure. Figure (a) Partitioning of the computational domain for MPI. (b) Schematic of the data exchange by the MPI protocol\uff08Modified from Maeda et al., 2013 1 \uff09\uff0e By default, the coordinate axes x , y , and z represent the north, east, and depth directions, respectively. They cover the region of xbeg \\le x \\le xend , ybeg \\le y \\le yend , and zbeg \\le z \\le zend . Note that the z -axis is defined as positive downward. Because the free surface is usually defined at z=0 , it is recommended to let zbeg be a negative value to include the free surface in the model. The volume is discretized into nx , ny , and nz grids with spatial grid widths of dx , dy , and dz , respectively, in each direction. The parameter file must provide definitions of xbeg , ybeg , and zbeg and nx , ny , and nz ; other parameters ( xend , yend , and zend ) are automatically computed from them. The center of the Cartesian coordinate ( x = 0 , y = 0 ) corresponds to the center longitude ( clon ) and latitude ( clat ). The geographical coordinate is projected onto the Cartesian coordinate by the Gauss--Kr\u00fcger transform as follows (see Figure below): First generate an evenly spaced grid in Cartesian coordinates from the input parameters phi and those related to the x, y coordinates. Project the grid location onto the geographical coordinate by using the Gauss--Kr\u00fcger transform with a center location of ( clon , clat ). Obtain the medium parameter at the grid location via a bicubic interpolation of the input velocity structure model. If the specified area exceeds that of the input velocity model, the outermost value of the velocity structure is used for the extrapolation. Figure Relation between computational coordinate and geographical coordinate systems.","title":"Coordinates and Parallel Computation"},{"location":"2._Parameters/0203_coord/#staggered-grid","text":"OpenSWPC adopts the staggered-grid coordinate system shown in the following figure. Figure Staggered grid layout in 3D space for the case of xbeg=ybeg=zbeg=0 The unit volume shown in the figure is defined as a \"voxel\" at the grid indices ( I,J,K ). A grid location x belongs to the voxel number \\begin{align} I = \\left \\lceil \\frac{ x-x_{\\text{beg}} }{ \\Delta x } \\right \\rceil, \\end{align} and if the voxel number I is given, its center coordinate location is \\begin{align} x = x_{\\text{beg}} + \\left( I - \\frac{1}{2} \\right) \\Delta x \\end{align} where \\lceil \\cdot \\rceil is a ceiling function and x_{\\text{beg}} is the minimum value of the x -coordinate. Note that x_{\\text{beg}} is set to belong to the voxel I=1 . A voxel has a volume of \\begin{align} \\begin{split} x_\\text{beg} + (I-1)\\Delta x < x \\le x_\\text{beg} + I \\Delta x, \\\\ y_\\text{beg} + (J-1)\\Delta y < y \\le y_\\text{beg} + J \\Delta y, \\\\ z_\\text{beg} + (K-1)\\Delta z < z \\le z_\\text{beg} + K \\Delta z \\end{split} \\end{align} The normal stress tensor components are defined at the center of the voxel, the shear stress is defined on the edge, and velocity vector components are defined on its surface. Medium parameters are defined at the center of the voxel at \\begin{align} x_\\text{beg} + (I-1/2) \\Delta x, \\quad y_\\text{beg} + (J-1/2) \\Delta y, \\quad z_\\text{beg} + (K-1/2) \\Delta z \\end{align} If necessary, averaging will be performed between neighboring voxels.","title":"Staggered Grid"},{"location":"2._Parameters/0203_coord/#stability-and-wavelength-conditions","text":"The spatial grid width, \\Delta x , \\Delta y , and \\Delta z , and the time step width, \\Delta t , must satisfy the stability condition. The stability condition in N_D -dimensional space for the order of the finite difference method P is given by \\begin{align} \\Delta t < \\frac{ 1 }{ V_{\\max} } \\left( \\sum_{i=1}^{N_D} \\frac{1}{\\Delta x_i^2} \\right)^{-1/2} \\left( \\sum_{p=1}^{P/2} C_p\\right) ^{-1} \\end{align} where V_{\\max} is the maximum velocity of the medium, C_p are the coefficients of the finite difference formula, and \\Delta x_i is the spatial grid width in the i -th direction. For the fourth-order formula of the finite difference method, which is used in the code, the coefficients are C_1 = 9/8 and C_2 = 1/24 . For example, for the fourth-order finite difference with isotropic grid sizes ( \\Delta x = \\Delta y =\\Delta z = h ) in three-dimensional space, the stability condition is reduced to \\begin{align} \\Delta t < \\frac{6}{7} \\dfrac{1}{V_{\\max} \\sqrt{ \\dfrac{1}{\\Delta x^2} + \\dfrac{1}{\\Delta y^2} +\\dfrac{1}{\\Delta z^2}}} = \\frac{6 h}{7 \\sqrt{3} V_{\\max}} \\simeq 0.495 \\frac{h}{V_{\\max}}. \\end{align} This condition can be interpreted as \"the distance that the seismic wave propagates within a single time step must be much smaller than the spatial grid width.\" The numerical simulation will diverge immediately if this condition is not satisfied. In addition, the minimum wavelength of the simulated seismic waves should be much longer than the spatial grid width . If the wavelength becomes relatively small compared to this condition, a fictitious numerical dispersion will appear and result into inaccurate later phases. Usually, the wavelength is taken to be longer than 5--10 times the spatial grid width to avoid this effect. Therefore, the minimum velocity (usually the S-wave velocity) in the velocity model should be selected carefully. One may specify a smaller spatial grid size to avoid this problem; however, in this case, the time-step size must also be shortened to satisfy the stability condition. Parameters related to the above conditions will be displayed to the standard error output when the OpenSWPC programs start computation as the Stability Condition c and the Wavelength Condition r . They representes ratios between allowed maximum timestep by the stability condition and the time step parameter dt , and between the minimum wavelength in the medium and grid spacing, respectively. The former must be smaller than 1 to perform computation. Parameters nproc_x , nproc_y Number of partitions in the x - and y -directions. The total number of partitions will be nproc_x \\times nproc_y for the 3D case and nproc_x for the 2D case. This total number of partitions must be equal to the number of processes given in mpirun . These numbers can be 1. If nproc_x=nproc_y=1 , this will become a serial (non-parallel) computation in practice. nx , ny , nz Total number of spatial grids in each direction. nx and ny do not need to be multiples of nproc_x and nproc_y , respectively. dx , dy , dz Spatial grid width in each direction in units of km. The total computational size in the physical domain will be nx \\times dx , ny \\times dy , and nz \\times dz . The grid widths in different directions do not necessarily need to be equal. nt Number of time steps. dt Length of the time step in seconds. The total physical simulation time will be nt \\times dt . xbeg , ybeg , zbeg Minimum value of the coordinates. If specifications of xbeg or ybeg are omitted, they will automatically be set to xbeg\u2006=\u2006-\u2006nx\u2006 \\times \u2006dx\u2006/\u20062 and ybeg\u2006=\u2006-\u2006ny\u2006 \\times \u2006dy\u2006/\u20062. This setting is recommended to minimize distortion due to the map projection. The default value of zbeg is -30 \\times dz . tbeg Starting time. Usually it is set to zero but can be changed if necessary. clon , clat Center longitude and latitude in degrees. The map projection will be performed with this location as a reference point. phi Horizontal rotation angle of the computational coordinate (see figure). If phi =0, the x - and y -axes correspond to the north and east directions, respectively. Note that the output files (snapshot and waveform) will be rotated if this value is nonzero. Maeda, T., Furumura, T., Noguchi, S., Takemura, S., Sakai, S., Shinohara, M., Iwai, K., & Lee, S.-J. (2013). Seismic and tsunami wave propagation of the 2011 Off the Pacific Coast of Tohoku Earthquake as inferred from the tsunami-coupled finite difference simulation, Bulletin of the Seismological Society of America , 103, 1456\u20131472, doi:10.1785/0120120118. (article link) \u21a9 Kawase, K. (2011), A general formula for calculating meridian arc length and its application to coordinate conversion in the Gauss-Kr\u00fcger projection, Bulletin of the Geospatial Information Authority of Japan , 59 , 1\u201313. (article link) \u21a9","title":"Stability and Wavelength Conditions"},{"location":"2._Parameters/0204_visco/","text":"Viscoelastic Bodies \u00b6 OpenSWPC adopts the generalized Zener body (GZB) as a model of the viscoelastic body. It consists of several viscoelastic Zener bodies with different relaxation times to attain nearly constant Q in a wide frequency range. As a consequence, it accompanies the frequency-dependent body wavespeed via physical dispersion (e.g., Aki and Richards, 2002 1 ); therefore, users should specify the reference frequency in which the velocity model is given. Figure A schematic illustration of the Generalized Zener body. Zener Body (boxes) having different chracteristic times are connnected. Figure Example of frequency dependence of the intrinsic attenuation Q^{-1} for a GZB of NM=3 . The thick solid line shows the attenuation of the entire model, while the dotted lines show the attenuation model for each constituent of the Zener body. The vertical lines show the specified minimum and maximum frequencies for the constant Q range. GZB consists of N_M Zener bodies, as schematically shown in the Figure above. This viscoelastic body is described by the relaxation functions for an elastic moduli \\pi \\equiv \\lambda + \\mu and \\mu , as \\begin{align} \\begin{split} \\psi_\\pi \\left( t \\right) &= \\pi_R \\left( 1 - \\frac{1}{N_M} \\sum_{m=1}^{N_M} \\left( 1 -\\frac{ \\tau_m^{\\epsilon P}}{\\tau_{m}^\\sigma} \\right) e^{-t/\\tau^\\sigma_m} \\right) H(t) \\\\ \\psi_\\mu \\left( t \\right) &= \\mu_R \\left( 1 - \\frac{1}{N_M} \\sum_{m=1}^{N_M} \\left( 1 -\\frac{ \\tau_m^{\\epsilon S}}{\\tau^\\sigma_m} \\right) e^{-t/\\tau^\\sigma_m} \\right) H(t) \\end{split} \\end{align} where \\tau_m^\\sigma is the relaxation time of the m -th body, \\pi_R\\equiv \\lambda_R + 2 \\mu_R and \\mu_R are the relaxed moduli, and \\tau_m^{\\varepsilon P} and \\tau_m^{\\varepsilon S} are creep times of the P- and S-waves, respectively. The wide frequency range of constant Q is achieved by connecting Zener bodies with different relaxation times. In addition, the intrinsic attenuations of the P- and S-waves ( Q_P and Q_S , respectively) can be defined independently by choosing different creep times between the elastic moduli \\pi and \\mu . \\begin{align} \\begin{split} &\\dot \\sigma_{ii} (t) = \\left( \\dot \\psi_\\pi (t) - 2 \\dot \\psi_\\mu (t) \\right) \\ast \\partial_k v_k(t) + 2 \\dot \\psi_\\mu(t) \\ast \\partial_i v_i(t) \\\\ &\\dot\\sigma_{ij} (t) = \\dot \\psi_\\mu(t) \\ast \\left( \\partial_i v_j(t) + \\partial_j v_i(t) \\right) \\end{split} \\end{align} The convolution appearing in the constitutive equation can be avoided by defining the memory variables (Robertsson, 1994 2 ) and solving the auxiliary differential equations for them. We also adopt the \\tau -method of Blanch (1994 3 ) to automatically choose the creep times that achieve a constant Q condition. Parameters fq_min Minimum frequency of the constant- Q model. fq_max Maximum frequency of the constant- Q model. fq_ref Reference frequency at which the velocity model is given. The Q^{-1} value becomes nearly constant between the frequencies of fq_min and fq_max . Outside of the band, the attenuation becomes weaker with increasing/decreasing frequency. As shown in this figure, the nearly constant Q^{-1} is achieved using three different viscoelastic bodies. If one needs to make Q^{-1} constant over a wider frequency range, the hard-coded parameter NM should be increased. However, this leads to a significant increase in the memory usage and computational loads. The frequency dependence of Q^{-1} with the parameters specified above can be investigated using the program qmodel_tau.x . Note that velocities of P and S waves depends on a frequency if one use constant- Q model at a wide frequency band. A parameter fq_ref is used as a reference frequency at which the input velocities are defined. Aki, K., & Richards, P. G. (2002), Quantitative Seismology, 2nd Edition, University Science Books. \u21a9 Robertsson, J. O., J. O. Blanch, and W. W. Symes (1994), Viscoelastic finite-difference modeling, Geophysics, 59(9), 1444\u20131456, doi:10.1190/1.1443701. \u21a9 Blanch, J. O., J. O. Robertsson, and W. W. Symes (1994), Modeling of a constant Q: methodology and algorithm for an efficient and optimally inexpensive viscoelastic technique, Geophysics, 60, 176\u2013184, doi:10.1111/j.1365-246X.2004.02300.x. \u21a9","title":"Viscoelastic Bodies"},{"location":"2._Parameters/0204_visco/#viscoelastic-bodies","text":"OpenSWPC adopts the generalized Zener body (GZB) as a model of the viscoelastic body. It consists of several viscoelastic Zener bodies with different relaxation times to attain nearly constant Q in a wide frequency range. As a consequence, it accompanies the frequency-dependent body wavespeed via physical dispersion (e.g., Aki and Richards, 2002 1 ); therefore, users should specify the reference frequency in which the velocity model is given. Figure A schematic illustration of the Generalized Zener body. Zener Body (boxes) having different chracteristic times are connnected. Figure Example of frequency dependence of the intrinsic attenuation Q^{-1} for a GZB of NM=3 . The thick solid line shows the attenuation of the entire model, while the dotted lines show the attenuation model for each constituent of the Zener body. The vertical lines show the specified minimum and maximum frequencies for the constant Q range. GZB consists of N_M Zener bodies, as schematically shown in the Figure above. This viscoelastic body is described by the relaxation functions for an elastic moduli \\pi \\equiv \\lambda + \\mu and \\mu , as \\begin{align} \\begin{split} \\psi_\\pi \\left( t \\right) &= \\pi_R \\left( 1 - \\frac{1}{N_M} \\sum_{m=1}^{N_M} \\left( 1 -\\frac{ \\tau_m^{\\epsilon P}}{\\tau_{m}^\\sigma} \\right) e^{-t/\\tau^\\sigma_m} \\right) H(t) \\\\ \\psi_\\mu \\left( t \\right) &= \\mu_R \\left( 1 - \\frac{1}{N_M} \\sum_{m=1}^{N_M} \\left( 1 -\\frac{ \\tau_m^{\\epsilon S}}{\\tau^\\sigma_m} \\right) e^{-t/\\tau^\\sigma_m} \\right) H(t) \\end{split} \\end{align} where \\tau_m^\\sigma is the relaxation time of the m -th body, \\pi_R\\equiv \\lambda_R + 2 \\mu_R and \\mu_R are the relaxed moduli, and \\tau_m^{\\varepsilon P} and \\tau_m^{\\varepsilon S} are creep times of the P- and S-waves, respectively. The wide frequency range of constant Q is achieved by connecting Zener bodies with different relaxation times. In addition, the intrinsic attenuations of the P- and S-waves ( Q_P and Q_S , respectively) can be defined independently by choosing different creep times between the elastic moduli \\pi and \\mu . \\begin{align} \\begin{split} &\\dot \\sigma_{ii} (t) = \\left( \\dot \\psi_\\pi (t) - 2 \\dot \\psi_\\mu (t) \\right) \\ast \\partial_k v_k(t) + 2 \\dot \\psi_\\mu(t) \\ast \\partial_i v_i(t) \\\\ &\\dot\\sigma_{ij} (t) = \\dot \\psi_\\mu(t) \\ast \\left( \\partial_i v_j(t) + \\partial_j v_i(t) \\right) \\end{split} \\end{align} The convolution appearing in the constitutive equation can be avoided by defining the memory variables (Robertsson, 1994 2 ) and solving the auxiliary differential equations for them. We also adopt the \\tau -method of Blanch (1994 3 ) to automatically choose the creep times that achieve a constant Q condition. Parameters fq_min Minimum frequency of the constant- Q model. fq_max Maximum frequency of the constant- Q model. fq_ref Reference frequency at which the velocity model is given. The Q^{-1} value becomes nearly constant between the frequencies of fq_min and fq_max . Outside of the band, the attenuation becomes weaker with increasing/decreasing frequency. As shown in this figure, the nearly constant Q^{-1} is achieved using three different viscoelastic bodies. If one needs to make Q^{-1} constant over a wider frequency range, the hard-coded parameter NM should be increased. However, this leads to a significant increase in the memory usage and computational loads. The frequency dependence of Q^{-1} with the parameters specified above can be investigated using the program qmodel_tau.x . Note that velocities of P and S waves depends on a frequency if one use constant- Q model at a wide frequency band. A parameter fq_ref is used as a reference frequency at which the input velocities are defined. Aki, K., & Richards, P. G. (2002), Quantitative Seismology, 2nd Edition, University Science Books. \u21a9 Robertsson, J. O., J. O. Blanch, and W. W. Symes (1994), Viscoelastic finite-difference modeling, Geophysics, 59(9), 1444\u20131456, doi:10.1190/1.1443701. \u21a9 Blanch, J. O., J. O. Robertsson, and W. W. Symes (1994), Modeling of a constant Q: methodology and algorithm for an efficient and optimally inexpensive viscoelastic technique, Geophysics, 60, 176\u2013184, doi:10.1111/j.1365-246X.2004.02300.x. \u21a9","title":"Viscoelastic Bodies"},{"location":"2._Parameters/0205_output/","text":"Simulation Data Output \u00b6 Output Datafile Format \u00b6 OpenSWPC can export two types of data: spatiotemporal snapshots and the seismic waveform at stations. For snapshot files, the user may choose from an originally defined binary format (obsolete and not recommended) or a NetCDF file (recommended). The waveforms are usually exported in SAC format. The endian conversion is not performed at the time of the data output. However, the official libraries of NetCDF and SAC automatically detect the endian format and convert them if necessary. Therefore, users do not have to worry about the differences in endian formats between machines. There is a utility program to read the original-formatted data. Note that the binary format may have slight differences for different versions of OpenSWPC . Because the format change is tracked, backward compatibility is always assured. It is recommended to use the same version of the simulation code. Header information of the waveform files \u00b6 For SAC files, the header components described in the following table are automatically set. The units of SAC files are nm/s for velocity and nm for displacement, following the standard of SAC . While the earthquake source may be represented by multiple point sources, the header always represents the source listed in the first line of the source input file. header name description kevnm title of the parameter file evlo , evla , evdp The location of the event (in degrees for horizontal, in m for depth)\uff0eIf the loctaion is given in the Cartesian coordinate, a map projection is perfomed with parameters clon and clat . o Origin time of the event listed in the first line of the source list kzdate , kztime Date and time of the execution of the simulation code b tbeg of the parameter file delta ntdec_w \\times dt mag The moment magnitude converted from the seismic moment user0 ,..., user5 Moment tensor ( m_{xx},m_{yy},m_{zz},m_{yz},m_{xz},m_{xy} ) of the first line of the source file user6 , user7 , user8 clon, clat, phi of the parameter file kstnm stnm of the parameter file stlo , stla , stdp Station location (in degrees for horizontal, in m for depth). If the loctaion is given in the Cartesian coordinate, a map projection is perfomed with parameters clon and clat . kcmpnm Vx, Vy, Vz for velocities or Ux, Uy, Uz for displacements cmpinc , cmpaz Station directions according to the coordinate specification idep 7 for velocity, \uff16 for displacement Header of the Snapshot \u00b6 The snapshot file contains the header information listed in the following table. These headers are commonly defined in either original format or NetCDF . var name type description bintype character(8) Fixed to \"STREAMIO\" codetype character(8) SWPC_3D , SWPC_PV , or SWPC_SH depending on the code hdrver integer Header version title character(80) title in the parameter file exedate integer Date and time of the execution in POSIX time coordinate character(2) Snapshot cross section: 'xy' , 'xz' , 'yz' , 'fs' , or 'ob' datatype character(2) Data type: 'ps' or 'v2' or 'v3' ns1,ns2 integer Number of data samples along the first and second axes beg1,beg2 real Coordinate value at the first data point of the axes ds1,ds2 real Snapshot grid spacing dt real Time step width of the snapshot na1,na2 real Grid numbers of the absorbing boundary layer in the snapshot nmed integer Number of stored medium parameters nsnp integer Number of snapshots per time step clon,clat real clon, clat in the parameter file v1,v2,v3 real Currently not being used Change in a SAC header evdp is measured in a unit of km after OpenSWPC version 5.0, while it was in m unit previously. For NetCDF , these headers are set as global attributes. The other headers are set following the COARDS Conventions and the CF Convention . Thanks to these rules, output NetCDF files of OpenSWPC can be directly read by many scientific visualization tools, such as ParaView, Panoply or GMT. Snapshot Data Output \u00b6 Spatiotemporal snapshot output may be created along cross sections of xy , yz , and xz profiles on the topography ( fs ) and/or on the bathymetry ( ob ). There are three types of snapshots: divergence and rotation of the velocity ( ps ), velocity ( v ), and displacement ( u ). The use of spatial and temporal decimations is recommended to reduce the I/O load and export data size. Decimation in time is specified by ntdec_s starting from it=0 (before starting the computation). In space, the decimations are performed by factors of idec , jdec , and kdec , and OpenSWPC tries to export the center of the decimation window, as schematically shown in the following figure. The numbers of exporting grids in each MPI node do not necessarily need to be the same for each node. The amplitudes of these snapshot points will be gathered to specific nodes and exported as single files. Figure Schematic of the spatial decimation for the snapshot output. The vertical dotted lines show the borders of the MPI nodes. In this example, the data at the blue grids will be exported as the snapshot data. The snapshot data will be exported from different node of computation to ballance the computational loads. section type output node yz PS 0 xz PS mod(1, nproc) xy PS mod(2, nproc) fs PS mod(3, nproc) ob PS mod(4, nproc) yz V mod(5, nproc) xz V mod(6, nproc) xy V mod(7, nproc) fs V mod(8, nproc) ob V mod(9, nproc) yz U mod(10, nproc) xz U mod(11, nproc) xy U mod(12, nproc) fs U mod(13, nproc) ob U mod(14, nproc) Parameters snp_format Datafile format of the snapshot files: \"native\" (original binary format; obsolete) or \"netcdf\" (recommended). Although the NetCDF file format is recommended for convenience in data handling, the use of this format may lead to a slight ( \\sim 10 %) increase in computation time. xy_ps%sw , xz_ps%sw , yz_ps%sw , fs_ps%sw , ob_ps%sw Flags for exporting snapshot files of the PS files ( .true. or .false. ). If they are set to .true. , the divergence and rotation vector of the particle velocity will be exported. xy_v3%sw , xz_v3%sw , yz_v3%sw , fs_v3%sw , ob_v3%sw Flags for exporting snapshot files of the velocities. xy_u3%sw , xz_u3%sw , yz_u3%sw , fs_u3%sw , ob_u3%sw Flags for exporting snapshot files of the displacements. z0_xy Depth (km) of the snapshot cross section. x0_yz X-coordinate value (km) of the snapshot cross section. y0_xz Y-coordinate value (km) of the snapshot cross section. ntdec_s Temporal decimation factor of the snapshot output. Snapshots will be exported every ntdec_s time steps. idec , jdec , kdec Spatial decimation factor of the snapshot output for the x , y , and z directions. Seismic Waveform Output \u00b6 Seismic velocity and/or displacement records at specified stations can be obtained as SAC-formatted files by setting the parameters sw_wav_v and/or sw_wav_u to .true. . Displacement records are calculated before the decimation, and therefore, they are expected to be more accurate than performing a numerical integration of the output velocity records. The traces are stored in the memory during the computation and are exported at the end. Station locations are given in Cartesian coordinates ( xy ) or geographical coordinates ( ll ), as in the following table. In the station list, lines starting with # will be ignored. Type Format 'xy' x y z name zsw 'll' lon lat z name zsw The depth of the station can be changed depending on the variable zsw in the station list, as shown in the next table. T zsw Station depth setting \u2019dep\u2019 Calculate the station location from the given station depth \u2019fsb\u2019 One grid below the free surface (for oceanic areas, the sea surface) \u2019obb\u2019 One grid below the ocean bottom (seafloor) or ground surface \u2019oba\u2019 One grid above of the ocean bottom (seafloor) or ground surface \u2019bdi\u2019 (i=0, \\cdots, 9) Internal velocity discontinuity specified by the velocity model This operation is important because the station near the free surface is occasionally located above the approximated ground surface in air due to the staircase approximation of the topography and bathymetry. Usually, it is recommended to set zsw=\u2019obb\u2019 ; this setting locates stations one-grid level below the ground surface (or seafloor). Multiple stations can be specified in the station list file. There is no fixed limit on the number of stations. The number of stations is automatically counted, and only the stations inside the computational region will be exported. Parameters sw_wav_v , sw_wav_u .true. for exporting velocity ( sw_wav_v ) and displacement ( sw_wav_v`) traces. ntdec_w Decimation factor of the waveform output. For ntdec_w=1 , traces at every computational time step will be exported. st_format :Format of the station list file. See the above table. fn_stloc Station location filename. wav_format Station file format: \u2019sac\u2019 (usual, recommended) or \u2019csf\u2019 . Strain and stress output \u00b6 By specifying sw_wav_strain = .true. and sw_wav_stress = .true. , users can obtain strain and stress time series as a SAC-formatted data file as in the case of velocity and displacement ( Experimental; new in version 5.0 ). The specification of station locations are same with the case of velocity/displacement. The output units are nondimensional for strain and [Pa] for stress data. Distance calculation mode \u00b6 In default, OpenSWPC will store the station location via stlo and stla headers of SAC , and SAC program will automatically calculate the epicentral distance. However if the input station location is given in xy coordinate and distance if very long, the error originated from the map projection is not negilible. In such cases, one may calculate epicentral distance in the OpenSWPC and store to the epdist header of SAC files, and prohibit SAC to overwright the distance header. Parameters wav_calc_dist If this parameter is .true. , calculate and store the epicentral distance and store it to the SAC header. The csf format \u00b6 Because the SAC format is defined to express the data at one component of one station in a single file, the number of files may become extraordinarily large. In this case, data transfer between computers will become very inefficient. For OpenSWPC version 3.0 or later, users can choose a concatenated SAC format (csf) for the data output by specifying wav_format=\u2019csf\u2019 . This is a set of SAC binary files connected to a single file, with headers as in the following: CSF header format identifier Fixed to 'CSFD' ntrace Number of traces in the file npts Number of samples in a trace It is assumed that the number of samples ( ntpts ) are in common in the csf format. If the csf format is selected, each parallel computation node exports waveforms in the corresponding domain into csf files for every components. Exporting large number of waveform dataset Large-scale computer systems often adopt the parallel lustre file system, which is not good at treating small but many files such as seismic wave traces in SAC format. In this case, it is recommended to use concatnated CSF format. Output Filename Conventions \u00b6 Output data names are determined by the following rules: Snapshot \u2006\u2006\u2006 (odir)/(title).(section).(type).(ext) Waveform (SAC) \u2006\u2006\u2006 (odir)/wav/(title).(stnm).(component).sac Waveform (CSF) \u2006\u2006\u2006 (odir)/wav/(title).(node-ID).(component).csf Computation time \u2006\u2006 (odir)/wav/(title).tim In the above rules, (section) takes a cross section such as xy or yz . (type) takes v or ps depending on the snapshot data type. (component) takes Vx , Vy , or Vz for the velocity or Ux , Uy , or Uz for the displacement. Extension of the snapshot ext will be nc for NetCDF and snp for the native format.","title":"Simulation Data Output"},{"location":"2._Parameters/0205_output/#simulation-data-output","text":"","title":"Simulation Data Output"},{"location":"2._Parameters/0205_output/#output-datafile-format","text":"OpenSWPC can export two types of data: spatiotemporal snapshots and the seismic waveform at stations. For snapshot files, the user may choose from an originally defined binary format (obsolete and not recommended) or a NetCDF file (recommended). The waveforms are usually exported in SAC format. The endian conversion is not performed at the time of the data output. However, the official libraries of NetCDF and SAC automatically detect the endian format and convert them if necessary. Therefore, users do not have to worry about the differences in endian formats between machines. There is a utility program to read the original-formatted data. Note that the binary format may have slight differences for different versions of OpenSWPC . Because the format change is tracked, backward compatibility is always assured. It is recommended to use the same version of the simulation code.","title":"Output Datafile Format"},{"location":"2._Parameters/0205_output/#header-information-of-the-waveform-files","text":"For SAC files, the header components described in the following table are automatically set. The units of SAC files are nm/s for velocity and nm for displacement, following the standard of SAC . While the earthquake source may be represented by multiple point sources, the header always represents the source listed in the first line of the source input file. header name description kevnm title of the parameter file evlo , evla , evdp The location of the event (in degrees for horizontal, in m for depth)\uff0eIf the loctaion is given in the Cartesian coordinate, a map projection is perfomed with parameters clon and clat . o Origin time of the event listed in the first line of the source list kzdate , kztime Date and time of the execution of the simulation code b tbeg of the parameter file delta ntdec_w \\times dt mag The moment magnitude converted from the seismic moment user0 ,..., user5 Moment tensor ( m_{xx},m_{yy},m_{zz},m_{yz},m_{xz},m_{xy} ) of the first line of the source file user6 , user7 , user8 clon, clat, phi of the parameter file kstnm stnm of the parameter file stlo , stla , stdp Station location (in degrees for horizontal, in m for depth). If the loctaion is given in the Cartesian coordinate, a map projection is perfomed with parameters clon and clat . kcmpnm Vx, Vy, Vz for velocities or Ux, Uy, Uz for displacements cmpinc , cmpaz Station directions according to the coordinate specification idep 7 for velocity, \uff16 for displacement","title":"Header information of the waveform files"},{"location":"2._Parameters/0205_output/#header-of-the-snapshot","text":"The snapshot file contains the header information listed in the following table. These headers are commonly defined in either original format or NetCDF . var name type description bintype character(8) Fixed to \"STREAMIO\" codetype character(8) SWPC_3D , SWPC_PV , or SWPC_SH depending on the code hdrver integer Header version title character(80) title in the parameter file exedate integer Date and time of the execution in POSIX time coordinate character(2) Snapshot cross section: 'xy' , 'xz' , 'yz' , 'fs' , or 'ob' datatype character(2) Data type: 'ps' or 'v2' or 'v3' ns1,ns2 integer Number of data samples along the first and second axes beg1,beg2 real Coordinate value at the first data point of the axes ds1,ds2 real Snapshot grid spacing dt real Time step width of the snapshot na1,na2 real Grid numbers of the absorbing boundary layer in the snapshot nmed integer Number of stored medium parameters nsnp integer Number of snapshots per time step clon,clat real clon, clat in the parameter file v1,v2,v3 real Currently not being used Change in a SAC header evdp is measured in a unit of km after OpenSWPC version 5.0, while it was in m unit previously. For NetCDF , these headers are set as global attributes. The other headers are set following the COARDS Conventions and the CF Convention . Thanks to these rules, output NetCDF files of OpenSWPC can be directly read by many scientific visualization tools, such as ParaView, Panoply or GMT.","title":"Header of the Snapshot"},{"location":"2._Parameters/0205_output/#snapshot-data-output","text":"Spatiotemporal snapshot output may be created along cross sections of xy , yz , and xz profiles on the topography ( fs ) and/or on the bathymetry ( ob ). There are three types of snapshots: divergence and rotation of the velocity ( ps ), velocity ( v ), and displacement ( u ). The use of spatial and temporal decimations is recommended to reduce the I/O load and export data size. Decimation in time is specified by ntdec_s starting from it=0 (before starting the computation). In space, the decimations are performed by factors of idec , jdec , and kdec , and OpenSWPC tries to export the center of the decimation window, as schematically shown in the following figure. The numbers of exporting grids in each MPI node do not necessarily need to be the same for each node. The amplitudes of these snapshot points will be gathered to specific nodes and exported as single files. Figure Schematic of the spatial decimation for the snapshot output. The vertical dotted lines show the borders of the MPI nodes. In this example, the data at the blue grids will be exported as the snapshot data. The snapshot data will be exported from different node of computation to ballance the computational loads. section type output node yz PS 0 xz PS mod(1, nproc) xy PS mod(2, nproc) fs PS mod(3, nproc) ob PS mod(4, nproc) yz V mod(5, nproc) xz V mod(6, nproc) xy V mod(7, nproc) fs V mod(8, nproc) ob V mod(9, nproc) yz U mod(10, nproc) xz U mod(11, nproc) xy U mod(12, nproc) fs U mod(13, nproc) ob U mod(14, nproc) Parameters snp_format Datafile format of the snapshot files: \"native\" (original binary format; obsolete) or \"netcdf\" (recommended). Although the NetCDF file format is recommended for convenience in data handling, the use of this format may lead to a slight ( \\sim 10 %) increase in computation time. xy_ps%sw , xz_ps%sw , yz_ps%sw , fs_ps%sw , ob_ps%sw Flags for exporting snapshot files of the PS files ( .true. or .false. ). If they are set to .true. , the divergence and rotation vector of the particle velocity will be exported. xy_v3%sw , xz_v3%sw , yz_v3%sw , fs_v3%sw , ob_v3%sw Flags for exporting snapshot files of the velocities. xy_u3%sw , xz_u3%sw , yz_u3%sw , fs_u3%sw , ob_u3%sw Flags for exporting snapshot files of the displacements. z0_xy Depth (km) of the snapshot cross section. x0_yz X-coordinate value (km) of the snapshot cross section. y0_xz Y-coordinate value (km) of the snapshot cross section. ntdec_s Temporal decimation factor of the snapshot output. Snapshots will be exported every ntdec_s time steps. idec , jdec , kdec Spatial decimation factor of the snapshot output for the x , y , and z directions.","title":"Snapshot Data Output"},{"location":"2._Parameters/0205_output/#seismic-waveform-output","text":"Seismic velocity and/or displacement records at specified stations can be obtained as SAC-formatted files by setting the parameters sw_wav_v and/or sw_wav_u to .true. . Displacement records are calculated before the decimation, and therefore, they are expected to be more accurate than performing a numerical integration of the output velocity records. The traces are stored in the memory during the computation and are exported at the end. Station locations are given in Cartesian coordinates ( xy ) or geographical coordinates ( ll ), as in the following table. In the station list, lines starting with # will be ignored. Type Format 'xy' x y z name zsw 'll' lon lat z name zsw The depth of the station can be changed depending on the variable zsw in the station list, as shown in the next table. T zsw Station depth setting \u2019dep\u2019 Calculate the station location from the given station depth \u2019fsb\u2019 One grid below the free surface (for oceanic areas, the sea surface) \u2019obb\u2019 One grid below the ocean bottom (seafloor) or ground surface \u2019oba\u2019 One grid above of the ocean bottom (seafloor) or ground surface \u2019bdi\u2019 (i=0, \\cdots, 9) Internal velocity discontinuity specified by the velocity model This operation is important because the station near the free surface is occasionally located above the approximated ground surface in air due to the staircase approximation of the topography and bathymetry. Usually, it is recommended to set zsw=\u2019obb\u2019 ; this setting locates stations one-grid level below the ground surface (or seafloor). Multiple stations can be specified in the station list file. There is no fixed limit on the number of stations. The number of stations is automatically counted, and only the stations inside the computational region will be exported. Parameters sw_wav_v , sw_wav_u .true. for exporting velocity ( sw_wav_v ) and displacement ( sw_wav_v`) traces. ntdec_w Decimation factor of the waveform output. For ntdec_w=1 , traces at every computational time step will be exported. st_format :Format of the station list file. See the above table. fn_stloc Station location filename. wav_format Station file format: \u2019sac\u2019 (usual, recommended) or \u2019csf\u2019 .","title":"Seismic Waveform Output"},{"location":"2._Parameters/0205_output/#strain-and-stress-output","text":"By specifying sw_wav_strain = .true. and sw_wav_stress = .true. , users can obtain strain and stress time series as a SAC-formatted data file as in the case of velocity and displacement ( Experimental; new in version 5.0 ). The specification of station locations are same with the case of velocity/displacement. The output units are nondimensional for strain and [Pa] for stress data.","title":"Strain and stress output"},{"location":"2._Parameters/0205_output/#distance-calculation-mode","text":"In default, OpenSWPC will store the station location via stlo and stla headers of SAC , and SAC program will automatically calculate the epicentral distance. However if the input station location is given in xy coordinate and distance if very long, the error originated from the map projection is not negilible. In such cases, one may calculate epicentral distance in the OpenSWPC and store to the epdist header of SAC files, and prohibit SAC to overwright the distance header. Parameters wav_calc_dist If this parameter is .true. , calculate and store the epicentral distance and store it to the SAC header.","title":"Distance calculation mode"},{"location":"2._Parameters/0205_output/#the-csf-format","text":"Because the SAC format is defined to express the data at one component of one station in a single file, the number of files may become extraordinarily large. In this case, data transfer between computers will become very inefficient. For OpenSWPC version 3.0 or later, users can choose a concatenated SAC format (csf) for the data output by specifying wav_format=\u2019csf\u2019 . This is a set of SAC binary files connected to a single file, with headers as in the following: CSF header format identifier Fixed to 'CSFD' ntrace Number of traces in the file npts Number of samples in a trace It is assumed that the number of samples ( ntpts ) are in common in the csf format. If the csf format is selected, each parallel computation node exports waveforms in the corresponding domain into csf files for every components. Exporting large number of waveform dataset Large-scale computer systems often adopt the parallel lustre file system, which is not good at treating small but many files such as seismic wave traces in SAC format. In this case, it is recommended to use concatnated CSF format.","title":"The csf format"},{"location":"2._Parameters/0205_output/#output-filename-conventions","text":"Output data names are determined by the following rules: Snapshot \u2006\u2006\u2006 (odir)/(title).(section).(type).(ext) Waveform (SAC) \u2006\u2006\u2006 (odir)/wav/(title).(stnm).(component).sac Waveform (CSF) \u2006\u2006\u2006 (odir)/wav/(title).(node-ID).(component).csf Computation time \u2006\u2006 (odir)/wav/(title).tim In the above rules, (section) takes a cross section such as xy or yz . (type) takes v or ps depending on the snapshot data type. (component) takes Vx , Vy , or Vz for the velocity or Ux , Uy , or Uz for the displacement. Extension of the snapshot ext will be nc for NetCDF and snp for the native format.","title":"Output Filename Conventions"},{"location":"2._Parameters/0206_vmodel/","text":"Velocity Model \u00b6 Choice of Velocity Model Type \u00b6 Users can choose a uniform ( uni ), a layered homogeneous medium ( lhm ), or a NetCDF (grd) file input ( grd ) velocity type. In addition, a randomly inhomogeneous medium calculated by an external program can be overlaid onto the model. Parameters vmodel_type Specify the input velocity model. Choose from one of the following. \u2019uni\u2019 omogeneous medium with a free surface. The following additional parameters are required: vp0 : P-wave velocity [km/s] in the uniform model. vs0 : S-wave velocity [km/s] in the uniform model. rho0 : Mass density [g/cm {}^3 ] in the uniform model. qp0 : Q_P of the uniform model. qs0 : Q_S of the uniform model. topo0 : Topography depth in the uniform model. If this value is greater than zero, seawater is filled from z=0 to this depth. \u2019lhm\u2019 Layered Homogeneous Medium. The one-dimensional velocity structure file should be specified as below. fn_lhm : Medium specification file. Each line specifies the depth of the top of the layer, density, P-wave velocity, S-wave velocity, Q_P , and Q_S below that depth. They must be separated by space(s) (see following example). Lines starting with # will be neglected. 1 2 3 4 5 6 7 8 9 10 # depth rho(g/cm^3) vp(km/s) vs(km/s) Qp Qs # ------------------------------------------------------- 0 2.300 5.50 3.14 600 300 3 2.400 6.00 3.55 600 300 18 2.800 6.70 3.83 600 300 33 3.200 7.80 4.46 600 300 100 3.300 8.00 4.57 600 300 225 3.400 8.40 4.80 600 300 325 3.500 8.60 4.91 600 300 425 3.700 9.30 5.31 600 300 \u2019grd\u2019 Velocity model input from NetCDF (GMT grd) files. The compilation of OpenSWPC should be performed in accompaniment with the use of the NetCDF library. The following parameters are required. dir_grd : Directory of the velocity structure ( NetCDF ) files. fn_grdslt : List file that specifies the grd files and the associated medium. Each line contains the grd filename (with a single or double quotation mark; recommended), density, P-wave velocity, S-wave velocity, Q_P , Q_S , and the layer number integers (0-9) separated by spaces (see following example). Lines starting with # will be neglected. The layer number is used to specify the source or station depth fit to the layer depth. The first NetCDF file will be treated as the ground surface. If the depth of the ground surface is deeper than zero, the depth range from z = 0 to the surface is assumed to be an ocean layer. The grid above the free surface is treated as an air column. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # grd filename rho vp vs QP QS sw # ------------------------------------------------------- ' eJIVSM_01_TAB_ . grd ' 1.80 1.70 0.35 119 70 0 ' eJIVSM_02_BSM_ . grd ' 1.95 1.80 0.50 170 100 0 ' eJIVSM_03_BSM_ . grd ' 2.00 2.00 0.60 204 120 0 ' eJIVSM_04_BSM_ . grd ' 2.05 2.10 0.70 238 140 0 ' eJIVSM_05_BSM_ . grd ' 2.07 2.20 0.80 272 160 0 ' eJIVSM_06_BSM_ . grd ' 2.10 2.30 0.90 306 180 0 ' eJIVSM_07_BSM_ . grd ' 2.15 2.40 1.00 340 200 0 ' eJIVSM_08_BSM_ . grd ' 2.20 2.70 1.30 442 260 0 ' eJIVSM_09_BSM_ . grd ' 2.25 3.00 1.50 510 300 0 ' eJIVSM_10_BSM_ . grd ' 2.30 3.20 1.70 578 340 0 ' eJIVSM_11_BSM_ . grd ' 2.35 3.50 2.00 680 400 0 ' eJIVSM_12_BSM_ . grd ' 2.45 4.20 2.40 680 400 0 ' eJIVSM_13_BSM_ . grd ' 2.60 5.00 2.90 680 400 0 ' eJIVSM_14_BSM_ . grd ' 2.65 5.50 3.20 680 400 0 ' eJIVSM_15_UPC_ . grd ' 2.70 5.80 3.40 680 400 0 ' eJIVSM_16_LWC_ . grd ' 2.80 6.40 3.80 680 400 0 ' eJIVSM_17_CTM_ . grd ' 3.20 7.50 4.50 850 500 0 ' eJIVSM_18_PH2_ . grd ' 2.40 5.00 2.90 340 200 1 ' eJIVSM_19_PH3_ . grd ' 2.90 6.80 4.00 510 300 0 ' eJIVSM_20_PHM_ . grd ' 3.20 8.00 4.70 850 500 0 ' eJIVSM_21_PA2_ . grd ' 2.60 5.40 2.80 340 200 2 ' eJIVSM_22_PA3_ . grd ' 2.80 6.50 3.50 510 300 0 ' eJIVSM_23_PAM_ . grd ' 3.40 8.10 4.60 850 500 0 node_grd : MPI node to input the NetCDF data. All NetCDF files are first read by this node, and then, transferred to all nodes via MPI data communication. is_ocean : In the default ( .true. ), the depth from z = 0 to the set topography will be treated as an ocean layer. If this parameter is set to .false. , the seafloor will be used as a free surface and no seawater will be used. topo_flatten : Make topography variatinon flat by offsetting the medium below. Renaming is_flatten to topo_flatten This option used to be is_flatten until Version 5.1, but has been renamed to avoid confusion with the earth_flattening option implemented in Version 5.2. \u2019user\u2019 A user subroutine defined in src/swpc_*/m_vmodel_user.F90 is used for defining velocity model. Recompilation of the code is necessary if this Fortran file is modified. Please refer the comments in the file for input/output of the user subroutine. vcut Cut-off velocity. For the \u2019lhm\u2019 or \u2019grd\u2019 models, a velocity slower than this value will be overwritten by the vcut value. This parameter is used to avoid wavelengths that are too short and violate the wavelength condition (the wavelength is recommended to be longer than 5-10 grids). This substitution will not be performed in the oceanic area. munk_profile (new in version 5.2) If this value is .true. , the Munk's profile with minima is applied in the seawater layer. Otherwise a constant value of 1.5 km/s is used. See the explanation in the next section. earth_flattening (new in version 5.2) If this option is .true. , OpenSWPC performs the transformation the Cartesian coordinate to pseudo-spherical coordinate by means of the Earth-flattening tranformation (e.g., Aki and Richards, Box 9.2). This option may be useful for reproducing accurate arrival time of seismic waves for long (~500 km or more) traveling distances and/or for deep-focus earthquake. Please be noted that this transformation is not exact in P-SV and 3D models. Warning The implementation of earth_flattening mode in version 5.2 is still in the experimental stage. Please use it with caution. On Treatments of Air and Seawater Layer \u00b6 In OpenSWPC , the air column has a mass density of \\rho=0.001 [g/cm {}^3 ], velocities of V_P = V_S = 0 [km/s], and intrinsic attenuation parameters of Q^P = Q^S = 10^{10} . The air column is treated as a vacuum with no seismic wave propagation (with zero velocities). However, the mass density in the air column must not be zero to avoid division by zero . In the ocean column, \\rho= 1.0 [g/cm {}^3 ], V_S = 0.0 [km/s], and Q^P = Q^S = 10^6 are assumed. The attenuation of underwater sound waves is known to be very small, so we have introduced a very large Q values that are virtually unattenuated. The P-wave velocity is V_P=1.5 km/s, but in the version 5.2 and later, the depth-dependent Munk's profile which is defined the equation below can be used by setting munk_profile = .true. . \\begin{align*} &V_P(z) = 1.5 \\times \\left[ 1.0 + 0.00737 \\left( z_b - 1 + e^{-zb} \\right) \\right] \\text{[m/s]}\\\\ &z_b = 2(z-1.3) /1.3 \\end{align*} where the unit of z is km. This profile contains a minima which corresponds to the SOFAR channel at a depth of 1300 m. In the free surface and seafloor, the reduced order of the finite difference is performed according to Okamoto and Takenaka (2005 1 ) and Maeda and Furumura (2003 2 ). These discontinuities are automatically detected as boundaries that change \\mu and \\lambda from zero to a finite value. Small-Scale Random Inhomogeneity \u00b6 Users may overlay small-scale velocity inhomogeneities with specified power-law spectra on the background velocity models of \u2019uni\u2019 , \u2019lhm\u2019 , and \u2019grd\u2019 . The small-scale velocity inhomogeneity \\xi is defined by external files. From the average velocities V_{P0} , V_{S0} , and \\rho_0 , the fluctuated velocities and density are given as \\begin{align} V_P = V_{P0} \\left( 1 + \\xi \\right) , \\, V_S = V_{S0} \\left( 1 + \\xi \\right) , \\, \\rho = \\rho_0 \\left( 1 + \\nu \\xi \\right) \\end{align} where \\nu=0.8 is a scaling parameter based on a laboratory experiment (Sato et al., 2012 3 ). Velocity models having this small-scale inhomogeneity are specified by appending _rmed to the original velocity models: vmodel_type=\u2019uni_rmed\u2019 , \u2019lhm_rmed\u2019 , or \u2019grd_rmed\u2019 . The random media files are generated by a separated program. See this section for details. Parameters dir_rmed A directory name for storing the random media data files. The random media are given as two- or three-dimensional NetCDF files. At each grid location, the velocity fluctuation \\xi(I,J,K) is defined. The code automatically reads the corresponding volume from the file; It is not necessary to decompose the NetCDF files into parts for parallel computation. If the computational size ( Nx, Ny, Nz ) is larger than the random media file size, the media is used repeatedly by applying a circular boundary condition. The simulation codes do not care if the grid sizes of the simulation and the input random media file are identical. Note that users may use the 3D random media files for 2D calculation. Parameters for uni_rmed \u00b6 The following parameter is required in addition to the parameters used in vmodel=\u2019uni\u2019 . Parameters fn_rmed0 Name of the random medium file. In this model, the average velocity will be fluctuated based on the input fn_rmed0 . Parameters for lhm_rmed \u00b6 In this model, the small-scale velocity fluctuation is applied to every layer defined by vmodel=\u2019lhm\u2019 . It is possible to assign different random velocity models at different layers. The following parameter is substituted in fn_lhm : Parameters fn_lhm_rmed List file of the velocity structure. The list file has a similar format to fn_lhm ; it contains the filenames of the random media files in the rightmost column as in the following example. 1 2 3 4 5 6 7 8 9 10 # depth rho(g/cm^3) vp(km/s) vs(km/s) Qp Qs fn_rmed # ---------------------------------------------------------------------- 0 2.300 5.50 3.14 600 300 rmedia1 . nc 3 2.400 6.00 3.55 600 300 rmedia1 . nc 18 2.800 6.70 3.83 600 300 rmedia2 . nc 33 3.200 7.80 4.46 600 300 rmedia2 . nc 100 3.300 8.00 4.57 600 300 - 225 3.400 8.40 4.80 600 300 - 325 3.500 8.60 4.91 600 300 - 425 3.700 9.30 5.31 600 300 - In this example, the layers starting from depths of 0 km and 3 km have fluctuations defined in rmedia1.nc , and the layers from 18 km and 33 km are defined in rmedia2.nc . For the layer deeper than 100 km, a dummy filename ( - ) is given. In this case (i.e., there is no file found), a fluctuation will not be given. The dummy filename is mandatory in this case. Parameters for grd_rmed \u00b6 When overlaying the random fluctuations to the layers defined by the model of vmodel=\u2019grd\u2019 , it is possible to assign different random media to different layers. The starting depth of the velocity fluctuation can be either the free surface or depths defined by a layer. The filename of the velocity fluctuation is given by the following parameter: Parameters fn_grdlst_rmed A list file that specifies the velocity layer and the random fluctuation files for each layer. The list file has two additional columns at the right: the filename of the random medium and the reference layer number. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # grd filename rho vp vs QP QS sw fn_rmed ref # ----------------------------------------------------------------------- ' eJIVSM_01_TAB_ . grd ' 1.80 1.70 0.35 119 70 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_02_BSM_ . grd ' 1.95 1.80 0.50 170 100 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_03_BSM_ . grd ' 2.00 2.00 0.60 204 120 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_04_BSM_ . grd ' 2.05 2.10 0.70 238 140 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_05_BSM_ . grd ' 2.07 2.20 0.80 272 160 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_06_BSM_ . grd ' 2.10 2.30 0.90 306 180 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_07_BSM_ . grd ' 2.15 2.40 1.00 340 200 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_08_BSM_ . grd ' 2.20 2.70 1.30 442 260 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_09_BSM_ . grd ' 2.25 3.00 1.50 510 300 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_10_BSM_ . grd ' 2.30 3.20 1.70 578 340 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_11_BSM_ . grd ' 2.35 3.50 2.00 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_12_BSM_ . grd ' 2.45 4.20 2.40 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_13_BSM_ . grd ' 2.60 5.00 2.90 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_14_BSM_ . grd ' 2.65 5.50 3.20 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_15_UPC_ . grd ' 2.70 5.80 3.40 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_16_LWC_ . grd ' 2.80 6.40 3.80 680 400 0 ' rmed3d_3 . nc ' 0 ' eJIVSM_17_CTM_ . grd ' 3.20 7.50 4.50 850 500 0 ' rmed3d_3 . nc ' 0 ' eJIVSM_18_PH2_ . grd ' 2.40 5.00 2.90 340 200 1 ' rmed3d_2 . nc ' 18 ' eJIVSM_19_PH3_ . grd ' 2.90 6.80 4.00 510 300 0 ' rmed3d_2 . nc ' 18 ' eJIVSM_20_PHM_ . grd ' 3.20 8.00 4.70 850 500 0 ' rmed3d_3 . nc ' 18 ' eJIVSM_21_PA2_ . grd ' 2.60 5.40 2.80 340 200 2 ' rmed3d_2 . nc ' 21 ' eJIVSM_22_PA3_ . grd ' 2.80 6.50 3.50 510 300 0 ' rmed3d_2 . nc ' 21 ' eJIVSM_23_PAM_ . grd ' 3.40 8.10 4.60 850 500 0 ' rmed3d_3 . nc ' 21 The reference layer number defines the reference depth plane of the random media. If this number is zero, the depth grid number of the computational model is directly used to assign the random media. This is exactly the same as the behavior of the uni_rmed or lhm_rmed models. If the nonzero value of the reference layer number NR is specified, the depth of the NR layer is treated as the base plane. The depth grid of the random medium is measured from this depth. Introducing this reference plane, the inclined random media according to the velocity discontinuity (such as the plate boundary) can be specified. In the above example, the 18th and 21st layers are treated as the references of 18--20th and 21--23th layers, respectively. Truncation of Velocity Fluctuations \u00b6 If the magnitude of the velocity fluctuation becomes too large, there can be a spot with non-physical velocity, such as negative velocity or a velocity too large for the Earth medium. The simulation may be unstable under the following conditions: The fluctuated velocity V=(1+\\xi)V_0 exceeds the stability condition for cases with \\xi>0 . The velocity has unrealistic negative values for cases with \\xi<-1.0 . The mass density has negative values for cases with \\xi<-1.25 . To avoid such situations, OpenSWPC automatically limits the range of the fluctuated velocity to vcut \\le v \\le 0.95 \\times v_\\text{max} , where vcut is an input parameter and v_\\text{max} is the maximum possible velocity derived from the stability condition. In addition, the following parameter controls the minimum density. Parameters rhomin Minimum mass density in g/cm {}^3 . (1.0 g/cm {}^3 by default.) Okamoto, T., and H. Takenaka (2005). Fluid-solid boundary implementation in the velocity-stress finite- difference method, Zisin 2 , 57 , 355\u2013364, doi:10.4294/zisin1948.57.3_355. (in Japanese with English Abstract) (article link) \u21a9 Maeda, T., and T. Furumura (2013), FDM simulation of seismic waves, ocean acoustic waves, and tsunamis based on tsunami-coupled equations of motion, Pure Appl. Geophys. , 170 (1-2), 109\u2013127, doi:10.1007/s00024-011-0430-z. (article link) \u21a9 Sato, H., M. C. Fehler, and T. Maeda (2012), Seismic Wave Propagation and Scattering in the Heterogeneous Earth: Second Edition , Springer Berlin Heidelberg, Berlin, Heidelberg, doi:10.1007/978-3-642-23029-5. \u21a9","title":"Velocity Model"},{"location":"2._Parameters/0206_vmodel/#velocity-model","text":"","title":"Velocity Model"},{"location":"2._Parameters/0206_vmodel/#choice-of-velocity-model-type","text":"Users can choose a uniform ( uni ), a layered homogeneous medium ( lhm ), or a NetCDF (grd) file input ( grd ) velocity type. In addition, a randomly inhomogeneous medium calculated by an external program can be overlaid onto the model. Parameters vmodel_type Specify the input velocity model. Choose from one of the following. \u2019uni\u2019 omogeneous medium with a free surface. The following additional parameters are required: vp0 : P-wave velocity [km/s] in the uniform model. vs0 : S-wave velocity [km/s] in the uniform model. rho0 : Mass density [g/cm {}^3 ] in the uniform model. qp0 : Q_P of the uniform model. qs0 : Q_S of the uniform model. topo0 : Topography depth in the uniform model. If this value is greater than zero, seawater is filled from z=0 to this depth. \u2019lhm\u2019 Layered Homogeneous Medium. The one-dimensional velocity structure file should be specified as below. fn_lhm : Medium specification file. Each line specifies the depth of the top of the layer, density, P-wave velocity, S-wave velocity, Q_P , and Q_S below that depth. They must be separated by space(s) (see following example). Lines starting with # will be neglected. 1 2 3 4 5 6 7 8 9 10 # depth rho(g/cm^3) vp(km/s) vs(km/s) Qp Qs # ------------------------------------------------------- 0 2.300 5.50 3.14 600 300 3 2.400 6.00 3.55 600 300 18 2.800 6.70 3.83 600 300 33 3.200 7.80 4.46 600 300 100 3.300 8.00 4.57 600 300 225 3.400 8.40 4.80 600 300 325 3.500 8.60 4.91 600 300 425 3.700 9.30 5.31 600 300 \u2019grd\u2019 Velocity model input from NetCDF (GMT grd) files. The compilation of OpenSWPC should be performed in accompaniment with the use of the NetCDF library. The following parameters are required. dir_grd : Directory of the velocity structure ( NetCDF ) files. fn_grdslt : List file that specifies the grd files and the associated medium. Each line contains the grd filename (with a single or double quotation mark; recommended), density, P-wave velocity, S-wave velocity, Q_P , Q_S , and the layer number integers (0-9) separated by spaces (see following example). Lines starting with # will be neglected. The layer number is used to specify the source or station depth fit to the layer depth. The first NetCDF file will be treated as the ground surface. If the depth of the ground surface is deeper than zero, the depth range from z = 0 to the surface is assumed to be an ocean layer. The grid above the free surface is treated as an air column. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # grd filename rho vp vs QP QS sw # ------------------------------------------------------- ' eJIVSM_01_TAB_ . grd ' 1.80 1.70 0.35 119 70 0 ' eJIVSM_02_BSM_ . grd ' 1.95 1.80 0.50 170 100 0 ' eJIVSM_03_BSM_ . grd ' 2.00 2.00 0.60 204 120 0 ' eJIVSM_04_BSM_ . grd ' 2.05 2.10 0.70 238 140 0 ' eJIVSM_05_BSM_ . grd ' 2.07 2.20 0.80 272 160 0 ' eJIVSM_06_BSM_ . grd ' 2.10 2.30 0.90 306 180 0 ' eJIVSM_07_BSM_ . grd ' 2.15 2.40 1.00 340 200 0 ' eJIVSM_08_BSM_ . grd ' 2.20 2.70 1.30 442 260 0 ' eJIVSM_09_BSM_ . grd ' 2.25 3.00 1.50 510 300 0 ' eJIVSM_10_BSM_ . grd ' 2.30 3.20 1.70 578 340 0 ' eJIVSM_11_BSM_ . grd ' 2.35 3.50 2.00 680 400 0 ' eJIVSM_12_BSM_ . grd ' 2.45 4.20 2.40 680 400 0 ' eJIVSM_13_BSM_ . grd ' 2.60 5.00 2.90 680 400 0 ' eJIVSM_14_BSM_ . grd ' 2.65 5.50 3.20 680 400 0 ' eJIVSM_15_UPC_ . grd ' 2.70 5.80 3.40 680 400 0 ' eJIVSM_16_LWC_ . grd ' 2.80 6.40 3.80 680 400 0 ' eJIVSM_17_CTM_ . grd ' 3.20 7.50 4.50 850 500 0 ' eJIVSM_18_PH2_ . grd ' 2.40 5.00 2.90 340 200 1 ' eJIVSM_19_PH3_ . grd ' 2.90 6.80 4.00 510 300 0 ' eJIVSM_20_PHM_ . grd ' 3.20 8.00 4.70 850 500 0 ' eJIVSM_21_PA2_ . grd ' 2.60 5.40 2.80 340 200 2 ' eJIVSM_22_PA3_ . grd ' 2.80 6.50 3.50 510 300 0 ' eJIVSM_23_PAM_ . grd ' 3.40 8.10 4.60 850 500 0 node_grd : MPI node to input the NetCDF data. All NetCDF files are first read by this node, and then, transferred to all nodes via MPI data communication. is_ocean : In the default ( .true. ), the depth from z = 0 to the set topography will be treated as an ocean layer. If this parameter is set to .false. , the seafloor will be used as a free surface and no seawater will be used. topo_flatten : Make topography variatinon flat by offsetting the medium below. Renaming is_flatten to topo_flatten This option used to be is_flatten until Version 5.1, but has been renamed to avoid confusion with the earth_flattening option implemented in Version 5.2. \u2019user\u2019 A user subroutine defined in src/swpc_*/m_vmodel_user.F90 is used for defining velocity model. Recompilation of the code is necessary if this Fortran file is modified. Please refer the comments in the file for input/output of the user subroutine. vcut Cut-off velocity. For the \u2019lhm\u2019 or \u2019grd\u2019 models, a velocity slower than this value will be overwritten by the vcut value. This parameter is used to avoid wavelengths that are too short and violate the wavelength condition (the wavelength is recommended to be longer than 5-10 grids). This substitution will not be performed in the oceanic area. munk_profile (new in version 5.2) If this value is .true. , the Munk's profile with minima is applied in the seawater layer. Otherwise a constant value of 1.5 km/s is used. See the explanation in the next section. earth_flattening (new in version 5.2) If this option is .true. , OpenSWPC performs the transformation the Cartesian coordinate to pseudo-spherical coordinate by means of the Earth-flattening tranformation (e.g., Aki and Richards, Box 9.2). This option may be useful for reproducing accurate arrival time of seismic waves for long (~500 km or more) traveling distances and/or for deep-focus earthquake. Please be noted that this transformation is not exact in P-SV and 3D models. Warning The implementation of earth_flattening mode in version 5.2 is still in the experimental stage. Please use it with caution.","title":"Choice of Velocity Model Type"},{"location":"2._Parameters/0206_vmodel/#on-treatments-of-air-and-seawater-layer","text":"In OpenSWPC , the air column has a mass density of \\rho=0.001 [g/cm {}^3 ], velocities of V_P = V_S = 0 [km/s], and intrinsic attenuation parameters of Q^P = Q^S = 10^{10} . The air column is treated as a vacuum with no seismic wave propagation (with zero velocities). However, the mass density in the air column must not be zero to avoid division by zero . In the ocean column, \\rho= 1.0 [g/cm {}^3 ], V_S = 0.0 [km/s], and Q^P = Q^S = 10^6 are assumed. The attenuation of underwater sound waves is known to be very small, so we have introduced a very large Q values that are virtually unattenuated. The P-wave velocity is V_P=1.5 km/s, but in the version 5.2 and later, the depth-dependent Munk's profile which is defined the equation below can be used by setting munk_profile = .true. . \\begin{align*} &V_P(z) = 1.5 \\times \\left[ 1.0 + 0.00737 \\left( z_b - 1 + e^{-zb} \\right) \\right] \\text{[m/s]}\\\\ &z_b = 2(z-1.3) /1.3 \\end{align*} where the unit of z is km. This profile contains a minima which corresponds to the SOFAR channel at a depth of 1300 m. In the free surface and seafloor, the reduced order of the finite difference is performed according to Okamoto and Takenaka (2005 1 ) and Maeda and Furumura (2003 2 ). These discontinuities are automatically detected as boundaries that change \\mu and \\lambda from zero to a finite value.","title":"On Treatments of Air and Seawater Layer"},{"location":"2._Parameters/0206_vmodel/#small-scale-random-inhomogeneity","text":"Users may overlay small-scale velocity inhomogeneities with specified power-law spectra on the background velocity models of \u2019uni\u2019 , \u2019lhm\u2019 , and \u2019grd\u2019 . The small-scale velocity inhomogeneity \\xi is defined by external files. From the average velocities V_{P0} , V_{S0} , and \\rho_0 , the fluctuated velocities and density are given as \\begin{align} V_P = V_{P0} \\left( 1 + \\xi \\right) , \\, V_S = V_{S0} \\left( 1 + \\xi \\right) , \\, \\rho = \\rho_0 \\left( 1 + \\nu \\xi \\right) \\end{align} where \\nu=0.8 is a scaling parameter based on a laboratory experiment (Sato et al., 2012 3 ). Velocity models having this small-scale inhomogeneity are specified by appending _rmed to the original velocity models: vmodel_type=\u2019uni_rmed\u2019 , \u2019lhm_rmed\u2019 , or \u2019grd_rmed\u2019 . The random media files are generated by a separated program. See this section for details. Parameters dir_rmed A directory name for storing the random media data files. The random media are given as two- or three-dimensional NetCDF files. At each grid location, the velocity fluctuation \\xi(I,J,K) is defined. The code automatically reads the corresponding volume from the file; It is not necessary to decompose the NetCDF files into parts for parallel computation. If the computational size ( Nx, Ny, Nz ) is larger than the random media file size, the media is used repeatedly by applying a circular boundary condition. The simulation codes do not care if the grid sizes of the simulation and the input random media file are identical. Note that users may use the 3D random media files for 2D calculation.","title":"Small-Scale Random Inhomogeneity"},{"location":"2._Parameters/0206_vmodel/#parameters-for-uni_rmed","text":"The following parameter is required in addition to the parameters used in vmodel=\u2019uni\u2019 . Parameters fn_rmed0 Name of the random medium file. In this model, the average velocity will be fluctuated based on the input fn_rmed0 .","title":"Parameters for uni_rmed"},{"location":"2._Parameters/0206_vmodel/#parameters-for-lhm_rmed","text":"In this model, the small-scale velocity fluctuation is applied to every layer defined by vmodel=\u2019lhm\u2019 . It is possible to assign different random velocity models at different layers. The following parameter is substituted in fn_lhm : Parameters fn_lhm_rmed List file of the velocity structure. The list file has a similar format to fn_lhm ; it contains the filenames of the random media files in the rightmost column as in the following example. 1 2 3 4 5 6 7 8 9 10 # depth rho(g/cm^3) vp(km/s) vs(km/s) Qp Qs fn_rmed # ---------------------------------------------------------------------- 0 2.300 5.50 3.14 600 300 rmedia1 . nc 3 2.400 6.00 3.55 600 300 rmedia1 . nc 18 2.800 6.70 3.83 600 300 rmedia2 . nc 33 3.200 7.80 4.46 600 300 rmedia2 . nc 100 3.300 8.00 4.57 600 300 - 225 3.400 8.40 4.80 600 300 - 325 3.500 8.60 4.91 600 300 - 425 3.700 9.30 5.31 600 300 - In this example, the layers starting from depths of 0 km and 3 km have fluctuations defined in rmedia1.nc , and the layers from 18 km and 33 km are defined in rmedia2.nc . For the layer deeper than 100 km, a dummy filename ( - ) is given. In this case (i.e., there is no file found), a fluctuation will not be given. The dummy filename is mandatory in this case.","title":"Parameters for lhm_rmed"},{"location":"2._Parameters/0206_vmodel/#parameters-for-grd_rmed","text":"When overlaying the random fluctuations to the layers defined by the model of vmodel=\u2019grd\u2019 , it is possible to assign different random media to different layers. The starting depth of the velocity fluctuation can be either the free surface or depths defined by a layer. The filename of the velocity fluctuation is given by the following parameter: Parameters fn_grdlst_rmed A list file that specifies the velocity layer and the random fluctuation files for each layer. The list file has two additional columns at the right: the filename of the random medium and the reference layer number. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # grd filename rho vp vs QP QS sw fn_rmed ref # ----------------------------------------------------------------------- ' eJIVSM_01_TAB_ . grd ' 1.80 1.70 0.35 119 70 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_02_BSM_ . grd ' 1.95 1.80 0.50 170 100 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_03_BSM_ . grd ' 2.00 2.00 0.60 204 120 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_04_BSM_ . grd ' 2.05 2.10 0.70 238 140 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_05_BSM_ . grd ' 2.07 2.20 0.80 272 160 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_06_BSM_ . grd ' 2.10 2.30 0.90 306 180 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_07_BSM_ . grd ' 2.15 2.40 1.00 340 200 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_08_BSM_ . grd ' 2.20 2.70 1.30 442 260 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_09_BSM_ . grd ' 2.25 3.00 1.50 510 300 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_10_BSM_ . grd ' 2.30 3.20 1.70 578 340 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_11_BSM_ . grd ' 2.35 3.50 2.00 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_12_BSM_ . grd ' 2.45 4.20 2.40 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_13_BSM_ . grd ' 2.60 5.00 2.90 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_14_BSM_ . grd ' 2.65 5.50 3.20 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_15_UPC_ . grd ' 2.70 5.80 3.40 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_16_LWC_ . grd ' 2.80 6.40 3.80 680 400 0 ' rmed3d_3 . nc ' 0 ' eJIVSM_17_CTM_ . grd ' 3.20 7.50 4.50 850 500 0 ' rmed3d_3 . nc ' 0 ' eJIVSM_18_PH2_ . grd ' 2.40 5.00 2.90 340 200 1 ' rmed3d_2 . nc ' 18 ' eJIVSM_19_PH3_ . grd ' 2.90 6.80 4.00 510 300 0 ' rmed3d_2 . nc ' 18 ' eJIVSM_20_PHM_ . grd ' 3.20 8.00 4.70 850 500 0 ' rmed3d_3 . nc ' 18 ' eJIVSM_21_PA2_ . grd ' 2.60 5.40 2.80 340 200 2 ' rmed3d_2 . nc ' 21 ' eJIVSM_22_PA3_ . grd ' 2.80 6.50 3.50 510 300 0 ' rmed3d_2 . nc ' 21 ' eJIVSM_23_PAM_ . grd ' 3.40 8.10 4.60 850 500 0 ' rmed3d_3 . nc ' 21 The reference layer number defines the reference depth plane of the random media. If this number is zero, the depth grid number of the computational model is directly used to assign the random media. This is exactly the same as the behavior of the uni_rmed or lhm_rmed models. If the nonzero value of the reference layer number NR is specified, the depth of the NR layer is treated as the base plane. The depth grid of the random medium is measured from this depth. Introducing this reference plane, the inclined random media according to the velocity discontinuity (such as the plate boundary) can be specified. In the above example, the 18th and 21st layers are treated as the references of 18--20th and 21--23th layers, respectively.","title":"Parameters for grd_rmed"},{"location":"2._Parameters/0206_vmodel/#truncation-of-velocity-fluctuations","text":"If the magnitude of the velocity fluctuation becomes too large, there can be a spot with non-physical velocity, such as negative velocity or a velocity too large for the Earth medium. The simulation may be unstable under the following conditions: The fluctuated velocity V=(1+\\xi)V_0 exceeds the stability condition for cases with \\xi>0 . The velocity has unrealistic negative values for cases with \\xi<-1.0 . The mass density has negative values for cases with \\xi<-1.25 . To avoid such situations, OpenSWPC automatically limits the range of the fluctuated velocity to vcut \\le v \\le 0.95 \\times v_\\text{max} , where vcut is an input parameter and v_\\text{max} is the maximum possible velocity derived from the stability condition. In addition, the following parameter controls the minimum density. Parameters rhomin Minimum mass density in g/cm {}^3 . (1.0 g/cm {}^3 by default.) Okamoto, T., and H. Takenaka (2005). Fluid-solid boundary implementation in the velocity-stress finite- difference method, Zisin 2 , 57 , 355\u2013364, doi:10.4294/zisin1948.57.3_355. (in Japanese with English Abstract) (article link) \u21a9 Maeda, T., and T. Furumura (2013), FDM simulation of seismic waves, ocean acoustic waves, and tsunamis based on tsunami-coupled equations of motion, Pure Appl. Geophys. , 170 (1-2), 109\u2013127, doi:10.1007/s00024-011-0430-z. (article link) \u21a9 Sato, H., M. C. Fehler, and T. Maeda (2012), Seismic Wave Propagation and Scattering in the Heterogeneous Earth: Second Edition , Springer Berlin Heidelberg, Berlin, Heidelberg, doi:10.1007/978-3-642-23029-5. \u21a9","title":"Truncation of Velocity Fluctuations"},{"location":"2._Parameters/0207_source/","text":"Earthquake Source Specification \u00b6 Moment Rate Function \u00b6 This section describes the moment rate functions, \\dot{M}(t) , that can be used in OpenSWPC by choosing the parameter stftype . In the following, all moment rate functions have a duration (or characteristic time) T_R and are normalized so that the total moment is 1 . Box-car function ( boxcar ) \\begin{align} \\dot{m}^ R \\left(t\\right) &= \\frac{1}{T_R} & \\begin{array}{r} ( 0 \\le t \\le T_R) \\\\ \\end{array} \\end{align} Triangle function ( triangle ) \\begin{align} \\dot{m}^ T \\left(t\\right) = \\begin{cases} 4t/T_R^2 & ( 0 \\le t \\le T_R/2 ) \\\\ -4(t-T_R)/T_R^2 & ( T_R/2 < t \\le T_R ) \\end{cases} \\end{align} Herrmann function ( herrmann ) \\begin{align} \\dot{m}^ H \\left(t\\right) = \\begin{cases} 16 t^2 / T_R^3 & ( 0 \\le t \\le T_R/4 ) \\\\ -2 ( 8 t^2 - 8 t T_R + T_R^2 ) / T_R^3 & ( T_R/4 < t \\le 3T_R/4 ) \\\\ 16 \\left( t - T_R \\right)^2 / T_R^3 & (3T_R/4 < t \\le T_R ) \\end{cases} \\end{align} Cosine function ( cosine ) \\begin{align} \\dot{m}^ C \\left(t\\right) = \\frac{1}{T_R} \\left[ 1 - \\cos \\left(\\frac{2 \\pi t}{T_R} \\right) \\right] \\quad ( 0 \\le t \\le T_R) \\end{align} K\u00fcpper wavelet ( kupper ) \\begin{align} \\dot{m}^K \\left( t \\right ) &= \\frac{3 \\pi}{4 T_R} \\sin^3\\left( \\frac{\\pi t}{T_R} \\right) \\quad ( 0 \\le t \\le T_R) \\end{align} t-exp type function ( texp ) \\begin{align} \\dot{m}^{E} \\left( t \\right) &= \\frac{(2 \\pi)^2 t}{T_R^2} \\exp\\left[ - \\frac{ 2 \\pi t}{T_R}\\right] \\quad ( 0 \\le t ) \\end{align} The next figure shows each moment rate function and its Fourier spectrum. Figure Moment rate functions \\dot{M}(t) (left) and their Fourier spectra (right). The moment rate functions have a roll off of f^{-1} -- f^{-4} at frequencies of f\\gg 1/T_R . To avoid numerical dispersion, the source spectrum should be sufficiently small at the highest target frequency. As this maximum frequency, we adopt f_\\text{max}=2/T_R for all types of source time functions (the red dotted line in the figure.If the parameter is appropriately set so that numerical dispersion does not occur at frequencies below f_\\text{max} , the result should not be contaminated by numerical dispersion. In addition, the uppermost frequency, where the spectrum response of the source time function becomes flat in the frequency domain, is approximately f \\le 1/(2 T_R) (the blue dotted line in the figure. Moment Tensor Source \u00b6 The source mechanisms of the faulting are given by a six-component moment tensor or by three parameters of a double couple source ( strike , dip , rake ). The source locations can be given either by their computational or geographical coordinates. The size of the earthquake can be described by seismic moment M_0 or moment magnitude M_W or fault slip D & area S . In total, there are ten possible formats to describe the source. In the program, sources are given as a stress-drop source by using the moment rate function. The moment rate function is chosen from the given six functions. They require parameters in the source list file for their starting time T_0 , duration T_R , and total moment M_0 . OpenSWPC can accept multiple point sources as multiple lines in the source list file. There is no fixed limit to the number of sources (in practice, this is determined by the memory size). By gradually changing the starting time and source location, a finite fault rupture can be mimicked. In the source list file, lines starting with # will be ignored. By setting sdep_fit , the source depth can be changed so that it fits the medium's velocity boundary. In this case, the depth in the source list file will be ignored. The layer number should be specified in the fn_grd or fn_grd_rmed list files. Parameters stf_format Format of the source list file. Choose from the following six candidates. 'xym0ij' : x , y , z , T_0 , T_R , M_0 , m_{xx} , m_{yy} , m_{zz} , m_{yz} , m_{xz} , m_{xy} 'xym0dc' : x , y , z , T_0 , T_R , M_0 , strike, dip, rake 'llm0ij' : lon, lat, z , T_0 , T_R , M_0 , m_{xx} , m_{yy} , m_{zz} , m_{yz} , m_{xz} , m_{xy} 'llm0dc' : lon, lat, z , T_0 , T_R , M_0 , strike, dip, rake 'xymwij' : x , y , z , T_0 , T_R , M_W , m_{xx} , m_{yy} , m_{zz} , m_{yz} , m_{xz} , m_{xy} 'xymwdc' : x , y , z , T_0 , T_R , M_W , strike, dip, rake 'llmwij' : lon, lat, z , T_0 , T_R , M_W , m_{xx} , m_{yy} , m_{zz} , m_{yz} , m_{xz} , m_{xy} 'llmwdc' : lon, lat, z , T_0 , T_R , M_W , strike, dip, rake 'lldsdc' : lon, lat, z , T_0 , T_R , D , S , strike, dip, rake 'xydsdc' : x , y , z , T_0 , T_R , D , S , strike, dip, rake 'psmeca' : lon, lat, z , M_{rr} , M_{tt} , M_{ff} , M_{rt} , M_{rf} , M_{tf} , iexp (new in v5.2) The unit of each variables are [km] for x , y , z , [Nm] for M_0 and m_{ij} , [s] for T_0 and T_R , [degree] for all parameters describing angles, [m] for slip D and [m {}^2 ] for area S . stftype Choice of the source time function. Select from 'boxcar' , 'triangle' , 'herrmann' , 'kupper' , 'cosine' , and 'texp' . fn_stf Filename of the source list. sdep_fit Flag to fit the source depth to the velocity discontinuity. 'asis' : do not fit (default). 'bd{i}' (i=1,2, \\cdots 9): fits to the i -th boundary specified in the rightmost column of fn_grdlst . Specifying the magnitude of an earthquake \u00b6 When the moment tensor component is given directly, there is a trade-off regarding magnitude between the specification of the seismic moment M_0 or moment magnitude M_W and the moment tensor component. For example, the following two specifications are completely equivalent M_0 m_{xx} m_{yy} m_{zz} m_{yz} m_{xz} m_{xy} 1e15 1.0 1.0 1.0 0.0 0.0 0.0 1.0 1e15 1e15 1e15 0.0 0.0 0.0 Based on the input parameters, the final seismic moment \\overline{M}_0 is \\overline{M}_0 =\\times \\frac{ M_0 }{\\sqrt{2}} \\sqrt{m_{xx}^2 +m_{yy}^2 +m_{zz}^2 + 2(m_{yz}^2+m_{xz}^2+m_{xy}^2)} which is determined by If more than one point source is specified, the sum of all source elements in the above equation becomes the total seismic moment; in the case of 2D P-SV and SH calculations, only the components valid for each cross section are evaluated. Because of this notation of separable magnitudes, the moment tensor component is implicitly assumed to normalized to \\sqrt{m_{xx}^2 +m_{yy}^2 +m_{zz}^2 + 2(m_{yz}^2+m_{xz}^2+m_{xy}^2)} = 1 It is not necessary to do so, but without this standardization, the M_W or M_0 entered as a parameter may differ from the actual calculated earthquake magnitude in the simulation. psmeca specification \u00b6 Specify the seismic source in the standard format of psmeca -Sm in GMT and globalcmt . Specify the seismic source. It specifies the latitude and longitude depth of the epicenter, the moment tensor in the polar coordinate system (in the order M_{rr} , M_{tt} , M_{ff} , M_{rt} , M_{rf} , M_{tf} ), and the exponential part (integer) of the seismic moment. Note that the exponential part is given in dyn-cm, as is customary. These parameters are converted into the moment tensor in the Cartesian coordinate system within OpenSWPC and used for the calculation. Fracture initiation time at the epicenter T_0 is 0 , rise time T_R is based on Ekstr\u00f6m et al. (2012) [^Ekstr\u00f6m2012], and scaling T_R = 2 \\times 1.05 \\times 10^{-8} \\times M_0^{1/3} which is determined by M_0 $. Again, M_0 is a value in dyn-cm. This specification is effective from version 5.2. Note on horizontal rotation As of version 5.2, when the parameter phi is not equall to zero, the rotation behavior of the source mechanism is different when the source mechanism is given as strike, dip, or rake, and when it is given as moment tensor. In the former case, the moment tensor is calculated based on the assumption that the strike were measured from the north, regardless of the value of phi . On the other hand, the moment tensor is assumed to be defined for the x , y coordinates after rotation. In other words, if one want to use moment tensor components from the catalog and rotate the coordinate system horizontally, one have calculate the rotated moment by yourself and give it as a parameter. The developers are aware that these behaviors are not systematic and may be changed in future versions. Body Force Mode \u00b6 A body force source can be used instead of a moment tensor source. In this mode, the three-component force vector ( f_x , f_y , f_z ) should be specified. The force vector is assumed to have a bell-shaped source time function, as in the case of the moment tensor source. Although there is no restriction on the number of body force elements, it is not possible to use both a moment tensor and a body force at the same time. Parameters bf_mode Flag for the body force mode. If this is .true. , the following parameters are used for the body force and the moment tensor source is ignored. stf_format Format of the source file. Select from 'xy' or 'll' . Note that the source file format is different from that for the moment tensor. 'xy' : x, y, z, T_0 , T_R , f_x , f_y , f_z 'll' : lon, lat , z, T_0 , T_R , f_x , f_y , f_z stftype Choice of the source time function. Same as the case with a moment tensor source. fn_stf Filename of the source list file. sdep_fit Flag to fit the source depth to a specified velocity discontinuity. Same as the case with a moment tensor source. Plane Wave Mode \u00b6 A plane wave incident from the bottom can be used as an input source instead of the moment tensor or body force sources. In OpenSWPC , plane wave incidence is achieved by setting the velocity vector and stress tensor components based on the analytic solution of a plane wave propagating upward as the initial condition. The specification of the initial conditions includes the depth of the initial plane wave ( pw_ztop ) and its characteristic length ( pw_zlen ; corresponding to the wavelength), the strike and dip angle of the plane wave ( pw_strike , pw_dip ), and the polarization direction (rake angle) in the case of an S-wave ( pw_rake ). See the next figure for the geometry. Figure Geometry of the plane wave specification. (Left) The specification of the uppermost plane and the polarization direction. (Right) The depth cross section of the initial plane wave. The definitions of the strike, dip, and rake parameters follow those of the earthquake source fault geometry of Aki and Richards (2002[^Aki2002]). For three-dimensional space, pw_strike=0 results in the plane dip toward the y -direction (east for phi=0 ). A rake angle of pw_rake=0 {}^\\circ or pw_rake=180 {}^\\circ will result in pure SH waves whose polarization is parallel to the free surface. The initial plane wave occupies a depth range of pw_zlen (km) starting at depths of z= pw_ztop at the center of the horizontal coordinate. The depth dependence of the wave amplitude is determined by the source time functions used in the moment rate function as a function of space. Via the definition of the source time function, the integration of the initial plane wave along the propagation direction will be normalized to 1. Parameters pw_mode Flag to use the plane-wave mode. If it is .true. , all point-source locations (body force or moment tensor source) will be ignored. pw_ztop z -value of the top of the initial plane wave at x=y=0 . pw_zlen Characteristic spatial scale of the initial plane wave. pw_ps Plane wave type. Choose from 'p' or 's' pw_strike Strike direction of initial plane wave in degrees measured from the x -axis. pw_dip Dip angle of the initial plane wave in degrees. The initial plane wave propagates vertically if this angle is zero. pw_rake Polarization direction of initial plane S-wave in degrees measured from the horizontal plane. stftype Source time function type. Same as the cases with the moment tensor or body force sources. The use of the PML absorbing boundary condition ( abc_type='pml' ; see this section for details) is strongly recommended for the case of plane wave incidence. The simple Cerjan's ( abc_type='cerjan' ) condition always causes significant contamination by artificial reflections. Figure Snapshots of the absolute values of divergence (red) and rotation (green) for the case of vertical plane S-wave incidence with (a) Cerjan's condition and (b) PML boundary conditions. Even when using the PML boundary, the tilted plane wave incidence (with nonzero pw_dip angle) causes some amount of artificial reflections. It is highly recommended that the boundary effect be confirmed with snapshot visualization when using this plane wave mode.","title":"Earthquake Source Specification"},{"location":"2._Parameters/0207_source/#earthquake-source-specification","text":"","title":"Earthquake Source Specification"},{"location":"2._Parameters/0207_source/#moment-rate-function","text":"This section describes the moment rate functions, \\dot{M}(t) , that can be used in OpenSWPC by choosing the parameter stftype . In the following, all moment rate functions have a duration (or characteristic time) T_R and are normalized so that the total moment is 1 . Box-car function ( boxcar ) \\begin{align} \\dot{m}^ R \\left(t\\right) &= \\frac{1}{T_R} & \\begin{array}{r} ( 0 \\le t \\le T_R) \\\\ \\end{array} \\end{align} Triangle function ( triangle ) \\begin{align} \\dot{m}^ T \\left(t\\right) = \\begin{cases} 4t/T_R^2 & ( 0 \\le t \\le T_R/2 ) \\\\ -4(t-T_R)/T_R^2 & ( T_R/2 < t \\le T_R ) \\end{cases} \\end{align} Herrmann function ( herrmann ) \\begin{align} \\dot{m}^ H \\left(t\\right) = \\begin{cases} 16 t^2 / T_R^3 & ( 0 \\le t \\le T_R/4 ) \\\\ -2 ( 8 t^2 - 8 t T_R + T_R^2 ) / T_R^3 & ( T_R/4 < t \\le 3T_R/4 ) \\\\ 16 \\left( t - T_R \\right)^2 / T_R^3 & (3T_R/4 < t \\le T_R ) \\end{cases} \\end{align} Cosine function ( cosine ) \\begin{align} \\dot{m}^ C \\left(t\\right) = \\frac{1}{T_R} \\left[ 1 - \\cos \\left(\\frac{2 \\pi t}{T_R} \\right) \\right] \\quad ( 0 \\le t \\le T_R) \\end{align} K\u00fcpper wavelet ( kupper ) \\begin{align} \\dot{m}^K \\left( t \\right ) &= \\frac{3 \\pi}{4 T_R} \\sin^3\\left( \\frac{\\pi t}{T_R} \\right) \\quad ( 0 \\le t \\le T_R) \\end{align} t-exp type function ( texp ) \\begin{align} \\dot{m}^{E} \\left( t \\right) &= \\frac{(2 \\pi)^2 t}{T_R^2} \\exp\\left[ - \\frac{ 2 \\pi t}{T_R}\\right] \\quad ( 0 \\le t ) \\end{align} The next figure shows each moment rate function and its Fourier spectrum. Figure Moment rate functions \\dot{M}(t) (left) and their Fourier spectra (right). The moment rate functions have a roll off of f^{-1} -- f^{-4} at frequencies of f\\gg 1/T_R . To avoid numerical dispersion, the source spectrum should be sufficiently small at the highest target frequency. As this maximum frequency, we adopt f_\\text{max}=2/T_R for all types of source time functions (the red dotted line in the figure.If the parameter is appropriately set so that numerical dispersion does not occur at frequencies below f_\\text{max} , the result should not be contaminated by numerical dispersion. In addition, the uppermost frequency, where the spectrum response of the source time function becomes flat in the frequency domain, is approximately f \\le 1/(2 T_R) (the blue dotted line in the figure.","title":"Moment Rate Function"},{"location":"2._Parameters/0207_source/#moment-tensor-source","text":"The source mechanisms of the faulting are given by a six-component moment tensor or by three parameters of a double couple source ( strike , dip , rake ). The source locations can be given either by their computational or geographical coordinates. The size of the earthquake can be described by seismic moment M_0 or moment magnitude M_W or fault slip D & area S . In total, there are ten possible formats to describe the source. In the program, sources are given as a stress-drop source by using the moment rate function. The moment rate function is chosen from the given six functions. They require parameters in the source list file for their starting time T_0 , duration T_R , and total moment M_0 . OpenSWPC can accept multiple point sources as multiple lines in the source list file. There is no fixed limit to the number of sources (in practice, this is determined by the memory size). By gradually changing the starting time and source location, a finite fault rupture can be mimicked. In the source list file, lines starting with # will be ignored. By setting sdep_fit , the source depth can be changed so that it fits the medium's velocity boundary. In this case, the depth in the source list file will be ignored. The layer number should be specified in the fn_grd or fn_grd_rmed list files. Parameters stf_format Format of the source list file. Choose from the following six candidates. 'xym0ij' : x , y , z , T_0 , T_R , M_0 , m_{xx} , m_{yy} , m_{zz} , m_{yz} , m_{xz} , m_{xy} 'xym0dc' : x , y , z , T_0 , T_R , M_0 , strike, dip, rake 'llm0ij' : lon, lat, z , T_0 , T_R , M_0 , m_{xx} , m_{yy} , m_{zz} , m_{yz} , m_{xz} , m_{xy} 'llm0dc' : lon, lat, z , T_0 , T_R , M_0 , strike, dip, rake 'xymwij' : x , y , z , T_0 , T_R , M_W , m_{xx} , m_{yy} , m_{zz} , m_{yz} , m_{xz} , m_{xy} 'xymwdc' : x , y , z , T_0 , T_R , M_W , strike, dip, rake 'llmwij' : lon, lat, z , T_0 , T_R , M_W , m_{xx} , m_{yy} , m_{zz} , m_{yz} , m_{xz} , m_{xy} 'llmwdc' : lon, lat, z , T_0 , T_R , M_W , strike, dip, rake 'lldsdc' : lon, lat, z , T_0 , T_R , D , S , strike, dip, rake 'xydsdc' : x , y , z , T_0 , T_R , D , S , strike, dip, rake 'psmeca' : lon, lat, z , M_{rr} , M_{tt} , M_{ff} , M_{rt} , M_{rf} , M_{tf} , iexp (new in v5.2) The unit of each variables are [km] for x , y , z , [Nm] for M_0 and m_{ij} , [s] for T_0 and T_R , [degree] for all parameters describing angles, [m] for slip D and [m {}^2 ] for area S . stftype Choice of the source time function. Select from 'boxcar' , 'triangle' , 'herrmann' , 'kupper' , 'cosine' , and 'texp' . fn_stf Filename of the source list. sdep_fit Flag to fit the source depth to the velocity discontinuity. 'asis' : do not fit (default). 'bd{i}' (i=1,2, \\cdots 9): fits to the i -th boundary specified in the rightmost column of fn_grdlst .","title":"Moment Tensor Source"},{"location":"2._Parameters/0207_source/#specifying-the-magnitude-of-an-earthquake","text":"When the moment tensor component is given directly, there is a trade-off regarding magnitude between the specification of the seismic moment M_0 or moment magnitude M_W and the moment tensor component. For example, the following two specifications are completely equivalent M_0 m_{xx} m_{yy} m_{zz} m_{yz} m_{xz} m_{xy} 1e15 1.0 1.0 1.0 0.0 0.0 0.0 1.0 1e15 1e15 1e15 0.0 0.0 0.0 Based on the input parameters, the final seismic moment \\overline{M}_0 is \\overline{M}_0 =\\times \\frac{ M_0 }{\\sqrt{2}} \\sqrt{m_{xx}^2 +m_{yy}^2 +m_{zz}^2 + 2(m_{yz}^2+m_{xz}^2+m_{xy}^2)} which is determined by If more than one point source is specified, the sum of all source elements in the above equation becomes the total seismic moment; in the case of 2D P-SV and SH calculations, only the components valid for each cross section are evaluated. Because of this notation of separable magnitudes, the moment tensor component is implicitly assumed to normalized to \\sqrt{m_{xx}^2 +m_{yy}^2 +m_{zz}^2 + 2(m_{yz}^2+m_{xz}^2+m_{xy}^2)} = 1 It is not necessary to do so, but without this standardization, the M_W or M_0 entered as a parameter may differ from the actual calculated earthquake magnitude in the simulation.","title":"Specifying the magnitude of an earthquake"},{"location":"2._Parameters/0207_source/#psmeca-specification","text":"Specify the seismic source in the standard format of psmeca -Sm in GMT and globalcmt . Specify the seismic source. It specifies the latitude and longitude depth of the epicenter, the moment tensor in the polar coordinate system (in the order M_{rr} , M_{tt} , M_{ff} , M_{rt} , M_{rf} , M_{tf} ), and the exponential part (integer) of the seismic moment. Note that the exponential part is given in dyn-cm, as is customary. These parameters are converted into the moment tensor in the Cartesian coordinate system within OpenSWPC and used for the calculation. Fracture initiation time at the epicenter T_0 is 0 , rise time T_R is based on Ekstr\u00f6m et al. (2012) [^Ekstr\u00f6m2012], and scaling T_R = 2 \\times 1.05 \\times 10^{-8} \\times M_0^{1/3} which is determined by M_0 $. Again, M_0 is a value in dyn-cm. This specification is effective from version 5.2. Note on horizontal rotation As of version 5.2, when the parameter phi is not equall to zero, the rotation behavior of the source mechanism is different when the source mechanism is given as strike, dip, or rake, and when it is given as moment tensor. In the former case, the moment tensor is calculated based on the assumption that the strike were measured from the north, regardless of the value of phi . On the other hand, the moment tensor is assumed to be defined for the x , y coordinates after rotation. In other words, if one want to use moment tensor components from the catalog and rotate the coordinate system horizontally, one have calculate the rotated moment by yourself and give it as a parameter. The developers are aware that these behaviors are not systematic and may be changed in future versions.","title":"psmeca specification"},{"location":"2._Parameters/0207_source/#body-force-mode","text":"A body force source can be used instead of a moment tensor source. In this mode, the three-component force vector ( f_x , f_y , f_z ) should be specified. The force vector is assumed to have a bell-shaped source time function, as in the case of the moment tensor source. Although there is no restriction on the number of body force elements, it is not possible to use both a moment tensor and a body force at the same time. Parameters bf_mode Flag for the body force mode. If this is .true. , the following parameters are used for the body force and the moment tensor source is ignored. stf_format Format of the source file. Select from 'xy' or 'll' . Note that the source file format is different from that for the moment tensor. 'xy' : x, y, z, T_0 , T_R , f_x , f_y , f_z 'll' : lon, lat , z, T_0 , T_R , f_x , f_y , f_z stftype Choice of the source time function. Same as the case with a moment tensor source. fn_stf Filename of the source list file. sdep_fit Flag to fit the source depth to a specified velocity discontinuity. Same as the case with a moment tensor source.","title":"Body Force Mode"},{"location":"2._Parameters/0207_source/#plane-wave-mode","text":"A plane wave incident from the bottom can be used as an input source instead of the moment tensor or body force sources. In OpenSWPC , plane wave incidence is achieved by setting the velocity vector and stress tensor components based on the analytic solution of a plane wave propagating upward as the initial condition. The specification of the initial conditions includes the depth of the initial plane wave ( pw_ztop ) and its characteristic length ( pw_zlen ; corresponding to the wavelength), the strike and dip angle of the plane wave ( pw_strike , pw_dip ), and the polarization direction (rake angle) in the case of an S-wave ( pw_rake ). See the next figure for the geometry. Figure Geometry of the plane wave specification. (Left) The specification of the uppermost plane and the polarization direction. (Right) The depth cross section of the initial plane wave. The definitions of the strike, dip, and rake parameters follow those of the earthquake source fault geometry of Aki and Richards (2002[^Aki2002]). For three-dimensional space, pw_strike=0 results in the plane dip toward the y -direction (east for phi=0 ). A rake angle of pw_rake=0 {}^\\circ or pw_rake=180 {}^\\circ will result in pure SH waves whose polarization is parallel to the free surface. The initial plane wave occupies a depth range of pw_zlen (km) starting at depths of z= pw_ztop at the center of the horizontal coordinate. The depth dependence of the wave amplitude is determined by the source time functions used in the moment rate function as a function of space. Via the definition of the source time function, the integration of the initial plane wave along the propagation direction will be normalized to 1. Parameters pw_mode Flag to use the plane-wave mode. If it is .true. , all point-source locations (body force or moment tensor source) will be ignored. pw_ztop z -value of the top of the initial plane wave at x=y=0 . pw_zlen Characteristic spatial scale of the initial plane wave. pw_ps Plane wave type. Choose from 'p' or 's' pw_strike Strike direction of initial plane wave in degrees measured from the x -axis. pw_dip Dip angle of the initial plane wave in degrees. The initial plane wave propagates vertically if this angle is zero. pw_rake Polarization direction of initial plane S-wave in degrees measured from the horizontal plane. stftype Source time function type. Same as the cases with the moment tensor or body force sources. The use of the PML absorbing boundary condition ( abc_type='pml' ; see this section for details) is strongly recommended for the case of plane wave incidence. The simple Cerjan's ( abc_type='cerjan' ) condition always causes significant contamination by artificial reflections. Figure Snapshots of the absolute values of divergence (red) and rotation (green) for the case of vertical plane S-wave incidence with (a) Cerjan's condition and (b) PML boundary conditions. Even when using the PML boundary, the tilted plane wave incidence (with nonzero pw_dip angle) causes some amount of artificial reflections. It is highly recommended that the boundary effect be confirmed with snapshot visualization when using this plane wave mode.","title":"Plane Wave Mode"},{"location":"2._Parameters/0208_abc/","text":"Absorbing Boundary Conditions \u00b6 Users can choose an absorbing boundary condition from the auxiliary differential equation, the complex frequency-shifted perfectly matched layer (ADE CFS-PML; Zhang et al., 2010 1 \uff09, and Cerjan's sponge condition (Cerjan et al., 1985 2 ).0 The entire computational domain is separated into interior and exterior regions by the thickness of the absorber na , as shown in the following figure. Figure Schematic of the definition of the absorber region. The red dotted line indicates the location of kbeg_a(I,J) . Because this program assumes the existence of a free surface and ignores acoustic waves in the air column, the waves in the top boundary will not be absorbed. At a given horizontal grid location (I,J) , the depth grid deeper than kbeg_a will be used as the attenuator. For computational efficiency in the PML boundary condition, OpenSWPC does not solve the viscoelastic constitutive equation in the absorber. Note that, in the case of a medium having very small Q values, this may lead to a velocity gap between the interior and exterior regions due to physical dispersion. For Cerjan's absorbing condition, the parameters suggested by [@Cerjan:1985uz] are embedded in the source code. However, these parameters are scaled according to the width of the absorber na . The PML absorber is usually superior to the Cerjan's sponge condition in its efficiency in avoiding artificial reflection from the boundaries. However, PML occasionally results in numerical instabilities, particularly for a medium with a strong velocity contrast and after several time steps. In case if such instability occurs, the following empirical remedies might work: Slightly change the computational area by changing clon and clat , or nx and ny Eliminate very-low velocity layers in the absorber region by setting stabilize_pml = .true. Elongate the rise time of the source time function to reduce high-frequency wave components. The Cerjan's sponge always gives a very stable result. Parameters abc_type Type of the absorbing boundary condition. Choose from \u2019pml\u2019 or \u2019cerjan\u2019 . na Thickness of the absorbing layer in numbers of grids. Usually, 10-20 grids are chosen. stabilize_pml The low velocity layer is removed if this flag is .true. , to stabilize PML. This option may increase the amplitude or artificial reflection as a side effect. Caution The fullspace_mode implemented in Version 5.0 -- 5.1 has been temporarily disabled because it was found to cause trouble in certain environments even when the mode was not set. The cause of the trouble is being investigated. Zhang, W., and Y. Shen (2010), Unsplit complex frequency-shifted PML implementation using auxiliary differential equations for seismic wave modeling, Geophysics , 75 (4), T141\u2013T154, doi:10.1190/1.3463431. \u21a9 Cerjan, C., D. Kosloff, R. Kosloff, and M. Reshef (1985), A nonreflecting boundary condition for discrete acoustic and elastic wave equations, Geophysics , 50 (4), 705\u2013708. \u21a9","title":"Absorbing Boundary Conditions"},{"location":"2._Parameters/0208_abc/#absorbing-boundary-conditions","text":"Users can choose an absorbing boundary condition from the auxiliary differential equation, the complex frequency-shifted perfectly matched layer (ADE CFS-PML; Zhang et al., 2010 1 \uff09, and Cerjan's sponge condition (Cerjan et al., 1985 2 ).0 The entire computational domain is separated into interior and exterior regions by the thickness of the absorber na , as shown in the following figure. Figure Schematic of the definition of the absorber region. The red dotted line indicates the location of kbeg_a(I,J) . Because this program assumes the existence of a free surface and ignores acoustic waves in the air column, the waves in the top boundary will not be absorbed. At a given horizontal grid location (I,J) , the depth grid deeper than kbeg_a will be used as the attenuator. For computational efficiency in the PML boundary condition, OpenSWPC does not solve the viscoelastic constitutive equation in the absorber. Note that, in the case of a medium having very small Q values, this may lead to a velocity gap between the interior and exterior regions due to physical dispersion. For Cerjan's absorbing condition, the parameters suggested by [@Cerjan:1985uz] are embedded in the source code. However, these parameters are scaled according to the width of the absorber na . The PML absorber is usually superior to the Cerjan's sponge condition in its efficiency in avoiding artificial reflection from the boundaries. However, PML occasionally results in numerical instabilities, particularly for a medium with a strong velocity contrast and after several time steps. In case if such instability occurs, the following empirical remedies might work: Slightly change the computational area by changing clon and clat , or nx and ny Eliminate very-low velocity layers in the absorber region by setting stabilize_pml = .true. Elongate the rise time of the source time function to reduce high-frequency wave components. The Cerjan's sponge always gives a very stable result. Parameters abc_type Type of the absorbing boundary condition. Choose from \u2019pml\u2019 or \u2019cerjan\u2019 . na Thickness of the absorbing layer in numbers of grids. Usually, 10-20 grids are chosen. stabilize_pml The low velocity layer is removed if this flag is .true. , to stabilize PML. This option may increase the amplitude or artificial reflection as a side effect. Caution The fullspace_mode implemented in Version 5.0 -- 5.1 has been temporarily disabled because it was found to cause trouble in certain environments even when the mode was not set. The cause of the trouble is being investigated. Zhang, W., and Y. Shen (2010), Unsplit complex frequency-shifted PML implementation using auxiliary differential equations for seismic wave modeling, Geophysics , 75 (4), T141\u2013T154, doi:10.1190/1.3463431. \u21a9 Cerjan, C., D. Kosloff, R. Kosloff, and M. Reshef (1985), A nonreflecting boundary condition for discrete acoustic and elastic wave equations, Geophysics , 50 (4), 705\u2013708. \u21a9","title":"Absorbing Boundary Conditions"},{"location":"2._Parameters/0209_checkpoint/","text":"Checkpointing and Restarting \u00b6 Some large-scale computers limit the computational time of a single job. To achieve long-duration computation, OpenSWPC can export all memory contents to files at specific times (checkpointing), and then continue the simulation as another job (restarting). If this function is turned on, OpenSWPC will terminate the computation after an elapsed time of ckp_time (in seconds) and will export all memory images. For the next job, OpenSWPC first tries to find the directory cdir to locate the checkpointing file. If there are checkpointing files, OpenSWPC reads them to continue the simulation. Otherwise, OpenSWPC starts the simulation from scratch. After finishing the computation of all time steps, OpenSWPC removes most of the contents of the checkpointing files. However, it does not delete the checkpointing files. This is to avoid unexpectedly starting the computation from the beginning and overwriting the output files. This function is only available for the three-dimensional simulation code ( swpc_3d.x ). Parameters is_ckp The flag to use checkpointing/restarting. cdir Output directory name of the checkpointing file. At restart, the checkpointing files are assumed to be in this directory. ckp_time Checkpointing time in seconds. ckp_interval Investigate if the computation time exceeds ckp_time periodically at this interval. Setting this interval step as too small may affect the performance of the computation.","title":"Checkpointing and Restarting"},{"location":"2._Parameters/0209_checkpoint/#checkpointing-and-restarting","text":"Some large-scale computers limit the computational time of a single job. To achieve long-duration computation, OpenSWPC can export all memory contents to files at specific times (checkpointing), and then continue the simulation as another job (restarting). If this function is turned on, OpenSWPC will terminate the computation after an elapsed time of ckp_time (in seconds) and will export all memory images. For the next job, OpenSWPC first tries to find the directory cdir to locate the checkpointing file. If there are checkpointing files, OpenSWPC reads them to continue the simulation. Otherwise, OpenSWPC starts the simulation from scratch. After finishing the computation of all time steps, OpenSWPC removes most of the contents of the checkpointing files. However, it does not delete the checkpointing files. This is to avoid unexpectedly starting the computation from the beginning and overwriting the output files. This function is only available for the three-dimensional simulation code ( swpc_3d.x ). Parameters is_ckp The flag to use checkpointing/restarting. cdir Output directory name of the checkpointing file. At restart, the checkpointing files are assumed to be in this directory. ckp_time Checkpointing time in seconds. ckp_interval Investigate if the computation time exceeds ckp_time periodically at this interval. Setting this interval step as too small may affect the performance of the computation.","title":"Checkpointing and Restarting"},{"location":"2._Parameters/0210_reciprocity/","text":"Reciprocity Mode \u00b6 This mode excites the seismic wave at a specified station location and exports the velocity and/or strain velocity of multiple virtual source locations. Based on the reciprocity theorem, this result corresponds to the body force and/or moment tensor response from virtual source locations observed at specified stations. If the time duration of the source time function is sufficiently short, they can be treated as Green's functions. If we denote the Green's tensor, from the virtual source \\mathbf{\\xi} to the receiver \\mathbf{r} , as G_{ij}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) , this mode simulates the convolution of the spatial derivatives of Green's tensor with the source time function s(t) as \\begin{align} \\begin{split} G^{M1}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\frac{\\partial G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_x} \\ast s(t) = \\frac{\\partial G_{ix} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_x} \\ast s(t) \\\\ G^{M2}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\frac{\\partial G_{iy} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_y} \\ast s(t) = \\frac{\\partial G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_y} \\ast s(t) \\\\ G^{M3}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\frac{\\partial G_{iz} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_z} \\ast s(t) = \\frac{\\partial G_{iz} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_z} \\ast s(t) \\\\ G^{M4}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\left( \\frac{\\partial G_{iy} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_z} + \\frac{\\partial G_{iz} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_y} \\right) \\ast s(t) \\\\ &= \\left( \\frac{\\partial G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_z} + \\frac{\\partial G_{iz} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_y} \\right) \\ast s(t) \\\\ G^{M5}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\left( \\frac{\\partial G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_z} + \\frac{\\partial G_{iz} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_x}\\right) \\ast s(t) \\\\& = \\left( \\frac{\\partial G_{ix} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_z} + \\frac{\\partial G_{iz} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_x}\\right) \\ast s(t) \\\\ G^{M6}_{i} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\left( \\frac{\\partial G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_y} + \\frac{\\partial G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_x} \\right) \\ast s(t) \\\\ &= \\left( \\frac{\\partial G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_y} + \\frac{\\partial G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_x} \\right) \\ast s(t) \\end{split} \\end{align} which corresponds to the moment tensor response. Optionally, the body-force response \\begin{align} \\begin{split} G^{B1}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) \\ast s(t) = G_{ix} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) \\ast s(t) \\\\ G^{B2}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv G_{iy} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) \\ast s(t) = G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) \\ast s(t) \\\\ G^{B3}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv G_{iz} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right)\\ast s(t) = G_{iz} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right)\\ast s(t) \\end{split} \\end{align} can be calculated. To use this mode, the users should specify the station name green_stnm of the receiver. This station name should be contained in the station list file. OpenSWPC radiates the seismic wave by an excitation force with a direction specified by the green_cmp parameter and a source time function of the rise time, green_trise . To obtain the full response of all components, three independent simulations with green_cmp=\u2019x\u2019 , \u2019y\u2019 , and \u2019z\u2019 are necessary. The virtual source location should be given in the Cartesian or geographical coordinates and depth (the format is described in Table [table:greenf] {reference-type=\"ref\" reference=\"table:greenf\"}) with unique integer ID numbers ( gid ). Multiple virtual source locations can be specified in the simulation. The gid s do not need to be sequential. The output file is stored in the directory (odir)/green/(gid) in the SAC format with the name convention (title)__(green_cmp)__mij__.sac (for the moment tensor response) or (title)__(green_cmp)__fi__.sac (for the body force response). The amplitudes of the output files are multiplied by 10^9 to compare the SAC -formatted files in nm or nm/s units. The vertical component of the output file is changed to be positive upward. However, the derivative with respect to depth is performed according to the original definition of positive downward. Parameters green_mode :Flags to turn the reciprocity mode on. If this is .true. , the other earthquake source parameters will be ignored. green_stnm Name of the virtual station. This name must be included in the station list. green_cmp Component at the virtual receiver. Choose from \u2019x\u2019 , \u2019y\u2019 , or \u2019z\u2019 . green_trise Rise time of the source time function convolved with the simulated Green's function. green_bforce If .true. , calculate the body force response as well as the moment tensor response. The default setting is .false. . green_fmt Format specification of the virtual source location. Choose from \u2019xyz\u2019 (Cartesian coordinate; default) or \u2019llz\u2019 (longitude, latitude, and depth). green_maxdist The reciprocity wave will only be calculated if the horizontal distance is shorter than this parameter. Specify in units of km. fn_glst Name of the virtual source location file. stftype Source time function type. Same as the case with the moment tensor source. ntdec_w Temporal decimation factor of the output waveforms. Same as the case with the normal waveform output. The virtual source location file takes the following format according to the settings of green_fmt : green_fmt format \u2019xyz\u2019 x y z gid \u2019llz\u2019 lon lat z gid","title":"Reciprocity Mode"},{"location":"2._Parameters/0210_reciprocity/#reciprocity-mode","text":"This mode excites the seismic wave at a specified station location and exports the velocity and/or strain velocity of multiple virtual source locations. Based on the reciprocity theorem, this result corresponds to the body force and/or moment tensor response from virtual source locations observed at specified stations. If the time duration of the source time function is sufficiently short, they can be treated as Green's functions. If we denote the Green's tensor, from the virtual source \\mathbf{\\xi} to the receiver \\mathbf{r} , as G_{ij}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) , this mode simulates the convolution of the spatial derivatives of Green's tensor with the source time function s(t) as \\begin{align} \\begin{split} G^{M1}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\frac{\\partial G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_x} \\ast s(t) = \\frac{\\partial G_{ix} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_x} \\ast s(t) \\\\ G^{M2}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\frac{\\partial G_{iy} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_y} \\ast s(t) = \\frac{\\partial G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_y} \\ast s(t) \\\\ G^{M3}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\frac{\\partial G_{iz} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_z} \\ast s(t) = \\frac{\\partial G_{iz} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_z} \\ast s(t) \\\\ G^{M4}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\left( \\frac{\\partial G_{iy} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_z} + \\frac{\\partial G_{iz} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_y} \\right) \\ast s(t) \\\\ &= \\left( \\frac{\\partial G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_z} + \\frac{\\partial G_{iz} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_y} \\right) \\ast s(t) \\\\ G^{M5}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\left( \\frac{\\partial G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_z} + \\frac{\\partial G_{iz} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_x}\\right) \\ast s(t) \\\\& = \\left( \\frac{\\partial G_{ix} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_z} + \\frac{\\partial G_{iz} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_x}\\right) \\ast s(t) \\\\ G^{M6}_{i} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\left( \\frac{\\partial G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_y} + \\frac{\\partial G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_x} \\right) \\ast s(t) \\\\ &= \\left( \\frac{\\partial G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_y} + \\frac{\\partial G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_x} \\right) \\ast s(t) \\end{split} \\end{align} which corresponds to the moment tensor response. Optionally, the body-force response \\begin{align} \\begin{split} G^{B1}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) \\ast s(t) = G_{ix} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) \\ast s(t) \\\\ G^{B2}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv G_{iy} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) \\ast s(t) = G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) \\ast s(t) \\\\ G^{B3}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv G_{iz} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right)\\ast s(t) = G_{iz} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right)\\ast s(t) \\end{split} \\end{align} can be calculated. To use this mode, the users should specify the station name green_stnm of the receiver. This station name should be contained in the station list file. OpenSWPC radiates the seismic wave by an excitation force with a direction specified by the green_cmp parameter and a source time function of the rise time, green_trise . To obtain the full response of all components, three independent simulations with green_cmp=\u2019x\u2019 , \u2019y\u2019 , and \u2019z\u2019 are necessary. The virtual source location should be given in the Cartesian or geographical coordinates and depth (the format is described in Table [table:greenf] {reference-type=\"ref\" reference=\"table:greenf\"}) with unique integer ID numbers ( gid ). Multiple virtual source locations can be specified in the simulation. The gid s do not need to be sequential. The output file is stored in the directory (odir)/green/(gid) in the SAC format with the name convention (title)__(green_cmp)__mij__.sac (for the moment tensor response) or (title)__(green_cmp)__fi__.sac (for the body force response). The amplitudes of the output files are multiplied by 10^9 to compare the SAC -formatted files in nm or nm/s units. The vertical component of the output file is changed to be positive upward. However, the derivative with respect to depth is performed according to the original definition of positive downward. Parameters green_mode :Flags to turn the reciprocity mode on. If this is .true. , the other earthquake source parameters will be ignored. green_stnm Name of the virtual station. This name must be included in the station list. green_cmp Component at the virtual receiver. Choose from \u2019x\u2019 , \u2019y\u2019 , or \u2019z\u2019 . green_trise Rise time of the source time function convolved with the simulated Green's function. green_bforce If .true. , calculate the body force response as well as the moment tensor response. The default setting is .false. . green_fmt Format specification of the virtual source location. Choose from \u2019xyz\u2019 (Cartesian coordinate; default) or \u2019llz\u2019 (longitude, latitude, and depth). green_maxdist The reciprocity wave will only be calculated if the horizontal distance is shorter than this parameter. Specify in units of km. fn_glst Name of the virtual source location file. stftype Source time function type. Same as the case with the moment tensor source. ntdec_w Temporal decimation factor of the output waveforms. Same as the case with the normal waveform output. The virtual source location file takes the following format according to the settings of green_fmt : green_fmt format \u2019xyz\u2019 x y z gid \u2019llz\u2019 lon lat z gid","title":"Reciprocity Mode"},{"location":"2._Parameters/0211_2dcode/","text":"About Two-Dimensional Codes \u00b6 OpenSWPC contains P-SV ( swpc_psv ) and SH ( swpc_sh ) codes, which work with the same parameter file. In these 2D codes, the simulation will be performed along the x--z cross section of y=0 . The parameters related to the y -direction will be omitted. The MPI partition will, therefore, be 1D, only in the x-direction. Note that all stations and sources outside the cross section will be projected onto the cross section, as schematically shown in the next figure. Figure Projection to the two-dimensional model in the horizontal space. For plane wave incidence, pw_strike and pw_rake will be fixed according to the type of code. Only the dip angle ( pw_dip ) can be changed. About the results of the 2D code \u00b6 In seismic wave propagation, the 3D and 2D problems are essentially different. 2D simulations are equivalent to assuming an infinite linear source in the y direction in 3D space, and the amplitude and geometric attenuation of seismic waves are significantly different from those in 3D. Therefore, it is very dangerous to quantitatively compare the seismic waveforms of the 2D simulation results with the observed records. However, under certain assumptions, there is a method to convert the results of 2D codes into seismic waveforms in 3D space with uniform structure in the y direction. After version 5.2, a utility program wvconv can be used to realize such a conversion.","title":"About Two-Dimensional Codes"},{"location":"2._Parameters/0211_2dcode/#about-two-dimensional-codes","text":"OpenSWPC contains P-SV ( swpc_psv ) and SH ( swpc_sh ) codes, which work with the same parameter file. In these 2D codes, the simulation will be performed along the x--z cross section of y=0 . The parameters related to the y -direction will be omitted. The MPI partition will, therefore, be 1D, only in the x-direction. Note that all stations and sources outside the cross section will be projected onto the cross section, as schematically shown in the next figure. Figure Projection to the two-dimensional model in the horizontal space. For plane wave incidence, pw_strike and pw_rake will be fixed according to the type of code. Only the dip angle ( pw_dip ) can be changed.","title":"About Two-Dimensional Codes"},{"location":"2._Parameters/0211_2dcode/#about-the-results-of-the-2d-code","text":"In seismic wave propagation, the 3D and 2D problems are essentially different. 2D simulations are equivalent to assuming an infinite linear source in the y direction in 3D space, and the amplitude and geometric attenuation of seismic waves are significantly different from those in 3D. Therefore, it is very dangerous to quantitatively compare the seismic waveforms of the 2D simulation results with the observed records. However, under certain assumptions, there is a method to convert the results of 2D codes into seismic waveforms in 3D space with uniform structure in the y direction. After version 5.2, a utility program wvconv can be used to realize such a conversion.","title":"About the results of the 2D code"},{"location":"3._Tools/0301_snapshot/","text":"Snapshot data handling \u00b6 read_snp.x \u00b6 Snapshot files in both NetCDF and the originally defined binary format can be extracted or visualized by the program read_snp.x . 1 2 read_snp.x -i snapshotfile [ -h ] [ -ppm | -bmp ] [ -pall ] [ -mul var | -mul1 var -mul2 var ... ] [ -bin ] [ -asc ] [ -skip n ] -h Print the header information defined in the snapshot, as in the following example. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 $ ../bin/read_snp.x -i swpc_3d.xz.ps.snp -h [binary type] : STREAMIO [code type] : SWPC_3D [header version]: 3 [title] : swpc_3d [date generated]: 1408015126 2014-08-14T11-18-46 [coordinate] : xz [data type] : ps [ns1] : 256 [ns2] : 256 [beg1] : -63.87500 [beg2] : -9.87500 [ds1] : 0.25000 [ds2] : 0.25000 [dt] : 0.05000 [na1] : 20 [na2] : 20 [nmed] : 3 [nsnp] : 2 [clon] : 143.50000 [clat] : 42.00000 -ppm , -bmp Visualize and export the image files in ppm or bmp format. The ppm or bmp directory will be automatically created in the current directory and image files with sequential numbers will be stored there. If the snapshot file is displacement or velocity, the absolute values of the vertical and horizontal amplitudes will be colored red and green, respectively. For the PS file, the absolute values of the divergence and rotation vector will be colored similarly. If the absolute value option is specified, the black-red-yellow-white color palette (similar to the \"hot\" color palette in GMT) will be adopted. For cross sections along the surface ( ob , fs ), the topography color map will be overlaid. For other cross sections, the velocity structure in the section will be overlaid. Limitation of the BMP format Output to bmp format occasionally fails as this format has a restriction to the image size. ppm format is recommended. -pall Visualize including the absorbing boundary region. This option works only if it is used with . By default, the absorbing boundary region will be clipped. -mul Multiply var by the amplitude for visualization. Adjust the visualized color by changing this value. Optionally, by specifying -mul1 or -mul2 , for example, one may change the weight of the amplitude by component. -abs Visualize the absolute value of the vector. This only works with the velocity or displacement snapshots. -bin , -asc Export the snapshot data to binary ( -bin ) or ascii ( -asc ) files. The data file will be created in the automatically created bin or asc directories. The binary formatted data can be directly used in GMT with the xyz2grd module by appending the -bis option. -skip n Skip the first n snapshots for visualization or data exports. -notim (after v5.1) Do not plot the elapsed time in the snapshot figures. diff_snp.x \u00b6 This program takes the difference between two snapshots and exports it to another snapshot file. 1 $ diff_snp.x snap1 snap2 diffile The output file format ( NetCDF or binary) depends on the input file format. fs2grd.x \u00b6 New in v5.1 Although snapshot data from OpenSWPC along the ground surface or ocean bottom follows the NetCDF format, they cannot be used in the GMT's grdimage command because they are not evenly-spaced grid data along longitude and latitude. The utility program fs2grd.x resamples the OpenSWPC 's output dataset in longitude/latitude coordinate to convert it to GMT-friendly grd-format dataset. 1 2 $ fs2grd.x -i input.nc -v variable_name -R region -dlon delta_lon -dlat delta_lat -i Specify the output file of OpenSWPC in NetCDF format to be resampled. The snapshot must be on the free surface ( fs ), ocean bottom ( ob ) or xy coordinates. -R lon0/lon1/lat0/lat1 The region of resampling. Minimum( lon0 ) and maximum( lon1 ) longigude, minimum( lat0 ) and maximum( lat1 ) latitude. The formatting is similar to that in the GMT, but a blank space is necessary between -R and arguments. -dlon delta_lon, -dlat delta_lat Grid spacings in longitudal and latitudal directions. -v variable_name Variable name to be resampled. Any horizontal-space 2D variables can be specified in the snapshot. One may confirm the list of the variables in the NetCDF file by ncdump -h command. If the specified variable is time-dependent, such as Vx, Vy, Vz or div, rot_x, rot_y, rot_z , the fs2grd.x will export time-sequential (many) files.","title":"Snapshot data handling"},{"location":"3._Tools/0301_snapshot/#snapshot-data-handling","text":"","title":"Snapshot data handling"},{"location":"3._Tools/0301_snapshot/#read_snpx","text":"Snapshot files in both NetCDF and the originally defined binary format can be extracted or visualized by the program read_snp.x . 1 2 read_snp.x -i snapshotfile [ -h ] [ -ppm | -bmp ] [ -pall ] [ -mul var | -mul1 var -mul2 var ... ] [ -bin ] [ -asc ] [ -skip n ] -h Print the header information defined in the snapshot, as in the following example. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 $ ../bin/read_snp.x -i swpc_3d.xz.ps.snp -h [binary type] : STREAMIO [code type] : SWPC_3D [header version]: 3 [title] : swpc_3d [date generated]: 1408015126 2014-08-14T11-18-46 [coordinate] : xz [data type] : ps [ns1] : 256 [ns2] : 256 [beg1] : -63.87500 [beg2] : -9.87500 [ds1] : 0.25000 [ds2] : 0.25000 [dt] : 0.05000 [na1] : 20 [na2] : 20 [nmed] : 3 [nsnp] : 2 [clon] : 143.50000 [clat] : 42.00000 -ppm , -bmp Visualize and export the image files in ppm or bmp format. The ppm or bmp directory will be automatically created in the current directory and image files with sequential numbers will be stored there. If the snapshot file is displacement or velocity, the absolute values of the vertical and horizontal amplitudes will be colored red and green, respectively. For the PS file, the absolute values of the divergence and rotation vector will be colored similarly. If the absolute value option is specified, the black-red-yellow-white color palette (similar to the \"hot\" color palette in GMT) will be adopted. For cross sections along the surface ( ob , fs ), the topography color map will be overlaid. For other cross sections, the velocity structure in the section will be overlaid. Limitation of the BMP format Output to bmp format occasionally fails as this format has a restriction to the image size. ppm format is recommended. -pall Visualize including the absorbing boundary region. This option works only if it is used with . By default, the absorbing boundary region will be clipped. -mul Multiply var by the amplitude for visualization. Adjust the visualized color by changing this value. Optionally, by specifying -mul1 or -mul2 , for example, one may change the weight of the amplitude by component. -abs Visualize the absolute value of the vector. This only works with the velocity or displacement snapshots. -bin , -asc Export the snapshot data to binary ( -bin ) or ascii ( -asc ) files. The data file will be created in the automatically created bin or asc directories. The binary formatted data can be directly used in GMT with the xyz2grd module by appending the -bis option. -skip n Skip the first n snapshots for visualization or data exports. -notim (after v5.1) Do not plot the elapsed time in the snapshot figures.","title":"read_snp.x"},{"location":"3._Tools/0301_snapshot/#diff_snpx","text":"This program takes the difference between two snapshots and exports it to another snapshot file. 1 $ diff_snp.x snap1 snap2 diffile The output file format ( NetCDF or binary) depends on the input file format.","title":"diff_snp.x"},{"location":"3._Tools/0301_snapshot/#fs2grdx","text":"New in v5.1 Although snapshot data from OpenSWPC along the ground surface or ocean bottom follows the NetCDF format, they cannot be used in the GMT's grdimage command because they are not evenly-spaced grid data along longitude and latitude. The utility program fs2grd.x resamples the OpenSWPC 's output dataset in longitude/latitude coordinate to convert it to GMT-friendly grd-format dataset. 1 2 $ fs2grd.x -i input.nc -v variable_name -R region -dlon delta_lon -dlat delta_lat -i Specify the output file of OpenSWPC in NetCDF format to be resampled. The snapshot must be on the free surface ( fs ), ocean bottom ( ob ) or xy coordinates. -R lon0/lon1/lat0/lat1 The region of resampling. Minimum( lon0 ) and maximum( lon1 ) longigude, minimum( lat0 ) and maximum( lat1 ) latitude. The formatting is similar to that in the GMT, but a blank space is necessary between -R and arguments. -dlon delta_lon, -dlat delta_lat Grid spacings in longitudal and latitudal directions. -v variable_name Variable name to be resampled. Any horizontal-space 2D variables can be specified in the snapshot. One may confirm the list of the variables in the NetCDF file by ncdump -h command. If the specified variable is time-dependent, such as Vx, Vy, Vz or div, rot_x, rot_y, rot_z , the fs2grd.x will export time-sequential (many) files.","title":"fs2grd.x"},{"location":"3._Tools/0302_vmodel/","text":"Velocity Structure \u00b6 qmodel_tau.x \u00b6 Calculate the frequency dependence of Q^{-1} and the body wave dispersion from the input parameter file. 1 $ qmodel_tau.x -nm [ nm ] -i [ prm_file ] -f0 [ min_freq ] -f1 [ max_freq ] -nf [ ngrid ] This discretizes the frequency range from min_freq to max_freq into ngrid and exports Q^{-1} ( f ) and physical dispersion. The latter is normalized to 1 at the reference frequency. The parameters related to the viscoelastic body are read from the input parameter file; however, the number of bodies nm should be specified separately because it is hard-coded into the program. grdsnp.x \u00b6 From the input parameter file, calculate and print the discontinuity of the input NetCDF file in Cartesian coordinates for the simulation ( x , y , depth) in the standard output. This program is used to confirm the coordinate transformation and the detailed digital model, and to visualize the model in the computational domain. 1 $ grdsnp.x -i [prm_file] -g [grd_file]","title":"Velocity Structure"},{"location":"3._Tools/0302_vmodel/#velocity-structure","text":"","title":"Velocity Structure"},{"location":"3._Tools/0302_vmodel/#qmodel_taux","text":"Calculate the frequency dependence of Q^{-1} and the body wave dispersion from the input parameter file. 1 $ qmodel_tau.x -nm [ nm ] -i [ prm_file ] -f0 [ min_freq ] -f1 [ max_freq ] -nf [ ngrid ] This discretizes the frequency range from min_freq to max_freq into ngrid and exports Q^{-1} ( f ) and physical dispersion. The latter is normalized to 1 at the reference frequency. The parameters related to the viscoelastic body are read from the input parameter file; however, the number of bodies nm should be specified separately because it is hard-coded into the program.","title":"qmodel_tau.x"},{"location":"3._Tools/0302_vmodel/#grdsnpx","text":"From the input parameter file, calculate and print the discontinuity of the input NetCDF file in Cartesian coordinates for the simulation ( x , y , depth) in the standard output. This program is used to confirm the coordinate transformation and the detailed digital model, and to visualize the model in the computational domain. 1 $ grdsnp.x -i [prm_file] -g [grd_file]","title":"grdsnp.x"},{"location":"3._Tools/0303_parameter/","text":"Programs for Supporting Parameter Settings \u00b6 fdmcond.x \u00b6 The grid width in space and time in the finite difference method is controlled by the stability condition. The wavelength condition will affect the allowed maximum frequency radiated from the source. The tool fdmcond.x can help determine these parameters to satisfy the conditions. After the user specifies several parameters, such as the grid width, maximum frequency (fmax), rise time (Tr), and minimum and maximum velocities in the medium (vmin, vmax), the program can suggest the other parameters. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 $ ./fdmcond.x ---------------------------------------------------------------------- FDM CONDITION ---------------------------------------------------------------------- Model Dimension ? --> 3 1) 2D 2) 3D Source Type ? --> 3 1) Triangle 2) Herrmann 3) Kupper Parameter Combination ? --> 5 1) dh (space grid), fmax (max freq.), vmax (max vel.) 2) dh (space grid), Tr (rise time), vmax (max vel.) 3) dh (space grid), fmax (max freq.), dt (time grid) 4) dh (space grid), Tr (rise time), dt (time grid) 5) dh (space grid), vmin (min vel.), vmax (max vel.) 6) dh (space grid), vmin (min vel.), dt (time grid) 7) fmax (max freq.) , vmax (max vel.), dt (time grid) 8) Tr (rise time) , vmax (max vel.), dt (time grid) 9) vmin (min vel.) , vmax (max vel.), dt (time grid) Assumed Parameters: dx = 0.25 dy = 0.25 dz = 0.25 vmin = 0.3 vmax = 8.0 Derivaed Parameters: dt <= 0.01546 fmax <= 0.17143 Tr >= 13.41667 mapregion.x \u00b6 The geographical region of the simulation will be automatically determined by the parameters clon , clat , phi , xbeg , ybeg , nx , ny , dx , and dy . The mapregion.x program reads the parameter file and exports the outer edge of the region in longitude and latitude. 1 $ mapregion.x -i input.inf -o region.dat If the option -o is omitted, the result will be printed to the standard output on the screen. This program will also estimate the total memory usage in the standard error output. mapregion.gmt \u00b6 These scripts use mapregion.x to visualize the region by using GMT. GMT version 5 or later is necessary. By default, these scripts plot only the region around the Japanese Islands.","title":"Programs for Supporting Parameter Settings"},{"location":"3._Tools/0303_parameter/#programs-for-supporting-parameter-settings","text":"","title":"Programs for Supporting Parameter Settings"},{"location":"3._Tools/0303_parameter/#fdmcondx","text":"The grid width in space and time in the finite difference method is controlled by the stability condition. The wavelength condition will affect the allowed maximum frequency radiated from the source. The tool fdmcond.x can help determine these parameters to satisfy the conditions. After the user specifies several parameters, such as the grid width, maximum frequency (fmax), rise time (Tr), and minimum and maximum velocities in the medium (vmin, vmax), the program can suggest the other parameters. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 $ ./fdmcond.x ---------------------------------------------------------------------- FDM CONDITION ---------------------------------------------------------------------- Model Dimension ? --> 3 1) 2D 2) 3D Source Type ? --> 3 1) Triangle 2) Herrmann 3) Kupper Parameter Combination ? --> 5 1) dh (space grid), fmax (max freq.), vmax (max vel.) 2) dh (space grid), Tr (rise time), vmax (max vel.) 3) dh (space grid), fmax (max freq.), dt (time grid) 4) dh (space grid), Tr (rise time), dt (time grid) 5) dh (space grid), vmin (min vel.), vmax (max vel.) 6) dh (space grid), vmin (min vel.), dt (time grid) 7) fmax (max freq.) , vmax (max vel.), dt (time grid) 8) Tr (rise time) , vmax (max vel.), dt (time grid) 9) vmin (min vel.) , vmax (max vel.), dt (time grid) Assumed Parameters: dx = 0.25 dy = 0.25 dz = 0.25 vmin = 0.3 vmax = 8.0 Derivaed Parameters: dt <= 0.01546 fmax <= 0.17143 Tr >= 13.41667","title":"fdmcond.x"},{"location":"3._Tools/0303_parameter/#mapregionx","text":"The geographical region of the simulation will be automatically determined by the parameters clon , clat , phi , xbeg , ybeg , nx , ny , dx , and dy . The mapregion.x program reads the parameter file and exports the outer edge of the region in longitude and latitude. 1 $ mapregion.x -i input.inf -o region.dat If the option -o is omitted, the result will be printed to the standard output on the screen. This program will also estimate the total memory usage in the standard error output.","title":"mapregion.x"},{"location":"3._Tools/0303_parameter/#mapregiongmt","text":"These scripts use mapregion.x to visualize the region by using GMT. GMT version 5 or later is necessary. By default, these scripts plot only the region around the Japanese Islands.","title":"mapregion.gmt"},{"location":"3._Tools/0304_rmedia/","text":"Generation of Random Media \u00b6 gen_rmed3d.x \u00b6 Generate a three-dimensional random medium file. 1 2 3 gen_rmed3d.x [-o outfile] [-nx nx] [-ny ny] [-nz nz] [-epsil epsilon] [-kappa kappa] [-dx dx] [-dy dy] [-dz dz] [-ax ax] [-ay ay] [-az az] [-ptype ptype] {-seed seed_number} -o outfile Name of the output file. -nx nx , -ny ny -nz nz Number of grids in the x -, y -, and z -directions. They must be a power of 2. -epsil epsilon Root mean square (RMS) of the velocity fluctuation \\varepsilon . -ax ax , -ay ay , -az az Characteristic scales in the x -, y -, and z -directions in units of km. -dx dx -dy dy -dz dz Grid width in the x -, y -, and z -directions. They should be identical to the simulation parameters. -ptype ptype Choice of power spectrum density functions (PSDFs) of the random media model in wavenumber space: 1 for Gaussian, 2 for Exponential, and 3 for von K\u00e1rm\u00e1n. -kappa kappa The parameter \\kappa for the von K\u00e1rm\u00e1n-type PSDF. -seed seed_number Specify the seed number of the random variable generation (optional). If this option is not specified, the seed number is automatically generated based on the execution date and time. The random media file will be stored in the NetCDF format. Various software, such as ParaView and Panoply can be used for visualization Figure An example of 3D random media generated by gen_rmed3d.x and visualized by ParaView . gen_rmed2d.x \u00b6 Generate a 2D random media file. Its usage is same as that of gen_rmed3d.x , with parameters related to the y-direction omitted.","title":"Generation of Random Media"},{"location":"3._Tools/0304_rmedia/#generation-of-random-media","text":"","title":"Generation of Random Media"},{"location":"3._Tools/0304_rmedia/#gen_rmed3dx","text":"Generate a three-dimensional random medium file. 1 2 3 gen_rmed3d.x [-o outfile] [-nx nx] [-ny ny] [-nz nz] [-epsil epsilon] [-kappa kappa] [-dx dx] [-dy dy] [-dz dz] [-ax ax] [-ay ay] [-az az] [-ptype ptype] {-seed seed_number} -o outfile Name of the output file. -nx nx , -ny ny -nz nz Number of grids in the x -, y -, and z -directions. They must be a power of 2. -epsil epsilon Root mean square (RMS) of the velocity fluctuation \\varepsilon . -ax ax , -ay ay , -az az Characteristic scales in the x -, y -, and z -directions in units of km. -dx dx -dy dy -dz dz Grid width in the x -, y -, and z -directions. They should be identical to the simulation parameters. -ptype ptype Choice of power spectrum density functions (PSDFs) of the random media model in wavenumber space: 1 for Gaussian, 2 for Exponential, and 3 for von K\u00e1rm\u00e1n. -kappa kappa The parameter \\kappa for the von K\u00e1rm\u00e1n-type PSDF. -seed seed_number Specify the seed number of the random variable generation (optional). If this option is not specified, the seed number is automatically generated based on the execution date and time. The random media file will be stored in the NetCDF format. Various software, such as ParaView and Panoply can be used for visualization Figure An example of 3D random media generated by gen_rmed3d.x and visualized by ParaView .","title":"gen_rmed3d.x"},{"location":"3._Tools/0304_rmedia/#gen_rmed2dx","text":"Generate a 2D random media file. Its usage is same as that of gen_rmed3d.x , with parameters related to the y-direction omitted.","title":"gen_rmed2d.x"},{"location":"3._Tools/0305_python/","text":"Python integration \u00b6 New in version 5.3.0! Python is a rapidly glowing ecosystem for data analysis and visualization in seismology. Followings are some tips & tricks for those who would like to handle the input/output of the OpenSWPC in python. The following example uses ObsPy numpy xarray PyGMT under the Jupyter Notebook environment. Input parameter files \u00b6 A python module OpenSWPC/src/tools/swpc.py contains several utility functions to handle input parameter to the OpenSWPC. To use it, first add this directory to the module path: 1 2 import sys sys . path . append ( '/path/to/OpenSWPC/src/tools/' ) Then, the module can be loaded as follows: 1 import swpc A function prm_new() create the default parameter set. These parameters are equivalent to that defined in example/input.inf . 1 prm0 = swpc . prm_new () In python, parameter data are stored in a simple dictionary as shown below. Thus, the user can easily change the parameter values if necessary. 1 print ( prm0 ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 { 'title': 'swpc', 'odir': './out', 'ntdec_r': 50, 'strict_mode': False, 'nproc_x': 2, 'nproc_y': 2, 'nx': 384, 'ny': 384, 'nz': 384, 'nt': 1000, 'dx': 0.5, 'dy': 0.5, 'dz': 0.5, 'dt': 0.02, 'vcut': 1.5, 'xbeg': -96.0, 'ybeg': -96.0, 'zbeg': -10.0, 'tbeg': 0.0, 'clon': 139.7604, 'clat': 35.7182, 'phi': 0.0, 'fq_min': 0.02, 'fq_max': 2.0, 'fq_ref': 1.0, 'snp_format': 'netcdf', 'xy_ps%sw': False, 'xz_ps%sw': True, 'yz_ps%sw': False, 'fs_ps%sw': False, 'ob_ps%sw': True, 'xy_v%sw': False, 'xz_v%sw': True, 'yz_v%sw': False, 'fs_v%sw': False, 'ob_v%sw': True, 'xy_u%sw': False, 'xz_u%sw': True, 'yz_u%sw': False, 'fs_u%sw': False, 'ob_u%sw': True, 'z0_xy': 7.0, 'x0_yz': 0.0, 'y0_xz': 0.0, 'ntdec_s': 5, 'idec': 2, 'jdec': 2, 'kdec': 2, 'sw_wav_v': True, 'sw_wav_u': False, 'sw_wav_stress': False, 'sw_wav_strain': False, 'ntdec_w': 5, 'st_format': 'xy', 'fn_stloc': './example/stloc.xy', 'wav_format': 'sac', 'wav_calc_dist': False, 'stf_format': 'xym0ij', 'stftype': 'kupper', 'fn_stf': './example/source.dat', 'sdep_fit': 'asis', 'bf_mode': False, 'pw_mode': False, 'pw_ztop': 100.0, 'pw_zlen': 30.0, 'pw_ps': 'p', 'pw_strike': 0.0, 'pw_dip': 0.0, 'pw_rake': 0.0, 'abc_type': 'pml', 'na': 20, 'stabilize_pml': False, 'vmodel_type': 'lhm', 'is_ocean': True, 'topo_flatten': False, 'munk_profile': True, 'earth_flattening': False, 'vp0': 5.0, 'vs0': 3.0, 'rho0': 2.7, 'qp0': 200, 'qs0': 200, 'topo0': 0, 'dir_grd': ' ${ DATASET } /vmodel/ejivsm/', 'fn_grdlst': './example/grd.lst', 'node_grd': 0, 'fn_lhm': 'example/lhm.dat', 'dir_rmed': './in/', 'fn_grdlst_rmed': './example/grd.lst', 'rhomin': 1.0, 'fn_rmed0': 'dummy.ns', 'is_ckp': False, 'ckpdir': './out/ckp', 'ckp_interval': 1000000, 'ckp_time': 1000000.0, 'ckp_seq': True, 'green_mode': False, 'green_stnm': 'st01', 'green_cmp': 'z', 'green_trise': 1.0, 'green_bforce': False, 'green_maxdist': 550.0, 'green_fmt': 'llz', 'fn_glst': 'example/green.lst', 'stopwatch_mode': False, 'benchmark_mode': False, 'ipad': 0, 'jpad': 0, 'kpad': 0 } Also, one can read the parameter file by using prm_read() function. The following 1 prm1 = swpc . prm_read ( '/path/to/OpenSWPC/example/input.inf' ) Apply some modification to the prm1 ... 1 2 3 4 prm1 [ 'title' ] = 'new-simulation' prm1 [ 'nx' ] = 1024 prm1 [ 'ny' ] = 1024 prm1 [ 'nz' ] = 1024 To save the parameter to use in OpenSWPC, use prm_print() function. In default, this function exports all parameters to standard output. The followings are an example to save the parameter to file: 1 2 with open ( 'swpc.prm' , 'w' ) as fp : swpc . prm_print ( prm1 , io = fp ) Confirm the modified parameter is stored in the specified file: 1 ! head swpc . prm 1 2 3 4 5 6 7 8 9 10 title = 'new-simulation' odir = './out' ntdec_r = 50 strict_mode = .false. nproc_x = 2 nproc_y = 2 nx = 1024 ny = 1024 nz = 1024 nt = 1000 Output waveforms \u00b6 ObsPy is a de-facto standard on reading seismograms and applying basic manipulation of seismic data. Since the ObsPy can directly read the SAC-formatted seismogram, one can easily import the output waveform data generated by the OpenSWPC without any additional processings. Note that some user reported that the ObsPy occasionaly fails to specify the format when it reads SAC files produced by OpenSWPC properly. It is recommended to add format='sac' option to obspy.read() function to explicitly tell this is SAC-formatted file. 1 ls / path / to / OpenSWPC / output / wav / swpc_N . N . AAKH . Vz . sac /path/to/OpenSWPC/output/wav/swpc_N.N.AAKH.Vz.sac 1 import obspy 1 tr = obspy . read ( '/path/to/OpenSWPC/output/wav/*.Vz.sac' , format = 'sac' ) 1 2 3 4 # set distance to stats # original distance header in stats.sac.dist is not read by record section plot function in obspy for t in tr : t . stats . distance = t . stats . sac . dist * 1000 1 tr . plot ( type = 'section' , scale = 5 , offset_min = 0 , offset_max = 500 * 1000 , recordlength = 200 , reduce = 7 ) . show () 1 tr [ 10 ] . spectrogram ( wlen = 60 , log = True , title = 'Spectrogram example' ) Output snapshots \u00b6 2D snapshot data produced by OpenSWPC follows the CF metadata conventions of NetCDF format. There seems several libraries to read NetCDF files, and here is an exaple using xarray which has an affinity to the PyGMT . 1 fn_ob = '/path/to/OpenSWPC/output/swpc_N.ob.v.nc' 1 import xarray as xr 1 xr_ob = xr . open_dataset ( fn_ob ) xarray dataset contains multiple list (array) data, as the NetCDF data format: 1 xr_ob /* CSS stylesheet for displaying xarray objects in jupyterlab. * */ :root { --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1)); --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54)); --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38)); --xr-border-color: var(--jp-border-color2, #e0e0e0); --xr-disabled-color: var(--jp-layout-color3, #bdbdbd); --xr-background-color: var(--jp-layout-color0, white); --xr-background-color-row-even: var(--jp-layout-color1, white); --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee); } html[theme=dark], body[data-theme=dark], body.vscode-dark { --xr-font-color0: rgba(255, 255, 255, 1); --xr-font-color2: rgba(255, 255, 255, 0.54); --xr-font-color3: rgba(255, 255, 255, 0.38); --xr-border-color: #1F1F1F; --xr-disabled-color: #515151; --xr-background-color: #111111; --xr-background-color-row-even: #111111; --xr-background-color-row-odd: #313131; } .xr-wrap { display: block !important; min-width: 300px; max-width: 700px; } .xr-text-repr-fallback { /* fallback to plain text repr when CSS is not injected (untrusted notebook) */ display: none; } .xr-header { padding-top: 6px; padding-bottom: 6px; margin-bottom: 4px; border-bottom: solid 1px var(--xr-border-color); } .xr-header > div, .xr-header > ul { display: inline; margin-top: 0; margin-bottom: 0; } .xr-obj-type, .xr-array-name { margin-left: 2px; margin-right: 10px; } .xr-obj-type { color: var(--xr-font-color2); } .xr-sections { padding-left: 0 !important; display: grid; grid-template-columns: 150px auto auto 1fr 20px 20px; } .xr-section-item { display: contents; } .xr-section-item input { display: none; } .xr-section-item input + label { color: var(--xr-disabled-color); } .xr-section-item input:enabled + label { cursor: pointer; color: var(--xr-font-color2); } .xr-section-item input:enabled + label:hover { color: var(--xr-font-color0); } .xr-section-summary { grid-column: 1; color: var(--xr-font-color2); font-weight: 500; } .xr-section-summary > span { display: inline-block; padding-left: 0.5em; } .xr-section-summary-in:disabled + label { color: var(--xr-font-color2); } .xr-section-summary-in + label:before { display: inline-block; content: '\u25ba'; font-size: 11px; width: 15px; text-align: center; } .xr-section-summary-in:disabled + label:before { color: var(--xr-disabled-color); } .xr-section-summary-in:checked + label:before { content: '\u25bc'; } .xr-section-summary-in:checked + label > span { display: none; } .xr-section-summary, .xr-section-inline-details { padding-top: 4px; padding-bottom: 4px; } .xr-section-inline-details { grid-column: 2 / -1; } .xr-section-details { display: none; grid-column: 1 / -1; margin-bottom: 5px; } .xr-section-summary-in:checked ~ .xr-section-details { display: contents; } .xr-array-wrap { grid-column: 1 / -1; display: grid; grid-template-columns: 20px auto; } .xr-array-wrap > label { grid-column: 1; vertical-align: top; } .xr-preview { color: var(--xr-font-color3); } .xr-array-preview, .xr-array-data { padding: 0 5px !important; grid-column: 2; } .xr-array-data, .xr-array-in:checked ~ .xr-array-preview { display: none; } .xr-array-in:checked ~ .xr-array-data, .xr-array-preview { display: inline-block; } .xr-dim-list { display: inline-block !important; list-style: none; padding: 0 !important; margin: 0; } .xr-dim-list li { display: inline-block; padding: 0; margin: 0; } .xr-dim-list:before { content: '('; } .xr-dim-list:after { content: ')'; } .xr-dim-list li:not(:last-child):after { content: ','; padding-right: 5px; } .xr-has-index { font-weight: bold; } .xr-var-list, .xr-var-item { display: contents; } .xr-var-item > div, .xr-var-item label, .xr-var-item > .xr-var-name span { background-color: var(--xr-background-color-row-even); margin-bottom: 0; } .xr-var-item > .xr-var-name:hover span { padding-right: 5px; } .xr-var-list > li:nth-child(odd) > div, .xr-var-list > li:nth-child(odd) > label, .xr-var-list > li:nth-child(odd) > .xr-var-name span { background-color: var(--xr-background-color-row-odd); } .xr-var-name { grid-column: 1; } .xr-var-dims { grid-column: 2; } .xr-var-dtype { grid-column: 3; text-align: right; color: var(--xr-font-color2); } .xr-var-preview { grid-column: 4; } .xr-var-name, .xr-var-dims, .xr-var-dtype, .xr-preview, .xr-attrs dt { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; padding-right: 10px; } .xr-var-name:hover, .xr-var-dims:hover, .xr-var-dtype:hover, .xr-attrs dt:hover { overflow: visible; width: auto; z-index: 1; } .xr-var-attrs, .xr-var-data { display: none; background-color: var(--xr-background-color) !important; padding-bottom: 5px !important; } .xr-var-attrs-in:checked ~ .xr-var-attrs, .xr-var-data-in:checked ~ .xr-var-data { display: block; } .xr-var-data > table { float: right; } .xr-var-name span, .xr-var-data, .xr-attrs { padding-left: 25px !important; } .xr-attrs, .xr-var-attrs, .xr-var-data { grid-column: 1 / -1; } dl.xr-attrs { padding: 0; margin: 0; display: grid; grid-template-columns: 125px auto; } .xr-attrs dt, .xr-attrs dd { padding: 0; margin: 0; float: left; padding-right: 10px; width: auto; } .xr-attrs dt { font-weight: normal; grid-column: 1; } .xr-attrs dt:hover span { display: inline-block; background: var(--xr-background-color); padding-right: 10px; } .xr-attrs dd { grid-column: 2; white-space: pre-wrap; word-break: break-all; } .xr-icon-database, .xr-icon-file-text2 { display: inline-block; vertical-align: middle; width: 1em; height: 1.5em !important; stroke-width: 0; stroke: currentColor; fill: currentColor; } <xarray.Dataset> Dimensions: (x: 1067, y: 533, t: 600) Coordinates: * x (x) float32 -799.2 -797.8 -796.2 -794.8 ... 795.2 796.8 798.2 799.8 * y (y) float32 -399.2 -397.8 -396.2 -394.8 ... 394.2 395.8 397.2 398.8 * t (t) float32 0.025 1.025 2.025 3.025 ... 596.0 597.0 598.0 599.0 lon (y, x) float32 ... lat (y, x) float32 ... Data variables: rho (y, x) float32 ... lambda (y, x) float32 ... mu (y, x) float32 ... topo (y, x) float32 ... Vx (t, y, x) float32 ... Vy (t, y, x) float32 ... Vz (t, y, x) float32 ... max-V (y, x) float32 ... max-H (y, x) float32 ... max-A (y, x) float32 ... Attributes: (12/26) generated_by: SWPC codetype: SWPC_3D hdrver: 6 title: swpc_N exedate: 1664430044 ns1: 1067 ... ... evdp: 43.18 evx: -320.6624 evy: -66.1461 clon: 142.0 clat: 39.0 phi: 0.0 xarray.Dataset Dimensions: x : 1067 y : 533 t : 600 Coordinates: (5) x (x) float32 -799.2 -797.8 ... 798.2 799.8 long_name : x standard_name : projection_x_coordinate units : km actual_range : [-799.25 799.75] array([-799.25, -797.75, -796.25, ..., 796.75, 798.25, 799.75], dtype=float32) y (y) float32 -399.2 -397.8 ... 397.2 398.8 long_name : y standard_name : projection_y_coordinate units : km actual_range : [-399.25 398.75] array([-399.25, -397.75, -396.25, ..., 395.75, 397.25, 398.75], dtype=float32) t (t) float32 0.025 1.025 2.025 ... 598.0 599.0 long_name : t units : s array([2.50000e-02, 1.02500e+00, 2.02500e+00, ..., 5.97025e+02, 5.98025e+02, 5.99025e+02], dtype=float32) lon (y, x) float32 ... long_name : Longitude units : degrees_east actual_range : [136.8374 147.15616] [568711 values with dtype=float32] lat (y, x) float32 ... long_name : Latitude units : degrees_north actual_range : [31.725807 46.200157] [568711 values with dtype=float32] Data variables: (10) rho (y, x) float32 ... long_name : rho units : 10^3 kg/cm^3 actual_range : [2.25 3.2 ] [568711 values with dtype=float32] lambda (y, x) float32 ... long_name : lambda units : 10^9 Pa actual_range : [10.002981 50.560623] [568711 values with dtype=float32] mu (y, x) float32 ... long_name : mu units : 10^9 Pa actual_range : [ 5.004911 64.35583 ] [568711 values with dtype=float32] topo (y, x) float32 ... long_name : Topography units : m actual_range : [-9315.041 3645.4475] [568711 values with dtype=float32] Vx (t, y, x) float32 ... long_name : Vx units : m/s actual_range : [-5.082945 4.5914364] [341226600 values with dtype=float32] Vy (t, y, x) float32 ... long_name : Vy units : m/s actual_range : [-5.6842103 6.2938366] [341226600 values with dtype=float32] Vz (t, y, x) float32 ... long_name : Vz units : m/s actual_range : [-2.0089784 2.3452911] [341226600 values with dtype=float32] max-V (y, x) float32 ... long_name : Maximum amplitude of the vertical component units : m/s actual_range : [2.6916168e-05 2.3838887e+00] [568711 values with dtype=float32] max-H (y, x) float32 ... long_name : Maximum amplitude of the horizontal components units : m/s actual_range : [7.022181e-05 6.767687e+00] [568711 values with dtype=float32] max-A (y, x) float32 ... long_name : Maximum amplitude of the vector motion units : m/s actual_range : [7.5203607e-05 7.0090966e+00] [568711 values with dtype=float32] Attributes: (26) generated_by : SWPC codetype : SWPC_3D hdrver : 6 title : swpc_N exedate : 1664430044 ns1 : 1067 ns2 : 533 beg1 : -799.25 beg2 : -399.25 na1 : 6 na2 : 6 ds1 : 1.5 ds2 : 1.5 nmed : 6 nsnp : 3 coordinate : ob datatype : v3 dt : 1.0 evlo : 141.2653 evla : 36.1083 evdp : 43.18 evx : -320.6624 evy : -66.1461 clon : 142.0 clat : 39.0 phi : 0.0 Each data can be obtained by appending data varialbe name after . of the object: 1 xr_ob . topo . data 1 2 3 4 5 6 7 8 9 10 11 12 13 array([[-3902.103 , -3902.103 , -3902.103 , ..., 841.1037, 841.1037, 841.1037], [-3902.103 , -3902.103 , -3902.103 , ..., 841.1037, 841.1037, 841.1037], [-3902.103 , -3902.103 , -3902.103 , ..., 841.1037, 841.1037, 841.1037], ..., [-6059.085 , -6059.085 , -6059.085 , ..., -3449.3516, -3449.3516, -3449.3516], [-6059.085 , -6059.085 , -6059.085 , ..., -3449.3516, -3449.3516, -3449.3516], [-6059.085 , -6059.085 , -6059.085 , ..., -3449.3516, -3449.3516, -3449.3516]], dtype=float32) 1 xr_ob . lon . data 1 2 3 4 5 6 7 8 9 10 11 12 13 array([[137.7886 , 137.788 , 137.78738, ..., 136.83992, 136.83867, 136.8374 ], [137.80438, 137.80377, 137.80316, ..., 136.85922, 136.85797, 136.85672], [137.82018, 137.81956, 137.81895, ..., 136.87854, 136.87729, 136.87604], ..., [146.17456, 146.17517, 146.17578, ..., 147.11504, 147.11627, 147.11752], [146.19035, 146.19096, 146.19157, ..., 147.13434, 147.13559, 147.13684], [146.20613, 146.20674, 146.20737, ..., 147.15364, 147.1549 , 147.15616]], dtype=float32) 1 xr_ob . lat . data 1 2 3 4 5 6 7 8 9 10 11 12 13 array([[31.725807, 31.7393 , 31.752792, ..., 46.056538, 46.06998 , 46.08342 ], [31.72633 , 31.739822, 31.753315, ..., 46.05741 , 46.070854, 46.084293], [31.726849, 31.740343, 31.753836, ..., 46.05828 , 46.07172 , 46.085163], ..., [31.727022, 31.740515, 31.754007, ..., 46.058567, 46.07201 , 46.085453], [31.726503, 31.739996, 31.753489, ..., 46.0577 , 46.071144, 46.084583], [31.725983, 31.739475, 31.752968, ..., 46.056828, 46.07027 , 46.083714]], dtype=float32) ... and time slice of the wavefield can be reffered by the sequential time step number like 1 xr_ob . Vz [ 50 ] . data 1 2 3 4 5 6 7 array([[0., 0., 0., ..., 0., 0., 0.], [0., 0., 0., ..., 0., 0., 0.], [0., 0., 0., ..., 0., 0., 0.], ..., [0., 0., 0., ..., 0., 0., 0.], [0., 0., 0., ..., 0., 0., 0.], [0., 0., 0., ..., 0., 0., 0.]], dtype=float32) Note that the OpenSWPC performs simulations in the Cartesian coordinate. The result is mapped to the geographical cooridnate upon output, but the data is not evenly-spaced in longitude-latitude system. Thus, interpolation and/or resampling may be necessary to plot the wavefield on a map. 1 2 import pygmt import numpy as np 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # make interpolated grid data by nearneighbor function region = [ 136.5 , 147.5 , 31.5 , 46.5 ] spacing = 0.01 radius = 0.05 # topography grid grd_topo = pygmt . nearneighbor ( x = xr_ob . lon . data . ravel (), y = xr_ob . lat . data . ravel (), z = xr_ob . topo . data . ravel (), region = region , spacing = spacing , search_radius = radius ) # wavefield at 50th time step grd_wave = pygmt . nearneighbor ( x = xr_ob . lon . data . ravel (), y = xr_ob . lat . data . ravel (), z = xr_ob . Vz [ 50 ] . data . ravel (), region = region , spacing = spacing , search_radius = radius ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 fig = pygmt . Figure () with pygmt . config ( MAP_FRAME_TYPE = 'plain' ): # background topography pygmt . makecpt ( cmap = 'gray' , series = [ - 2000 , 2000 , 500 ], continuous = True ) fig . grdimage ( grid = grd_topo , projection = 'N142/10c' , region = region , frame = [ 'WSen' , 'xaf' , 'yaf' ]) # coastline fig . coast ( resolution = 'h' , area_thresh = 100 , shorelines = 'thin,black' ) # wavefield with tranparency pygmt . makecpt ( cmap = 'polar' , series = [ - 0.1 , 0.1 , 0.02 ], continuous = True , background = True ) fig . grdimage ( grid = grd_wave , transparency = 40 ) fig . show ()","title":"Python integration"},{"location":"3._Tools/0305_python/#python-integration","text":"New in version 5.3.0! Python is a rapidly glowing ecosystem for data analysis and visualization in seismology. Followings are some tips & tricks for those who would like to handle the input/output of the OpenSWPC in python. The following example uses ObsPy numpy xarray PyGMT under the Jupyter Notebook environment.","title":"Python integration"},{"location":"3._Tools/0305_python/#input-parameter-files","text":"A python module OpenSWPC/src/tools/swpc.py contains several utility functions to handle input parameter to the OpenSWPC. To use it, first add this directory to the module path: 1 2 import sys sys . path . append ( '/path/to/OpenSWPC/src/tools/' ) Then, the module can be loaded as follows: 1 import swpc A function prm_new() create the default parameter set. These parameters are equivalent to that defined in example/input.inf . 1 prm0 = swpc . prm_new () In python, parameter data are stored in a simple dictionary as shown below. Thus, the user can easily change the parameter values if necessary. 1 print ( prm0 ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 { 'title': 'swpc', 'odir': './out', 'ntdec_r': 50, 'strict_mode': False, 'nproc_x': 2, 'nproc_y': 2, 'nx': 384, 'ny': 384, 'nz': 384, 'nt': 1000, 'dx': 0.5, 'dy': 0.5, 'dz': 0.5, 'dt': 0.02, 'vcut': 1.5, 'xbeg': -96.0, 'ybeg': -96.0, 'zbeg': -10.0, 'tbeg': 0.0, 'clon': 139.7604, 'clat': 35.7182, 'phi': 0.0, 'fq_min': 0.02, 'fq_max': 2.0, 'fq_ref': 1.0, 'snp_format': 'netcdf', 'xy_ps%sw': False, 'xz_ps%sw': True, 'yz_ps%sw': False, 'fs_ps%sw': False, 'ob_ps%sw': True, 'xy_v%sw': False, 'xz_v%sw': True, 'yz_v%sw': False, 'fs_v%sw': False, 'ob_v%sw': True, 'xy_u%sw': False, 'xz_u%sw': True, 'yz_u%sw': False, 'fs_u%sw': False, 'ob_u%sw': True, 'z0_xy': 7.0, 'x0_yz': 0.0, 'y0_xz': 0.0, 'ntdec_s': 5, 'idec': 2, 'jdec': 2, 'kdec': 2, 'sw_wav_v': True, 'sw_wav_u': False, 'sw_wav_stress': False, 'sw_wav_strain': False, 'ntdec_w': 5, 'st_format': 'xy', 'fn_stloc': './example/stloc.xy', 'wav_format': 'sac', 'wav_calc_dist': False, 'stf_format': 'xym0ij', 'stftype': 'kupper', 'fn_stf': './example/source.dat', 'sdep_fit': 'asis', 'bf_mode': False, 'pw_mode': False, 'pw_ztop': 100.0, 'pw_zlen': 30.0, 'pw_ps': 'p', 'pw_strike': 0.0, 'pw_dip': 0.0, 'pw_rake': 0.0, 'abc_type': 'pml', 'na': 20, 'stabilize_pml': False, 'vmodel_type': 'lhm', 'is_ocean': True, 'topo_flatten': False, 'munk_profile': True, 'earth_flattening': False, 'vp0': 5.0, 'vs0': 3.0, 'rho0': 2.7, 'qp0': 200, 'qs0': 200, 'topo0': 0, 'dir_grd': ' ${ DATASET } /vmodel/ejivsm/', 'fn_grdlst': './example/grd.lst', 'node_grd': 0, 'fn_lhm': 'example/lhm.dat', 'dir_rmed': './in/', 'fn_grdlst_rmed': './example/grd.lst', 'rhomin': 1.0, 'fn_rmed0': 'dummy.ns', 'is_ckp': False, 'ckpdir': './out/ckp', 'ckp_interval': 1000000, 'ckp_time': 1000000.0, 'ckp_seq': True, 'green_mode': False, 'green_stnm': 'st01', 'green_cmp': 'z', 'green_trise': 1.0, 'green_bforce': False, 'green_maxdist': 550.0, 'green_fmt': 'llz', 'fn_glst': 'example/green.lst', 'stopwatch_mode': False, 'benchmark_mode': False, 'ipad': 0, 'jpad': 0, 'kpad': 0 } Also, one can read the parameter file by using prm_read() function. The following 1 prm1 = swpc . prm_read ( '/path/to/OpenSWPC/example/input.inf' ) Apply some modification to the prm1 ... 1 2 3 4 prm1 [ 'title' ] = 'new-simulation' prm1 [ 'nx' ] = 1024 prm1 [ 'ny' ] = 1024 prm1 [ 'nz' ] = 1024 To save the parameter to use in OpenSWPC, use prm_print() function. In default, this function exports all parameters to standard output. The followings are an example to save the parameter to file: 1 2 with open ( 'swpc.prm' , 'w' ) as fp : swpc . prm_print ( prm1 , io = fp ) Confirm the modified parameter is stored in the specified file: 1 ! head swpc . prm 1 2 3 4 5 6 7 8 9 10 title = 'new-simulation' odir = './out' ntdec_r = 50 strict_mode = .false. nproc_x = 2 nproc_y = 2 nx = 1024 ny = 1024 nz = 1024 nt = 1000","title":"Input parameter files"},{"location":"3._Tools/0305_python/#output-waveforms","text":"ObsPy is a de-facto standard on reading seismograms and applying basic manipulation of seismic data. Since the ObsPy can directly read the SAC-formatted seismogram, one can easily import the output waveform data generated by the OpenSWPC without any additional processings. Note that some user reported that the ObsPy occasionaly fails to specify the format when it reads SAC files produced by OpenSWPC properly. It is recommended to add format='sac' option to obspy.read() function to explicitly tell this is SAC-formatted file. 1 ls / path / to / OpenSWPC / output / wav / swpc_N . N . AAKH . Vz . sac /path/to/OpenSWPC/output/wav/swpc_N.N.AAKH.Vz.sac 1 import obspy 1 tr = obspy . read ( '/path/to/OpenSWPC/output/wav/*.Vz.sac' , format = 'sac' ) 1 2 3 4 # set distance to stats # original distance header in stats.sac.dist is not read by record section plot function in obspy for t in tr : t . stats . distance = t . stats . sac . dist * 1000 1 tr . plot ( type = 'section' , scale = 5 , offset_min = 0 , offset_max = 500 * 1000 , recordlength = 200 , reduce = 7 ) . show () 1 tr [ 10 ] . spectrogram ( wlen = 60 , log = True , title = 'Spectrogram example' )","title":"Output waveforms"},{"location":"3._Tools/0305_python/#output-snapshots","text":"2D snapshot data produced by OpenSWPC follows the CF metadata conventions of NetCDF format. There seems several libraries to read NetCDF files, and here is an exaple using xarray which has an affinity to the PyGMT . 1 fn_ob = '/path/to/OpenSWPC/output/swpc_N.ob.v.nc' 1 import xarray as xr 1 xr_ob = xr . open_dataset ( fn_ob ) xarray dataset contains multiple list (array) data, as the NetCDF data format: 1 xr_ob /* CSS stylesheet for displaying xarray objects in jupyterlab. * */ :root { --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1)); --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54)); --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38)); --xr-border-color: var(--jp-border-color2, #e0e0e0); --xr-disabled-color: var(--jp-layout-color3, #bdbdbd); --xr-background-color: var(--jp-layout-color0, white); --xr-background-color-row-even: var(--jp-layout-color1, white); --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee); } html[theme=dark], body[data-theme=dark], body.vscode-dark { --xr-font-color0: rgba(255, 255, 255, 1); --xr-font-color2: rgba(255, 255, 255, 0.54); --xr-font-color3: rgba(255, 255, 255, 0.38); --xr-border-color: #1F1F1F; --xr-disabled-color: #515151; --xr-background-color: #111111; --xr-background-color-row-even: #111111; --xr-background-color-row-odd: #313131; } .xr-wrap { display: block !important; min-width: 300px; max-width: 700px; } .xr-text-repr-fallback { /* fallback to plain text repr when CSS is not injected (untrusted notebook) */ display: none; } .xr-header { padding-top: 6px; padding-bottom: 6px; margin-bottom: 4px; border-bottom: solid 1px var(--xr-border-color); } .xr-header > div, .xr-header > ul { display: inline; margin-top: 0; margin-bottom: 0; } .xr-obj-type, .xr-array-name { margin-left: 2px; margin-right: 10px; } .xr-obj-type { color: var(--xr-font-color2); } .xr-sections { padding-left: 0 !important; display: grid; grid-template-columns: 150px auto auto 1fr 20px 20px; } .xr-section-item { display: contents; } .xr-section-item input { display: none; } .xr-section-item input + label { color: var(--xr-disabled-color); } .xr-section-item input:enabled + label { cursor: pointer; color: var(--xr-font-color2); } .xr-section-item input:enabled + label:hover { color: var(--xr-font-color0); } .xr-section-summary { grid-column: 1; color: var(--xr-font-color2); font-weight: 500; } .xr-section-summary > span { display: inline-block; padding-left: 0.5em; } .xr-section-summary-in:disabled + label { color: var(--xr-font-color2); } .xr-section-summary-in + label:before { display: inline-block; content: '\u25ba'; font-size: 11px; width: 15px; text-align: center; } .xr-section-summary-in:disabled + label:before { color: var(--xr-disabled-color); } .xr-section-summary-in:checked + label:before { content: '\u25bc'; } .xr-section-summary-in:checked + label > span { display: none; } .xr-section-summary, .xr-section-inline-details { padding-top: 4px; padding-bottom: 4px; } .xr-section-inline-details { grid-column: 2 / -1; } .xr-section-details { display: none; grid-column: 1 / -1; margin-bottom: 5px; } .xr-section-summary-in:checked ~ .xr-section-details { display: contents; } .xr-array-wrap { grid-column: 1 / -1; display: grid; grid-template-columns: 20px auto; } .xr-array-wrap > label { grid-column: 1; vertical-align: top; } .xr-preview { color: var(--xr-font-color3); } .xr-array-preview, .xr-array-data { padding: 0 5px !important; grid-column: 2; } .xr-array-data, .xr-array-in:checked ~ .xr-array-preview { display: none; } .xr-array-in:checked ~ .xr-array-data, .xr-array-preview { display: inline-block; } .xr-dim-list { display: inline-block !important; list-style: none; padding: 0 !important; margin: 0; } .xr-dim-list li { display: inline-block; padding: 0; margin: 0; } .xr-dim-list:before { content: '('; } .xr-dim-list:after { content: ')'; } .xr-dim-list li:not(:last-child):after { content: ','; padding-right: 5px; } .xr-has-index { font-weight: bold; } .xr-var-list, .xr-var-item { display: contents; } .xr-var-item > div, .xr-var-item label, .xr-var-item > .xr-var-name span { background-color: var(--xr-background-color-row-even); margin-bottom: 0; } .xr-var-item > .xr-var-name:hover span { padding-right: 5px; } .xr-var-list > li:nth-child(odd) > div, .xr-var-list > li:nth-child(odd) > label, .xr-var-list > li:nth-child(odd) > .xr-var-name span { background-color: var(--xr-background-color-row-odd); } .xr-var-name { grid-column: 1; } .xr-var-dims { grid-column: 2; } .xr-var-dtype { grid-column: 3; text-align: right; color: var(--xr-font-color2); } .xr-var-preview { grid-column: 4; } .xr-var-name, .xr-var-dims, .xr-var-dtype, .xr-preview, .xr-attrs dt { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; padding-right: 10px; } .xr-var-name:hover, .xr-var-dims:hover, .xr-var-dtype:hover, .xr-attrs dt:hover { overflow: visible; width: auto; z-index: 1; } .xr-var-attrs, .xr-var-data { display: none; background-color: var(--xr-background-color) !important; padding-bottom: 5px !important; } .xr-var-attrs-in:checked ~ .xr-var-attrs, .xr-var-data-in:checked ~ .xr-var-data { display: block; } .xr-var-data > table { float: right; } .xr-var-name span, .xr-var-data, .xr-attrs { padding-left: 25px !important; } .xr-attrs, .xr-var-attrs, .xr-var-data { grid-column: 1 / -1; } dl.xr-attrs { padding: 0; margin: 0; display: grid; grid-template-columns: 125px auto; } .xr-attrs dt, .xr-attrs dd { padding: 0; margin: 0; float: left; padding-right: 10px; width: auto; } .xr-attrs dt { font-weight: normal; grid-column: 1; } .xr-attrs dt:hover span { display: inline-block; background: var(--xr-background-color); padding-right: 10px; } .xr-attrs dd { grid-column: 2; white-space: pre-wrap; word-break: break-all; } .xr-icon-database, .xr-icon-file-text2 { display: inline-block; vertical-align: middle; width: 1em; height: 1.5em !important; stroke-width: 0; stroke: currentColor; fill: currentColor; } <xarray.Dataset> Dimensions: (x: 1067, y: 533, t: 600) Coordinates: * x (x) float32 -799.2 -797.8 -796.2 -794.8 ... 795.2 796.8 798.2 799.8 * y (y) float32 -399.2 -397.8 -396.2 -394.8 ... 394.2 395.8 397.2 398.8 * t (t) float32 0.025 1.025 2.025 3.025 ... 596.0 597.0 598.0 599.0 lon (y, x) float32 ... lat (y, x) float32 ... Data variables: rho (y, x) float32 ... lambda (y, x) float32 ... mu (y, x) float32 ... topo (y, x) float32 ... Vx (t, y, x) float32 ... Vy (t, y, x) float32 ... Vz (t, y, x) float32 ... max-V (y, x) float32 ... max-H (y, x) float32 ... max-A (y, x) float32 ... Attributes: (12/26) generated_by: SWPC codetype: SWPC_3D hdrver: 6 title: swpc_N exedate: 1664430044 ns1: 1067 ... ... evdp: 43.18 evx: -320.6624 evy: -66.1461 clon: 142.0 clat: 39.0 phi: 0.0 xarray.Dataset Dimensions: x : 1067 y : 533 t : 600 Coordinates: (5) x (x) float32 -799.2 -797.8 ... 798.2 799.8 long_name : x standard_name : projection_x_coordinate units : km actual_range : [-799.25 799.75] array([-799.25, -797.75, -796.25, ..., 796.75, 798.25, 799.75], dtype=float32) y (y) float32 -399.2 -397.8 ... 397.2 398.8 long_name : y standard_name : projection_y_coordinate units : km actual_range : [-399.25 398.75] array([-399.25, -397.75, -396.25, ..., 395.75, 397.25, 398.75], dtype=float32) t (t) float32 0.025 1.025 2.025 ... 598.0 599.0 long_name : t units : s array([2.50000e-02, 1.02500e+00, 2.02500e+00, ..., 5.97025e+02, 5.98025e+02, 5.99025e+02], dtype=float32) lon (y, x) float32 ... long_name : Longitude units : degrees_east actual_range : [136.8374 147.15616] [568711 values with dtype=float32] lat (y, x) float32 ... long_name : Latitude units : degrees_north actual_range : [31.725807 46.200157] [568711 values with dtype=float32] Data variables: (10) rho (y, x) float32 ... long_name : rho units : 10^3 kg/cm^3 actual_range : [2.25 3.2 ] [568711 values with dtype=float32] lambda (y, x) float32 ... long_name : lambda units : 10^9 Pa actual_range : [10.002981 50.560623] [568711 values with dtype=float32] mu (y, x) float32 ... long_name : mu units : 10^9 Pa actual_range : [ 5.004911 64.35583 ] [568711 values with dtype=float32] topo (y, x) float32 ... long_name : Topography units : m actual_range : [-9315.041 3645.4475] [568711 values with dtype=float32] Vx (t, y, x) float32 ... long_name : Vx units : m/s actual_range : [-5.082945 4.5914364] [341226600 values with dtype=float32] Vy (t, y, x) float32 ... long_name : Vy units : m/s actual_range : [-5.6842103 6.2938366] [341226600 values with dtype=float32] Vz (t, y, x) float32 ... long_name : Vz units : m/s actual_range : [-2.0089784 2.3452911] [341226600 values with dtype=float32] max-V (y, x) float32 ... long_name : Maximum amplitude of the vertical component units : m/s actual_range : [2.6916168e-05 2.3838887e+00] [568711 values with dtype=float32] max-H (y, x) float32 ... long_name : Maximum amplitude of the horizontal components units : m/s actual_range : [7.022181e-05 6.767687e+00] [568711 values with dtype=float32] max-A (y, x) float32 ... long_name : Maximum amplitude of the vector motion units : m/s actual_range : [7.5203607e-05 7.0090966e+00] [568711 values with dtype=float32] Attributes: (26) generated_by : SWPC codetype : SWPC_3D hdrver : 6 title : swpc_N exedate : 1664430044 ns1 : 1067 ns2 : 533 beg1 : -799.25 beg2 : -399.25 na1 : 6 na2 : 6 ds1 : 1.5 ds2 : 1.5 nmed : 6 nsnp : 3 coordinate : ob datatype : v3 dt : 1.0 evlo : 141.2653 evla : 36.1083 evdp : 43.18 evx : -320.6624 evy : -66.1461 clon : 142.0 clat : 39.0 phi : 0.0 Each data can be obtained by appending data varialbe name after . of the object: 1 xr_ob . topo . data 1 2 3 4 5 6 7 8 9 10 11 12 13 array([[-3902.103 , -3902.103 , -3902.103 , ..., 841.1037, 841.1037, 841.1037], [-3902.103 , -3902.103 , -3902.103 , ..., 841.1037, 841.1037, 841.1037], [-3902.103 , -3902.103 , -3902.103 , ..., 841.1037, 841.1037, 841.1037], ..., [-6059.085 , -6059.085 , -6059.085 , ..., -3449.3516, -3449.3516, -3449.3516], [-6059.085 , -6059.085 , -6059.085 , ..., -3449.3516, -3449.3516, -3449.3516], [-6059.085 , -6059.085 , -6059.085 , ..., -3449.3516, -3449.3516, -3449.3516]], dtype=float32) 1 xr_ob . lon . data 1 2 3 4 5 6 7 8 9 10 11 12 13 array([[137.7886 , 137.788 , 137.78738, ..., 136.83992, 136.83867, 136.8374 ], [137.80438, 137.80377, 137.80316, ..., 136.85922, 136.85797, 136.85672], [137.82018, 137.81956, 137.81895, ..., 136.87854, 136.87729, 136.87604], ..., [146.17456, 146.17517, 146.17578, ..., 147.11504, 147.11627, 147.11752], [146.19035, 146.19096, 146.19157, ..., 147.13434, 147.13559, 147.13684], [146.20613, 146.20674, 146.20737, ..., 147.15364, 147.1549 , 147.15616]], dtype=float32) 1 xr_ob . lat . data 1 2 3 4 5 6 7 8 9 10 11 12 13 array([[31.725807, 31.7393 , 31.752792, ..., 46.056538, 46.06998 , 46.08342 ], [31.72633 , 31.739822, 31.753315, ..., 46.05741 , 46.070854, 46.084293], [31.726849, 31.740343, 31.753836, ..., 46.05828 , 46.07172 , 46.085163], ..., [31.727022, 31.740515, 31.754007, ..., 46.058567, 46.07201 , 46.085453], [31.726503, 31.739996, 31.753489, ..., 46.0577 , 46.071144, 46.084583], [31.725983, 31.739475, 31.752968, ..., 46.056828, 46.07027 , 46.083714]], dtype=float32) ... and time slice of the wavefield can be reffered by the sequential time step number like 1 xr_ob . Vz [ 50 ] . data 1 2 3 4 5 6 7 array([[0., 0., 0., ..., 0., 0., 0.], [0., 0., 0., ..., 0., 0., 0.], [0., 0., 0., ..., 0., 0., 0.], ..., [0., 0., 0., ..., 0., 0., 0.], [0., 0., 0., ..., 0., 0., 0.], [0., 0., 0., ..., 0., 0., 0.]], dtype=float32) Note that the OpenSWPC performs simulations in the Cartesian coordinate. The result is mapped to the geographical cooridnate upon output, but the data is not evenly-spaced in longitude-latitude system. Thus, interpolation and/or resampling may be necessary to plot the wavefield on a map. 1 2 import pygmt import numpy as np 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # make interpolated grid data by nearneighbor function region = [ 136.5 , 147.5 , 31.5 , 46.5 ] spacing = 0.01 radius = 0.05 # topography grid grd_topo = pygmt . nearneighbor ( x = xr_ob . lon . data . ravel (), y = xr_ob . lat . data . ravel (), z = xr_ob . topo . data . ravel (), region = region , spacing = spacing , search_radius = radius ) # wavefield at 50th time step grd_wave = pygmt . nearneighbor ( x = xr_ob . lon . data . ravel (), y = xr_ob . lat . data . ravel (), z = xr_ob . Vz [ 50 ] . data . ravel (), region = region , spacing = spacing , search_radius = radius ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 fig = pygmt . Figure () with pygmt . config ( MAP_FRAME_TYPE = 'plain' ): # background topography pygmt . makecpt ( cmap = 'gray' , series = [ - 2000 , 2000 , 500 ], continuous = True ) fig . grdimage ( grid = grd_topo , projection = 'N142/10c' , region = region , frame = [ 'WSen' , 'xaf' , 'yaf' ]) # coastline fig . coast ( resolution = 'h' , area_thresh = 100 , shorelines = 'thin,black' ) # wavefield with tranparency pygmt . makecpt ( cmap = 'polar' , series = [ - 0.1 , 0.1 , 0.02 ], continuous = True , background = True ) fig . grdimage ( grid = grd_wave , transparency = 40 ) fig . show ()","title":"Output snapshots"},{"location":"3._Tools/0306_misc/","text":"Miscellaneous Tools \u00b6 timvis scripts \u00b6 Scripts timvis.gmt and timvis_abs.gmt are used to visualize the elapsed time of the computation obtained with the input parameter stopwatch_mode = .true. by using GMT versions 5 or later. Geographic Coordinate Conversion \u00b6 The Fortran programs ll2xy.x and xy2ll.x can project and inversely project the geographic and Cartesian coordinates with the same algorithm as OpenSWPC . These tools are provided for OpenSWPC version 3.0 or later. wvconv.x : a waveform conversion tool from 2D to 3D \u00b6 New in version 5.2 is a tool to convert 2D simulation results into 3D-simulation-equivalent seismic waveforms. Let us denote the 3D seismic waveform from a point source located at (\\xi, \\eta, \\zeta) as V_{3D}(\\xi, \\eta, \\zeta, t) . The 2D simulation result from a point source at (\\xi, \\zeta) can be expressed by line integral with respect to y-direction as \\begin{align} V_{2D}(\\xi, \\zeta, t) = \\int_{-\\infty}^\\infty V_{3D}(\\xi, \\eta, \\zeta, t) d \\eta. \\end{align} The inverse transformation can be written as 1 \\begin{align} V_{3D}(\\xi, \\eta=0, \\zeta, t) = \\frac{1}{\\pi} \\sqrt{\\frac{1}{2 R v}} \\frac{d}{dt} \\left[ \\frac{1}{\\sqrt{t}} \\ast V_{2D}(\\xi, \\zeta, t) \\right], \\end{align} where R is a propagation distance, and V is a seismic velocity at each phase appeared in the waveform. The simbol \\ast denotes convolution integral. The tool wvconv.x evaluate this translation by frequency-domain calculation with assumptions that R and V are both constant: \\begin{align} & \\widetilde{V}_{2D} (\\xi, \\zeta, f) = \\int_{-\\infty}^\\infty V_{2D} (\\xi, \\zeta, f) e^{i 2 \\pi f t} dt \\\\ & V_{3D}(\\xi, \\eta=0, \\zeta, t) = \\int_{-\\infty}^\\infty \\sqrt{-\\frac{i f}{Rv}} \\widetilde{V}_{2D} (\\xi, \\zeta, f) e^{-i 2 \\pi f t} d f. \\end{align} In the calculation, R is assuumed to be a straight line between the source and the receiver. The value of v can be given as a parameter, but by default it is calculated assuming v=4000 m/s. Usage: \u00b6 1 2 3 4 wvconv.x in.sac out.sac (V0) in.sac: input SAC file (must be 2D simulation output) out.sac: output SAC filename V0 (optional): assumed average velocity in m/s unit. Default is 4000 m/s As an example, the following figure shows a comparison between the waveform calculated with the P-SV 2D code in the 1D structure of example/lhm.dat and converted by wvconv.x ( V=4000 m/s) and the result of 3D calculation with the same structure. Figure Comparison of 3D simulation results (gray curve) and 2D P-SV simulation results converted by wvconv.x (red curve). Since the velocity of the seismic phase is assumed to be 4000 m/s, the amplitudes of the P-wave and subsequent surface wave phases are slightly different, but in general, the waveforms are in very good agreement. If the comparison is made without wvconv.x , the amplitudes and shapes of the waveforms are completely different. Warning wvconv.x is a very new code introduced in Version 5.2, and might contain bug(s). Please use it with caution. Li, D., Helmberger, D., Clayton, R. W., & Sun, D. (2014). Global synthetic seismograms using a 2-D finite-difference method. Geophysical Journal International, 197(2), 1166\u20131183. doi:10.1093/gji/ggu050 \u21a9","title":"Miscellaneous Tools"},{"location":"3._Tools/0306_misc/#miscellaneous-tools","text":"","title":"Miscellaneous Tools"},{"location":"3._Tools/0306_misc/#timvis-scripts","text":"Scripts timvis.gmt and timvis_abs.gmt are used to visualize the elapsed time of the computation obtained with the input parameter stopwatch_mode = .true. by using GMT versions 5 or later.","title":"timvis scripts"},{"location":"3._Tools/0306_misc/#geographic-coordinate-conversion","text":"The Fortran programs ll2xy.x and xy2ll.x can project and inversely project the geographic and Cartesian coordinates with the same algorithm as OpenSWPC . These tools are provided for OpenSWPC version 3.0 or later.","title":"Geographic Coordinate Conversion"},{"location":"3._Tools/0306_misc/#wvconvx-a-waveform-conversion-tool-from-2d-to-3d","text":"New in version 5.2 is a tool to convert 2D simulation results into 3D-simulation-equivalent seismic waveforms. Let us denote the 3D seismic waveform from a point source located at (\\xi, \\eta, \\zeta) as V_{3D}(\\xi, \\eta, \\zeta, t) . The 2D simulation result from a point source at (\\xi, \\zeta) can be expressed by line integral with respect to y-direction as \\begin{align} V_{2D}(\\xi, \\zeta, t) = \\int_{-\\infty}^\\infty V_{3D}(\\xi, \\eta, \\zeta, t) d \\eta. \\end{align} The inverse transformation can be written as 1 \\begin{align} V_{3D}(\\xi, \\eta=0, \\zeta, t) = \\frac{1}{\\pi} \\sqrt{\\frac{1}{2 R v}} \\frac{d}{dt} \\left[ \\frac{1}{\\sqrt{t}} \\ast V_{2D}(\\xi, \\zeta, t) \\right], \\end{align} where R is a propagation distance, and V is a seismic velocity at each phase appeared in the waveform. The simbol \\ast denotes convolution integral. The tool wvconv.x evaluate this translation by frequency-domain calculation with assumptions that R and V are both constant: \\begin{align} & \\widetilde{V}_{2D} (\\xi, \\zeta, f) = \\int_{-\\infty}^\\infty V_{2D} (\\xi, \\zeta, f) e^{i 2 \\pi f t} dt \\\\ & V_{3D}(\\xi, \\eta=0, \\zeta, t) = \\int_{-\\infty}^\\infty \\sqrt{-\\frac{i f}{Rv}} \\widetilde{V}_{2D} (\\xi, \\zeta, f) e^{-i 2 \\pi f t} d f. \\end{align} In the calculation, R is assuumed to be a straight line between the source and the receiver. The value of v can be given as a parameter, but by default it is calculated assuming v=4000 m/s.","title":"wvconv.x: a waveform conversion tool from 2D to 3D"},{"location":"3._Tools/0306_misc/#usage","text":"1 2 3 4 wvconv.x in.sac out.sac (V0) in.sac: input SAC file (must be 2D simulation output) out.sac: output SAC filename V0 (optional): assumed average velocity in m/s unit. Default is 4000 m/s As an example, the following figure shows a comparison between the waveform calculated with the P-SV 2D code in the 1D structure of example/lhm.dat and converted by wvconv.x ( V=4000 m/s) and the result of 3D calculation with the same structure. Figure Comparison of 3D simulation results (gray curve) and 2D P-SV simulation results converted by wvconv.x (red curve). Since the velocity of the seismic phase is assumed to be 4000 m/s, the amplitudes of the P-wave and subsequent surface wave phases are slightly different, but in general, the waveforms are in very good agreement. If the comparison is made without wvconv.x , the amplitudes and shapes of the waveforms are completely different. Warning wvconv.x is a very new code introduced in Version 5.2, and might contain bug(s). Please use it with caution. Li, D., Helmberger, D., Clayton, R. W., & Sun, D. (2014). Global synthetic seismograms using a 2-D finite-difference method. Geophysical Journal International, 197(2), 1166\u20131183. doi:10.1093/gji/ggu050 \u21a9","title":"Usage:"},{"location":"4._Hints/0401_modelset/","text":"For Parameter Settings \u00b6 The 3D simulation is bounded by the total memory size. The code requires \\begin{align} \\begin{split} &m_\\text{MP} = 116 + 24 \\mathtt{NM} = 188 \\quad (\\mathtt{NM}=3) \\quad \\text{byte} \\\\ \\end{split}\\end{align} of memory for the case of mixed precision ( MP=DP ) with a GNZ viscoelastic body of NM=3 . Note that this is a coarse estimate excluding the effect of an absorbing boundary. The computation time can be roughly estimated by the parameter \\mathtt{n_G} , which is defined as the number of spatial and/or temporal grids that one CPU can process in a second. This value depends on the CPU, as shown in the following table. Architecture Name CPU #Core \\mathtt{n_G} Mac Pro 2010 Intel Xeon X5670 2.93GHz 6 6.7 \\times 10^{6} EIC2015 (ERI,UTokyo) Intel Xeon E5-2680 v3 2.5 GHz 12 7.0 \\times 10^{6} The earth simulator (3rd gen.) NEC SX-ACE 4 57 \\times 10^{6} The total computation time can be estimated by \\begin{align} t_\\text{comp} = \\frac{ {\\tt nx}\\times {\\tt ny}\\times {\\tt nz}}{ \\mathtt{n_G} \\times \\tt nproc} \\times {\\tt nt} \\quad \\text{[s]}\\end{align} where ncore is the number of CPU cores used in the computation. If the estimated time exceeds that provided by the computer system, it is recommended to make the model size smaller and/or to use checkpointing/restarting.","title":"For Parameter Settings"},{"location":"4._Hints/0401_modelset/#for-parameter-settings","text":"The 3D simulation is bounded by the total memory size. The code requires \\begin{align} \\begin{split} &m_\\text{MP} = 116 + 24 \\mathtt{NM} = 188 \\quad (\\mathtt{NM}=3) \\quad \\text{byte} \\\\ \\end{split}\\end{align} of memory for the case of mixed precision ( MP=DP ) with a GNZ viscoelastic body of NM=3 . Note that this is a coarse estimate excluding the effect of an absorbing boundary. The computation time can be roughly estimated by the parameter \\mathtt{n_G} , which is defined as the number of spatial and/or temporal grids that one CPU can process in a second. This value depends on the CPU, as shown in the following table. Architecture Name CPU #Core \\mathtt{n_G} Mac Pro 2010 Intel Xeon X5670 2.93GHz 6 6.7 \\times 10^{6} EIC2015 (ERI,UTokyo) Intel Xeon E5-2680 v3 2.5 GHz 12 7.0 \\times 10^{6} The earth simulator (3rd gen.) NEC SX-ACE 4 57 \\times 10^{6} The total computation time can be estimated by \\begin{align} t_\\text{comp} = \\frac{ {\\tt nx}\\times {\\tt ny}\\times {\\tt nz}}{ \\mathtt{n_G} \\times \\tt nproc} \\times {\\tt nt} \\quad \\text{[s]}\\end{align} where ncore is the number of CPU cores used in the computation. If the estimated time exceeds that provided by the computer system, it is recommended to make the model size smaller and/or to use checkpointing/restarting.","title":"For Parameter Settings"},{"location":"4._Hints/0402_modification/","text":"For Modifying the Code \u00b6 Defining Your own Velocity Model \u00b6 The velocity structure is defined by the subroutine vmodel_* , called by the module m_medium.F90 . These subroutines commonly have the input/output parameters defined in the following table. \u5909\u6570\u540d in/out type \u8aac\u660e io_prm in integer I/O number of the input parameter file i0,i1 in integer Start/end indices of arrays in x-direction j0,j1 in integer Start/end indices of arrays in y-direction k0,k1 in integer Start/end indices of arrays in z-direction xc(i0:i1) in real x grid locations yc(i0:i1) in real y grid locations zc(i0:i1) in real z grid locations vcut in real Cut-off velocity rho(k0:k1,i0:i1,j0:j1) out real Mass density [g/cm {}^3 ] lam(k0:k1,i0:i1,j0:j1) out real Lame coefficient \\lambda [g/cm {}^3 ] mu(k0:k1,i0:i1,j0:j1) out real Lame coefficient \\mu [g/cm {}^3 ] qp(k0:k1,i0:i1,j0:j1) out real Q_P qs(k0:k1,i0:i1,j0:j1) out real Q_S bddep(i0:i1,j0:j1,0:NBD) out real Discontinuity boundary depths [km] By creating a Fortran subroutine that returns the medium parameters rho, lam, mu, qp and qs at locations given in the input of the subroutines xc, yc , and zc , it is easy to add a new velocity model. The topography and bathymetry are automatically investigated in the m_medium module after calling the vmodel_ast routine. To make this investigation work properly, the medium parameter mu must be zero in the air and ocean columns and lam must be zero in the air column. The variables bddep(:,:,0) are assumed to be the topography, and are used for the snapshot output. The other values of bddep(:,:,1:NBD) are used to fit the source and/or station location to the discontinuity depths. Providing dummy values of these functions is not necessary. Defining Your own Source Time Function \u00b6 The source time function is called by the source__momentrate Fortran function in m_source.F90 based on the choice of stftype . The definitions of the source time functions are given in share/m_fdtool.F90 . It is easy to add a new source time function here and to add the call to the new function in the m_source module. All of the pre-defined source time functions take two time parameters, tbeg and trise . In the source code, they are stored in the array variable srcprm(:) . If the new source time function requires more than three parameters, the user can expand the array srcprm(:) to store them. Appending New Control Parameters \u00b6 In many Fortran modules, the first set-up is performed by subroutines called (modulename)__setup during the first computation. Some of the setup modules read parameters from the input parameter file. These parameters are read by the subroutine readini , which is defined in shared/m_readini.F90 .","title":"For Modifying the Code"},{"location":"4._Hints/0402_modification/#for-modifying-the-code","text":"","title":"For Modifying the Code"},{"location":"4._Hints/0402_modification/#defining-your-own-velocity-model","text":"The velocity structure is defined by the subroutine vmodel_* , called by the module m_medium.F90 . These subroutines commonly have the input/output parameters defined in the following table. \u5909\u6570\u540d in/out type \u8aac\u660e io_prm in integer I/O number of the input parameter file i0,i1 in integer Start/end indices of arrays in x-direction j0,j1 in integer Start/end indices of arrays in y-direction k0,k1 in integer Start/end indices of arrays in z-direction xc(i0:i1) in real x grid locations yc(i0:i1) in real y grid locations zc(i0:i1) in real z grid locations vcut in real Cut-off velocity rho(k0:k1,i0:i1,j0:j1) out real Mass density [g/cm {}^3 ] lam(k0:k1,i0:i1,j0:j1) out real Lame coefficient \\lambda [g/cm {}^3 ] mu(k0:k1,i0:i1,j0:j1) out real Lame coefficient \\mu [g/cm {}^3 ] qp(k0:k1,i0:i1,j0:j1) out real Q_P qs(k0:k1,i0:i1,j0:j1) out real Q_S bddep(i0:i1,j0:j1,0:NBD) out real Discontinuity boundary depths [km] By creating a Fortran subroutine that returns the medium parameters rho, lam, mu, qp and qs at locations given in the input of the subroutines xc, yc , and zc , it is easy to add a new velocity model. The topography and bathymetry are automatically investigated in the m_medium module after calling the vmodel_ast routine. To make this investigation work properly, the medium parameter mu must be zero in the air and ocean columns and lam must be zero in the air column. The variables bddep(:,:,0) are assumed to be the topography, and are used for the snapshot output. The other values of bddep(:,:,1:NBD) are used to fit the source and/or station location to the discontinuity depths. Providing dummy values of these functions is not necessary.","title":"Defining Your own Velocity Model"},{"location":"4._Hints/0402_modification/#defining-your-own-source-time-function","text":"The source time function is called by the source__momentrate Fortran function in m_source.F90 based on the choice of stftype . The definitions of the source time functions are given in share/m_fdtool.F90 . It is easy to add a new source time function here and to add the call to the new function in the m_source module. All of the pre-defined source time functions take two time parameters, tbeg and trise . In the source code, they are stored in the array variable srcprm(:) . If the new source time function requires more than three parameters, the user can expand the array srcprm(:) to store them.","title":"Defining Your own Source Time Function"},{"location":"4._Hints/0402_modification/#appending-new-control-parameters","text":"In many Fortran modules, the first set-up is performed by subroutines called (modulename)__setup during the first computation. Some of the setup modules read parameters from the input parameter file. These parameters are read by the subroutine readini , which is defined in shared/m_readini.F90 .","title":"Appending New Control Parameters"},{"location":"ja/License/","text":"\u30e9\u30a4\u30bb\u30f3\u30b9 \u00b6 \u672c\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306f MIT License \u306e\u3082\u3068\u63d0\u4f9b\u3055\u308c\u307e\u3059\uff0e Copyright \u00a9 2013-2023 Takuto Maeda THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \u52a0\u3048\u3066\uff0c\u3053\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u5229\u7528\u3057\u305f\u6210\u679c\u3092\u516c\u8868\u3059\u308b\u5834\u5408\u306b\u306f\uff0c\u4ee5\u4e0b\u306e\u4e00\u9023\u306e\u95a2\u9023\u8ad6\u6587\u306e\u4e2d\u304b\u3089\u9069\u5207\u306a\u3082\u306e\u3092\u5f15\u7528\u3057\u3066\u3044\u305f\u3060\u304f\u3088\u3046\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\uff08\u305f\u3060\u3057\uff0c\u3053\u308c\u306f\u30e9\u30a4\u30bb\u30f3\u30b9\u4e0a\u306e\u7fa9\u52d9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\uff09\uff0e Accompanying Paper \u00b6 Maeda, T., S. Takemura, and T. Furumura (2017), OpenSWPC: An open-source integrated parallel simulation code for modeling seismic wave propagation in 3D heterogeneous viscoelastic media, Earth Planets Space , 69 , 102, doi:10.1186/s40623-017-0687-2. Related Papers \u00b6 Furumura, T. and L. Chen (2004), Large scale parallel simulation and visualization of 3D seismic wavefield using the Earth Simulator, Comp. Model. Eng. Sci. , 6 , 153-168. doi: 10.3970/cmes.2004.006.153 Furumura, T. and L. Chen (2005), Parallel simulation of strong ground motions during recent and historical damaging earthquakes in Tokyo, Japan, Parallel Computing , 31 , 149-165. doi: 10.1016/j.parco.2005.02.003 Furumura, T. Hayakawa, M. Nakamura, K. Koketsu, and T. Baba (2008), Development of long-period ground motions from the Nankai Trough, Japan, earthquakes: Observations and computer simulation of the 1944 Tonankai (Mw 8.1) and the 2004 SE Off-Kii Peninsula (Mw 7.4) earthquakes, Pure Appl. Geophys. , 165 , 585-607. doi: 10.1007/s00024-008-0318-8 Furumura, T. and T. Saito (2009), An integrated simulation of ground motion and tsunami for the 1944 Tonankai earthquake using high-performance super computers, J. Disast. Res. , 4 , 118-126. https://www.fujipress.jp/jdr/dr/dsstr000400020118/ Noguchi, S., T. Maeda, and T. Furumura (2013), FDM simulation of an anomalous later phase from the Japan Trench subduction zone earthquakes, Pure Appl. Geophys. , 170 , 95-108. doi: 10.1007/s00024-011-0412-1 Maeda, T., and T. Furumura (2013), FDM simulation of seismic waves, ocean acoustic waves, and tsunamis based on tsunami-coupled equations of motion, Pure Appl. Geophys. , 170 , 109-127. doi: 10.1007/s00024-011-0430-z Maeda, T., T. Furumura, S. Noguchi, S. Takemura, S. Sakai, M. Shinohara, K. Iwai, S. J. Lee (2013), Seismic and tsunami wave propagation of the 2011 Off the Pacific Coast of Tohoku Earthquake as inferred from the tsunami-coupled finite difference simulation, Bull. Seism. Soc. Am. , 103 , 1456-1472. doi: 10.1785/0120120118 Maeda, T., T. Furumura, and K. Obara (2014), Scattering of teleseismic P-waves by the Japan Trench: A significant effect of reverberation in the seawater column, Earth Planet. Sci. Lett. , 397 , 101-110. doi: 10.1016/j.epsl.2014.04.037 Noguchi, S., T. Maeda, and T. Furumura (2016), Ocean-influenced Rayleigh waves from outer-rise earthquakes and their effects on durations of long-period ground motion, Geophys. J. Int ., 205 , 1099-1107. doi: 10.1093/gji/ggw074 Takemura, S., T. Maeda, T. Furumura, and K. Obara (2016), Constraining the source location of the 30 May 2015 (Mw 7.9) Bonin deep-focus earthquake using seismogram envelopes of high-frequency P waveforms: occurrence of deep-focus earthquake at the bottom of a subducting slab, Geophys. Res. Lett. , 43 , 4297-4302. doi: 10.1002/2016GL068437 Yoshimitsu, N., T. Furumura, and T. Maeda (2016), Geometric effect on a laboratory-scale wavefield inferred from a three-dimensional numerical simulation, J. Appl. Geophys. , 132 , 184-192. doi: 10.1016/j.jappgeo.2016.07.002 Maeda, T., K. Nishida, R. Takagi, and K. Obara (2016), Reconstruction of a 2D seismic wavefield by seismic gradiometry, Prog. Earth Planet. Sci. , 3 , 31. doi: 10.1186/s40645-016-0107-4 Todoriki, M., T. Furumura, and T. Maeda (2017), Effects of seawater on elongated duration of ground motion as well as variation in its amplitude for offshore earthquakes, Geophys. J. Int. , 208 , 226-233. doi: 10.1093/gji/ggw388 Toya, M., A. Kato, T. Maeda, K. Obara, T. Takeda, and K. Yamaoka (2017), Down-dip variations in a subducting low-velocity zone linked to episodic tremor and slip: a new constraint from ScSp waves, Scientific Reports , 7 , 2868. doi: 10.1038/s41598-017-03048-6 Morioka, H., H. Kumagai, and T. Maeda (2017), Theoretical basis of the amplitude source location method for volcano-seismic signals, J. Geophys. Res. , 122 , 6538-6551. doi: 10.1002/2017JB013997 Furumura, T., & Kennett, B. L. N. (2018). Regional distance PL phase in the crustal waveguide\u2014An analog to the teleseismic W phase in the upper\u2010mantle waveguide. J. Geophys. Res. , 123 , 4007\u2013 4024. doi: 10.1029/2018JB015717 Furumura, T., & Kennett, B. L. N. (2019). The significance of long\u2010period ground motion at regional to teleseismic distances from the 610 km deep Mw8.3 Sea of Okhotsk earthquake of 24 May 2013. J. Geophys. Res. , 124 . doi: 10.1029/2019JB018147","title":"\u30e9\u30a4\u30bb\u30f3\u30b9"},{"location":"ja/License/#_1","text":"\u672c\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306f MIT License \u306e\u3082\u3068\u63d0\u4f9b\u3055\u308c\u307e\u3059\uff0e Copyright \u00a9 2013-2023 Takuto Maeda THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \u52a0\u3048\u3066\uff0c\u3053\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u5229\u7528\u3057\u305f\u6210\u679c\u3092\u516c\u8868\u3059\u308b\u5834\u5408\u306b\u306f\uff0c\u4ee5\u4e0b\u306e\u4e00\u9023\u306e\u95a2\u9023\u8ad6\u6587\u306e\u4e2d\u304b\u3089\u9069\u5207\u306a\u3082\u306e\u3092\u5f15\u7528\u3057\u3066\u3044\u305f\u3060\u304f\u3088\u3046\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\uff08\u305f\u3060\u3057\uff0c\u3053\u308c\u306f\u30e9\u30a4\u30bb\u30f3\u30b9\u4e0a\u306e\u7fa9\u52d9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\uff09\uff0e","title":"\u30e9\u30a4\u30bb\u30f3\u30b9"},{"location":"ja/","text":"OpenSWPC \u30e6\u30fc\u30b6\u30fc\u30ba\u30ac\u30a4\u30c9 \u00b6 Description \u00b6 OpenSWPC\u306f3\u6b21\u5143\u30fb2\u6b21\u5143\uff08P-SV/SH\uff09\u7a7a\u9593\u306b\u304a\u3044\u3066\u7dda\u5f62\u5f3e\u6027\u4f53\u30fb\u7c98\u5f3e\u6027\u4f53\u306e\u69cb\u6210\u65b9\u7a0b\u5f0f\u306e\u3082\u3068\u306b\u5f3e\u6027\u4f53\u306e\u904b\u52d5\u65b9\u7a0b\u5f0f\u3092\u5dee\u5206\u6cd5\u3067\u96e2\u6563\u5316\u3057\uff0c\u5730\u9707\u6ce2\u306e\u4f1d\u64ad\u3092MPI (Message Passing Interface)\u306b\u57fa\u3065\u304f\u4e26\u5217\u8a08\u7b97\u306b\u3088\u3063\u3066\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u30c4\u30fc\u30eb\u3067\u3059\uff0e\u307e\u305f\uff0c\u7d50\u679c\u306e\u53ef\u8996\u5316\u3084\u5909\u63db\u306e\u95a2\u9023\u30c4\u30fc\u30eb\u3082\u5408\u308f\u305b\u3066\u63d0\u4f9b\u3055\u308c\u307e\u3059\uff0e","title":"OpenSWPC \u30e6\u30fc\u30b6\u30fc\u30ba\u30ac\u30a4\u30c9"},{"location":"ja/#openswpc","text":"","title":"OpenSWPC \u30e6\u30fc\u30b6\u30fc\u30ba\u30ac\u30a4\u30c9"},{"location":"ja/#description","text":"OpenSWPC\u306f3\u6b21\u5143\u30fb2\u6b21\u5143\uff08P-SV/SH\uff09\u7a7a\u9593\u306b\u304a\u3044\u3066\u7dda\u5f62\u5f3e\u6027\u4f53\u30fb\u7c98\u5f3e\u6027\u4f53\u306e\u69cb\u6210\u65b9\u7a0b\u5f0f\u306e\u3082\u3068\u306b\u5f3e\u6027\u4f53\u306e\u904b\u52d5\u65b9\u7a0b\u5f0f\u3092\u5dee\u5206\u6cd5\u3067\u96e2\u6563\u5316\u3057\uff0c\u5730\u9707\u6ce2\u306e\u4f1d\u64ad\u3092MPI (Message Passing Interface)\u306b\u57fa\u3065\u304f\u4e26\u5217\u8a08\u7b97\u306b\u3088\u3063\u3066\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u30c4\u30fc\u30eb\u3067\u3059\uff0e\u307e\u305f\uff0c\u7d50\u679c\u306e\u53ef\u8996\u5316\u3084\u5909\u63db\u306e\u95a2\u9023\u30c4\u30fc\u30eb\u3082\u5408\u308f\u305b\u3066\u63d0\u4f9b\u3055\u308c\u307e\u3059\uff0e","title":"Description"},{"location":"ja/1._SetUp/0101_env/","text":"\u52d5\u4f5c\u74b0\u5883 \u00b6 OpenSWPC \u3092\u52d5\u4f5c\u3055\u305b\u308b\u306b\u306f\uff0cFortran 2003\u3092\uff08\u5c11\u306a\u304f\u3068\u3082\u90e8\u5206\u7684\u306b\uff09\u89e3\u3059\u308b\u3053\u3068\u306e\u3067\u304d\u308bFortran\u30b3\u30f3\u30d1\u30a4\u30e9\u306a\u3089\u3073\u306bMPI\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e\u672c\u30b3\u30fc\u30c9\u306f\u5358\u72ecCPU\uff08\u3042\u308b\u3044\u306fCPU\u30b3\u30a2\uff09\u3067\u52d5\u4f5c\u3055\u305b\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u304c\uff0c\u305d\u306e\u5834\u5408\u306b\u304a\u3044\u3066\u3082MPI\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u30fb\u5b9f\u884c\u6642\u306b\u5fc5\u8981\u3067\u3042\u308b\uff0e \u307e\u305f\uff0c\u5165\u51fa\u529b\u306b NetCDF \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306b\u306f\uff0c OpenSWPC \u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308bFortran\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u4f5c\u6210\u3057\u305fNetCDF\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e Fortran\u306e\u8a18\u6cd5\u306e\u307b\u3068\u3093\u3069\u306fFortran2003\u306e\u6a19\u6e96\u898f\u683c\u306b\u6cbf\u3063\u3066\u3044\u308b\uff0e \u4f8b\u5916\u3068\u3057\u3066\uff0cUnix\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3 system() \u3092\u4e00\u90e8\u3067\u7528\u3044\u3066\u3044\u308b\u304c\uff0c \u3053\u308c\u306f\u65e2\u5b58\u306e\u591a\u304f\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u74b0\u5883\u3067\u52d5\u4f5c\u3059\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3055\u308c\u3066\u3044\u308b\uff0e \u306f\uff0cFortran2003\u306e\u8a00\u8a9e\u4ed5\u69d8\u306e\u3046\u3061\u30b9\u30c8\u30ea\u30fc\u30e0\u5165\u51fa\u529b\u3092\u7528\u3044\u3066\u3044\u308b\uff0e \u3053\u306e\u6a5f\u80fd\u306f\u53e4\u3044\u30b3\u30f3\u30d1\u30a4\u30e9\uff08\u305f\u3068\u3048\u3070 gfortran \u306e\u30d0\u30fc\u30b8\u30e7\u30f34\u4ee5\u524d\u306a\u3069\uff09\u3067\u306f\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\uff0c\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e \u958b\u767a\u306a\u3089\u3073\u306b\u52d5\u4f5c\u78ba\u8a8d\u306f\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u884c\u3063\u3066\u3044\u308b\uff0e Apple macOS Ventura 13.0/Apple M1 Max GNU gfortran 12.2.0 OpenMPI 4.0.0 \u305d\u306e\u4ed6\uff0c\u4ee5\u4e0b\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u306e\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u3044\u308b\uff0e Ubuntu Linux 22.0 w/ gfortran 11.3 (Intel Xeon) JAMSTEC Earth Simulator (NEC SX Aurora Tsubasa) Wisteria/BDEC-01 of the University of Tokyo (Fujitsu FX1000; A64FX) \uff08\u4ee5\u4e0b\u306f\u3082\u3046\u5b58\u5728\u3057\u306a\u3044\u304c\u904e\u53bb\u306b\u52d5\u4f5c\u3057\u305f\u6a5f\u7a2e\u306e\u30ea\u30b9\u30c8\u3067\u3042\u308b\uff0e\uff09 EIC computer, ERI/UTokyo (ver. 2015; SGI Altix; intel fortran) JAMSTEC Earth Simulator (NEC SX-ACE; NEC compiler) AICS K computer (Fujitsu compiler) Nagoya University (FX10/Fx100; Fujitsu compiler) Linux Cent OS 6.6 (gfortran 4.9.2 & mpich) Linux Ubuntu 16.04LTS (gfortran 5.4 & OpenMPI)","title":"\u52d5\u4f5c\u74b0\u5883"},{"location":"ja/1._SetUp/0101_env/#_1","text":"OpenSWPC \u3092\u52d5\u4f5c\u3055\u305b\u308b\u306b\u306f\uff0cFortran 2003\u3092\uff08\u5c11\u306a\u304f\u3068\u3082\u90e8\u5206\u7684\u306b\uff09\u89e3\u3059\u308b\u3053\u3068\u306e\u3067\u304d\u308bFortran\u30b3\u30f3\u30d1\u30a4\u30e9\u306a\u3089\u3073\u306bMPI\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e\u672c\u30b3\u30fc\u30c9\u306f\u5358\u72ecCPU\uff08\u3042\u308b\u3044\u306fCPU\u30b3\u30a2\uff09\u3067\u52d5\u4f5c\u3055\u305b\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u304c\uff0c\u305d\u306e\u5834\u5408\u306b\u304a\u3044\u3066\u3082MPI\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u30fb\u5b9f\u884c\u6642\u306b\u5fc5\u8981\u3067\u3042\u308b\uff0e \u307e\u305f\uff0c\u5165\u51fa\u529b\u306b NetCDF \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306b\u306f\uff0c OpenSWPC \u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308bFortran\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u4f5c\u6210\u3057\u305fNetCDF\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e Fortran\u306e\u8a18\u6cd5\u306e\u307b\u3068\u3093\u3069\u306fFortran2003\u306e\u6a19\u6e96\u898f\u683c\u306b\u6cbf\u3063\u3066\u3044\u308b\uff0e \u4f8b\u5916\u3068\u3057\u3066\uff0cUnix\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3 system() \u3092\u4e00\u90e8\u3067\u7528\u3044\u3066\u3044\u308b\u304c\uff0c \u3053\u308c\u306f\u65e2\u5b58\u306e\u591a\u304f\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u74b0\u5883\u3067\u52d5\u4f5c\u3059\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3055\u308c\u3066\u3044\u308b\uff0e \u306f\uff0cFortran2003\u306e\u8a00\u8a9e\u4ed5\u69d8\u306e\u3046\u3061\u30b9\u30c8\u30ea\u30fc\u30e0\u5165\u51fa\u529b\u3092\u7528\u3044\u3066\u3044\u308b\uff0e \u3053\u306e\u6a5f\u80fd\u306f\u53e4\u3044\u30b3\u30f3\u30d1\u30a4\u30e9\uff08\u305f\u3068\u3048\u3070 gfortran \u306e\u30d0\u30fc\u30b8\u30e7\u30f34\u4ee5\u524d\u306a\u3069\uff09\u3067\u306f\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\uff0c\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e \u958b\u767a\u306a\u3089\u3073\u306b\u52d5\u4f5c\u78ba\u8a8d\u306f\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u884c\u3063\u3066\u3044\u308b\uff0e Apple macOS Ventura 13.0/Apple M1 Max GNU gfortran 12.2.0 OpenMPI 4.0.0 \u305d\u306e\u4ed6\uff0c\u4ee5\u4e0b\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u306e\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u3044\u308b\uff0e Ubuntu Linux 22.0 w/ gfortran 11.3 (Intel Xeon) JAMSTEC Earth Simulator (NEC SX Aurora Tsubasa) Wisteria/BDEC-01 of the University of Tokyo (Fujitsu FX1000; A64FX) \uff08\u4ee5\u4e0b\u306f\u3082\u3046\u5b58\u5728\u3057\u306a\u3044\u304c\u904e\u53bb\u306b\u52d5\u4f5c\u3057\u305f\u6a5f\u7a2e\u306e\u30ea\u30b9\u30c8\u3067\u3042\u308b\uff0e\uff09 EIC computer, ERI/UTokyo (ver. 2015; SGI Altix; intel fortran) JAMSTEC Earth Simulator (NEC SX-ACE; NEC compiler) AICS K computer (Fujitsu compiler) Nagoya University (FX10/Fx100; Fujitsu compiler) Linux Cent OS 6.6 (gfortran 4.9.2 & mpich) Linux Ubuntu 16.04LTS (gfortran 5.4 & OpenMPI)","title":"\u52d5\u4f5c\u74b0\u5883"},{"location":"ja/1._SetUp/0102_tree/","text":"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210 \u00b6 1 2 3 4 5 6 7 8 9 10 \u251c\u2500\u2500 doc : \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u251c\u2500\u2500 bin : \u5b9f\u884c\u30d0\u30a4\u30ca\u30ea \u251c\u2500\u2500 dataset : \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304a\u3088\u3073\u30c7\u30fc\u30bf\u751f\u6210\u30b9\u30af\u30ea\u30d7\u30c8 \u251c\u2500\u2500 example : \u5165\u529b\u30d5\u30a1\u30a4\u30eb\u30b5\u30f3\u30d7\u30eb \u2514\u2500\u2500 src : \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9 \u251c\u2500\u2500 swpc_3d : 3\u6b21\u5143\u554f\u984c \u251c\u2500\u2500 swpc_psv : 2\u6b21\u5143P-SV\u554f\u984c \u251c\u2500\u2500 swpc_sh : 2\u6b21\u5143SH\u554f\u984c \u251c\u2500\u2500 tools : \u53ef\u8996\u5316\u7b49\u30c4\u30fc\u30eb\u7fa4 \u2514\u2500\u2500 shared : \u5171\u901a\u30e2\u30b8\u30e5\u30fc\u30eb","title":"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210"},{"location":"ja/1._SetUp/0102_tree/#_1","text":"1 2 3 4 5 6 7 8 9 10 \u251c\u2500\u2500 doc : \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u251c\u2500\u2500 bin : \u5b9f\u884c\u30d0\u30a4\u30ca\u30ea \u251c\u2500\u2500 dataset : \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304a\u3088\u3073\u30c7\u30fc\u30bf\u751f\u6210\u30b9\u30af\u30ea\u30d7\u30c8 \u251c\u2500\u2500 example : \u5165\u529b\u30d5\u30a1\u30a4\u30eb\u30b5\u30f3\u30d7\u30eb \u2514\u2500\u2500 src : \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9 \u251c\u2500\u2500 swpc_3d : 3\u6b21\u5143\u554f\u984c \u251c\u2500\u2500 swpc_psv : 2\u6b21\u5143P-SV\u554f\u984c \u251c\u2500\u2500 swpc_sh : 2\u6b21\u5143SH\u554f\u984c \u251c\u2500\u2500 tools : \u53ef\u8996\u5316\u7b49\u30c4\u30fc\u30eb\u7fa4 \u2514\u2500\u2500 shared : \u5171\u901a\u30e2\u30b8\u30e5\u30fc\u30eb","title":"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210"},{"location":"ja/1._SetUp/0103_compile/","text":"\u30b3\u30f3\u30d1\u30a4\u30eb \u00b6 make \u00b6 src/swpc_3d , src/swpc_psv , src/swpc_sh , src/tools \u306e\u4e0b\u306b makefile \u304c\u3042\u308b\uff0e src/shared \u306b\u306f\u5404\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u5171\u901a\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u30b3\u30fc\u30c9\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\uff0e \u5404\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff08 src/swpc_* \uff09\u306b\u304a\u3044\u3066 make \u3059\u308b\u3053\u3068\u3067 bin \u4ee5\u4e0b\u306b\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u304c\u751f\u6210\u3055\u308c\u308b\uff0e makefile\u306e\u6307\u5b9a\u5909\u6570 \u00b6 makefile\u3067\u306f\u4ee5\u4e0b\u306e\u5909\u6570\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e \u5909\u6570 \u8aac\u660e FC \u30b3\u30f3\u30d1\u30a4\u30e9 FFLAGS \u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3 NCFLAG NetCDF \u5229\u7528\u30b9\u30a4\u30c3\u30c1 NCLIB NetCDF \u30e9\u30a4\u30d6\u30e9\u30ea\u683c\u7d0d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea NCINC NetCDF include\u30c7\u30a3\u30ec\u30af\u30c8\u30ea NETCDF NetCDF \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30ea\u30f3\u30af NCFLAG = -D_NETCDF \u304c\u6307\u5b9a\u3055\u308c\u308b\u3053\u3068\u306b\u3088\u308a\uff0c NetCDF \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5229\u7528\u3057\u305f\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u884c\u308f\u308c\u308b\uff0e \u3055\u307e\u3056\u307e\u306a\u8a08\u7b97\u6a5f\u74b0\u5883\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u305f\u3081\uff0c\u4ee5\u4e0b\u306e arch \u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u308a\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5206\u5c90\u3055\u305b\u3066\u3044\u308b: arch\u30aa\u30d7\u30b7\u30e7\u30f3\u540d \u5bfe\u8c61 NetCDF\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5834\u6240 mac-intel Mac OSX + Intel Compiler + OpenMPI ${HOME}/local mac-gfortran Mac OSX + gfortran + Open MPI /usr/local eic EIC2015\u74b0\u5883\u4e0b\u306eIntel Compiler ${HOME}/local fx (obsolete) \u5bcc\u58eb\u901aFX10, FX100 \u304a\u3088\u3073\u4eac\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf ${HOME}/xlocal es3 (obsolete) \u5730\u7403\u30b7\u30df\u30e5\u30ec\u30fc\u30bf \u30b7\u30b9\u30c6\u30e0\u63d0\u4f9b ubuntu-gfortran Ubuntu 16.04LTS + gfortran + Open MPI apt \u306b\u3088\u308b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb ofp (or oak) (obsolete) \u6771\u4eac\u5927\u5b66\u60c5\u5831\u57fa\u76e4\u30bb\u30f3\u30bf\u30fc Oakforest-PACS module \u30b3\u30de\u30f3\u30c9\u3092\u901a\u3058\u3066\u81ea\u52d5\u6307\u5b9a obcx (obsolete) \u6771\u4eac\u5927\u5b66\u60c5\u5831\u57fa\u76e4\u30bb\u30f3\u30bf\u30fc Oakbridge-CX module \u30b3\u30de\u30f3\u30c9\u3092\u901a\u3058\u3066\u81ea\u52d5\u6307\u5b9a bdec-o \u6771\u4eac\u5927\u5b66\u60c5\u5831\u57fa\u76e4\u30bb\u30f3\u30bf\u30fc Wisteria-Odyssey/BDEC01 module \u30b3\u30de\u30f3\u30c9\u3092\u901a\u3058\u3066\u81ea\u52d5\u6307\u5b9a \u305f\u3068\u3048\u3070 mac-gfortran \u306b\u76f8\u5f53\u3059\u308b\u74b0\u5883\u3067\u306f\uff0c 1 make arch = mac-gfortran \u3068\u3059\u308b\u3053\u3068\u3067\uff0c\u305d\u306e\u74b0\u5883\u306b\u9069\u3057\u305f\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u81ea\u52d5\u7684\u306b\u9078\u629e\u3055\u308c\u308b\uff0e\u307e\u305f\uff0c\u5e7e\u3064\u304b\u306e\u74b0\u5883\u3067\u306f\uff0c 1 make arch = eic debug = true \u306e\u3088\u3046\u306b debug=true \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u308b\u3068\uff0c\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3 FFLAGS \u304c\u30c7\u30d0\u30c3\u30b0\u306b\u9069\u3057\u305f\u3082\u306e\u306b\u5909\u66f4\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\uff0e\u3053\u308c\u3089\u306e\u5909\u6570\u306f src/shared/makefile.arch \u3068 src/shared/makefile-tools.arch \u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\uff0e\u65b0\u305f\u306a\u74b0\u5883\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\uff0c\u3053\u308c\u3089\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u8a18\u3059\u308b\u306e\u304c\u7c21\u5358\u3067\u3042\u308d\u3046\uff0e NetCDF \u306e\u5229\u7528 \u00b6 \u672c\u30b3\u30fc\u30c9\u306e\u901f\u5ea6\u69cb\u9020\u5165\u529b\u306e\u4e00\u90e8\u306b\u306f NetCDF \u5f62\u5f0f\u3092\u63a1\u7528\u3057\u3066\u304a\u308a\uff0c\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u30e2\u30b8\u30e5\u30fc\u30eb\u60c5\u5831\u30d5\u30a1\u30a4\u30eb\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e \u5177\u4f53\u7684\u306b\u306f\uff0c libnetcdf.* : NetCDF \u30e9\u30a4\u30d6\u30e9\u30ea\u30d5\u30a1\u30a4\u30eb libnetcdff.* : NetCDF Fortran\u7528\u30e9\u30a4\u30d6\u30e9\u30ea\u30d5\u30a1\u30a4\u30eb\uff08 NetCDF ver.4\u4ee5\u964d\uff09 netcdf.mod : Fortran\u30e2\u30b8\u30e5\u30fc\u30eb\u60c5\u5831\u30d5\u30a1\u30a4\u30eb \u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5fc5\u8981\u3068\u306a\u308b\uff0e \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u62e1\u5f35\u5b50\u306f *.a \uff08static\uff09\u306e\u5834\u5408\u3068 *.so \uff08dynamic\uff09\u306e\u5834\u5408\u304c\u3042\u308b\uff0e \u307e\u305f\uff0cFortran90\u306e\u4ed5\u69d8\u306b\u3088\u308a\uff0c NetCDF.mod \u306f\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u540c\u3058\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u308a\u4f5c\u6210\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff0e \u7279\u306bLinux\u74b0\u5883\u7b49\u306b\u304a\u3044\u3066\uff0c yum, apt, brew \u7b49\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u308a\u5c0e\u5165\u3057\u305f NetCDF \u3067\u306f\uff0c gfortran \u4ee5\u5916\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u7528\u3044\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\uff0e\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306f\uff0c\u5225\u306e\u5834\u6240\u306b\u7528\u306e NetCDF \u3092\u81ea\u529b\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e \u57cb\u3081\u8fbc\u307f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8abf\u6574 \u00b6 OpenSWPC \u306e\u6319\u52d5\u306f\u539f\u5247\u3068\u3057\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u3067\u5236\u5fa1\u3055\u308c\u308b\u304c\uff0c\u8a08\u7b97\u901f\u5ea6\u306e\u5411\u4e0a\u306e\u305f\u3081\uff0c\u5e7e\u3064\u304b\u306e\u5909\u66f4\u983b\u5ea6\u306e\u4f4e\u3044\u3068\u671f\u5f85\u3055\u308c\u308b\u30d1\u30e9\u30e1\u30bf\u304c\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\uff0e\u3053\u308c\u3089\u306f\u3044\u305a\u308c\u3082 m_global.F90 \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\uff0e\u4ee5\u4e0b\u306e\u5024\u3092\u4fee\u6b63\u3057\u305f\u5834\u5408\u306b\u306f\uff0c\u30b3\u30fc\u30c9\u5168\u4f53\u306e\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\uff08 make clean; make \uff09\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e Parameters UC \u8a08\u7b97\u306b\u7528\u3044\u308b\u6df7\u5408\u5ea7\u6a19\u7cfb\uff08\u8ddd\u96e2km, \u5bc6\u5ea6g/cm ^3 , \u5730\u9707\u6ce2\u901f\u5ea6km/s\u306a\u3069\u306e\u6163\u7528\u5358\u4f4d\uff09\u3067\u306e\u7d50\u679c\u3092SI\u5358\u4f4d\u306b\u63db\u7b97\u3059\u308b\u5b9a\u6570\uff0e \u8a08\u7b97\u306e\u5358\u4f4d\u7cfb\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306b\u306f\u8abf\u6574\u304c\u5fc5\u8981\u3068\u306a\u308b\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 1e-15 (3D) \u3082\u3057\u304f\u306f 1e-12 (2D) MP \u6df7\u5408\u7cbe\u5ea6\u5dee\u5206\u6cd5\u306e\u7cbe\u5ea6\uff0e DP \u306e\u5834\u5408\uff0c\u5fc5\u8981\u306a\u5909\u6570\u306b\u3064\u3044\u3066\u306f\u500d\u7cbe\u5ea6\u3067\uff0c\u305d\u308c\u4ee5\u5916\u306e\u5909\u6570\u3092\u5358\u7cbe\u5ea6\u3067\u305d\u308c\u305e\u308c\u8a08\u7b97\u3059\u308b\uff0e\u3053\u308c\u3092SP\u306b\u5909\u66f4\u3059\u308b\u3068\uff0c\u8a08\u7b97\u3059\u3079\u3066\u3092\u5358\u7cbe\u5ea6\u3067\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u306a\u308b\uff0e\u5358\u7cbe\u5ea6\u8a08\u7b97\u3067\u306f\u7279\u306b\u9707\u6e90\u5468\u8fba\u3067\u6841\u3042\u3075\u308c\u306b\u4f34\u3046\u4e0d\u5b89\u5b9a\u304c\u8d77\u3053\u308b\u5834\u5408\u304c\u3042\u308b\u304c\uff0c\u5fc5\u8981\u3068\u306a\u308b\u30e1\u30e2\u30ea\u91cf\u306f\u7d042/3\u306b\u5c0f\u3055\u304f\u306a\u308a\uff0c\u8a08\u7b97\u3082\u901f\u3044\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u500d\u7cbe\u5ea6\u3092\u610f\u5473\u3059\u308b\u30d1\u30e9\u30e1\u30bf DP \uff0e\u5177\u4f53\u7684\u306a\u5024\u306fFortran\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u81ea\u52d5\u7684\u306b\u6c7a\u5b9a\u3055\u308c\u308b\u304c\uff0c\u591a\u304f\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3067 8 \u3092\u53d6\u308b\uff0e NM \u30e1\u30e2\u30ea\u5909\u6570\u3092\u7528\u3044\u3066\u8a08\u7b97\u3059\u308b\u4e00\u822c\u5316Zener\u7c98\u5f3e\u6027\u4f53\u306e\u4e26\u5217\u6570\uff0e1\u3088\u308a\u5927\u304d\u306a\u5024\u306e\u5834\u5408\u306b\u306f\uff0c\u30d1\u30e9\u30e1\u30bf fq_* \u306b\u5fdc\u3058\u3066\u6307\u5b9a\u3055\u308c\u305f\u5468\u6ce2\u6570\u7bc4\u56f2\u306b\u304a\u3044\u3066\u5468\u6ce2\u6570\u4e00\u5b9a\u306e Q \u5024\u3092\u53d6\u308b\u3088\u3046\u306b\u6700\u9069\u5316\u3055\u308c\u308b\uff0e\u4e00\u65b9\uff0c0\u306e\u5834\u5408\u306b\u306f\u5b8c\u5168\u5f3e\u6027\u4f53\u306e\u554f\u984c\u3068\u306a\u308a\uff0c\u5185\u90e8\u6e1b\u8870\u306f\u8003\u616e\u3055\u308c\u306a\u3044\uff0e\u7279\u306b3\u6b21\u5143\u8a08\u7b97\u306b\u304a\u3044\u3066\u306f\uff0c\u8a08\u7b97\u306b\u5fc5\u8981\u306a\u6642\u9593\u3084\u30e1\u30e2\u30ea\u91cf\u304c\u3053\u306e\u30d1\u30e9\u30e1\u30bf\u306b\u3088\u3063\u3066\u5927\u304d\u304f\u5909\u52d5\u3059\u308b\uff0e","title":"\u30b3\u30f3\u30d1\u30a4\u30eb"},{"location":"ja/1._SetUp/0103_compile/#_1","text":"","title":"\u30b3\u30f3\u30d1\u30a4\u30eb"},{"location":"ja/1._SetUp/0103_compile/#make","text":"src/swpc_3d , src/swpc_psv , src/swpc_sh , src/tools \u306e\u4e0b\u306b makefile \u304c\u3042\u308b\uff0e src/shared \u306b\u306f\u5404\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u5171\u901a\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u30b3\u30fc\u30c9\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\uff0e \u5404\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff08 src/swpc_* \uff09\u306b\u304a\u3044\u3066 make \u3059\u308b\u3053\u3068\u3067 bin \u4ee5\u4e0b\u306b\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u304c\u751f\u6210\u3055\u308c\u308b\uff0e","title":"make"},{"location":"ja/1._SetUp/0103_compile/#makefile","text":"makefile\u3067\u306f\u4ee5\u4e0b\u306e\u5909\u6570\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e \u5909\u6570 \u8aac\u660e FC \u30b3\u30f3\u30d1\u30a4\u30e9 FFLAGS \u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3 NCFLAG NetCDF \u5229\u7528\u30b9\u30a4\u30c3\u30c1 NCLIB NetCDF \u30e9\u30a4\u30d6\u30e9\u30ea\u683c\u7d0d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea NCINC NetCDF include\u30c7\u30a3\u30ec\u30af\u30c8\u30ea NETCDF NetCDF \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30ea\u30f3\u30af NCFLAG = -D_NETCDF \u304c\u6307\u5b9a\u3055\u308c\u308b\u3053\u3068\u306b\u3088\u308a\uff0c NetCDF \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5229\u7528\u3057\u305f\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u884c\u308f\u308c\u308b\uff0e \u3055\u307e\u3056\u307e\u306a\u8a08\u7b97\u6a5f\u74b0\u5883\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u305f\u3081\uff0c\u4ee5\u4e0b\u306e arch \u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u308a\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5206\u5c90\u3055\u305b\u3066\u3044\u308b: arch\u30aa\u30d7\u30b7\u30e7\u30f3\u540d \u5bfe\u8c61 NetCDF\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5834\u6240 mac-intel Mac OSX + Intel Compiler + OpenMPI ${HOME}/local mac-gfortran Mac OSX + gfortran + Open MPI /usr/local eic EIC2015\u74b0\u5883\u4e0b\u306eIntel Compiler ${HOME}/local fx (obsolete) \u5bcc\u58eb\u901aFX10, FX100 \u304a\u3088\u3073\u4eac\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf ${HOME}/xlocal es3 (obsolete) \u5730\u7403\u30b7\u30df\u30e5\u30ec\u30fc\u30bf \u30b7\u30b9\u30c6\u30e0\u63d0\u4f9b ubuntu-gfortran Ubuntu 16.04LTS + gfortran + Open MPI apt \u306b\u3088\u308b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb ofp (or oak) (obsolete) \u6771\u4eac\u5927\u5b66\u60c5\u5831\u57fa\u76e4\u30bb\u30f3\u30bf\u30fc Oakforest-PACS module \u30b3\u30de\u30f3\u30c9\u3092\u901a\u3058\u3066\u81ea\u52d5\u6307\u5b9a obcx (obsolete) \u6771\u4eac\u5927\u5b66\u60c5\u5831\u57fa\u76e4\u30bb\u30f3\u30bf\u30fc Oakbridge-CX module \u30b3\u30de\u30f3\u30c9\u3092\u901a\u3058\u3066\u81ea\u52d5\u6307\u5b9a bdec-o \u6771\u4eac\u5927\u5b66\u60c5\u5831\u57fa\u76e4\u30bb\u30f3\u30bf\u30fc Wisteria-Odyssey/BDEC01 module \u30b3\u30de\u30f3\u30c9\u3092\u901a\u3058\u3066\u81ea\u52d5\u6307\u5b9a \u305f\u3068\u3048\u3070 mac-gfortran \u306b\u76f8\u5f53\u3059\u308b\u74b0\u5883\u3067\u306f\uff0c 1 make arch = mac-gfortran \u3068\u3059\u308b\u3053\u3068\u3067\uff0c\u305d\u306e\u74b0\u5883\u306b\u9069\u3057\u305f\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u81ea\u52d5\u7684\u306b\u9078\u629e\u3055\u308c\u308b\uff0e\u307e\u305f\uff0c\u5e7e\u3064\u304b\u306e\u74b0\u5883\u3067\u306f\uff0c 1 make arch = eic debug = true \u306e\u3088\u3046\u306b debug=true \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u308b\u3068\uff0c\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3 FFLAGS \u304c\u30c7\u30d0\u30c3\u30b0\u306b\u9069\u3057\u305f\u3082\u306e\u306b\u5909\u66f4\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\uff0e\u3053\u308c\u3089\u306e\u5909\u6570\u306f src/shared/makefile.arch \u3068 src/shared/makefile-tools.arch \u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\uff0e\u65b0\u305f\u306a\u74b0\u5883\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\uff0c\u3053\u308c\u3089\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u8a18\u3059\u308b\u306e\u304c\u7c21\u5358\u3067\u3042\u308d\u3046\uff0e","title":"makefile\u306e\u6307\u5b9a\u5909\u6570"},{"location":"ja/1._SetUp/0103_compile/#netcdf","text":"\u672c\u30b3\u30fc\u30c9\u306e\u901f\u5ea6\u69cb\u9020\u5165\u529b\u306e\u4e00\u90e8\u306b\u306f NetCDF \u5f62\u5f0f\u3092\u63a1\u7528\u3057\u3066\u304a\u308a\uff0c\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u30e2\u30b8\u30e5\u30fc\u30eb\u60c5\u5831\u30d5\u30a1\u30a4\u30eb\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e \u5177\u4f53\u7684\u306b\u306f\uff0c libnetcdf.* : NetCDF \u30e9\u30a4\u30d6\u30e9\u30ea\u30d5\u30a1\u30a4\u30eb libnetcdff.* : NetCDF Fortran\u7528\u30e9\u30a4\u30d6\u30e9\u30ea\u30d5\u30a1\u30a4\u30eb\uff08 NetCDF ver.4\u4ee5\u964d\uff09 netcdf.mod : Fortran\u30e2\u30b8\u30e5\u30fc\u30eb\u60c5\u5831\u30d5\u30a1\u30a4\u30eb \u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5fc5\u8981\u3068\u306a\u308b\uff0e \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u62e1\u5f35\u5b50\u306f *.a \uff08static\uff09\u306e\u5834\u5408\u3068 *.so \uff08dynamic\uff09\u306e\u5834\u5408\u304c\u3042\u308b\uff0e \u307e\u305f\uff0cFortran90\u306e\u4ed5\u69d8\u306b\u3088\u308a\uff0c NetCDF.mod \u306f\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u540c\u3058\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u308a\u4f5c\u6210\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff0e \u7279\u306bLinux\u74b0\u5883\u7b49\u306b\u304a\u3044\u3066\uff0c yum, apt, brew \u7b49\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u308a\u5c0e\u5165\u3057\u305f NetCDF \u3067\u306f\uff0c gfortran \u4ee5\u5916\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u7528\u3044\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\uff0e\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306f\uff0c\u5225\u306e\u5834\u6240\u306b\u7528\u306e NetCDF \u3092\u81ea\u529b\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e","title":"NetCDF\u306e\u5229\u7528"},{"location":"ja/1._SetUp/0103_compile/#_2","text":"OpenSWPC \u306e\u6319\u52d5\u306f\u539f\u5247\u3068\u3057\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u3067\u5236\u5fa1\u3055\u308c\u308b\u304c\uff0c\u8a08\u7b97\u901f\u5ea6\u306e\u5411\u4e0a\u306e\u305f\u3081\uff0c\u5e7e\u3064\u304b\u306e\u5909\u66f4\u983b\u5ea6\u306e\u4f4e\u3044\u3068\u671f\u5f85\u3055\u308c\u308b\u30d1\u30e9\u30e1\u30bf\u304c\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\uff0e\u3053\u308c\u3089\u306f\u3044\u305a\u308c\u3082 m_global.F90 \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\uff0e\u4ee5\u4e0b\u306e\u5024\u3092\u4fee\u6b63\u3057\u305f\u5834\u5408\u306b\u306f\uff0c\u30b3\u30fc\u30c9\u5168\u4f53\u306e\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\uff08 make clean; make \uff09\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e Parameters UC \u8a08\u7b97\u306b\u7528\u3044\u308b\u6df7\u5408\u5ea7\u6a19\u7cfb\uff08\u8ddd\u96e2km, \u5bc6\u5ea6g/cm ^3 , \u5730\u9707\u6ce2\u901f\u5ea6km/s\u306a\u3069\u306e\u6163\u7528\u5358\u4f4d\uff09\u3067\u306e\u7d50\u679c\u3092SI\u5358\u4f4d\u306b\u63db\u7b97\u3059\u308b\u5b9a\u6570\uff0e \u8a08\u7b97\u306e\u5358\u4f4d\u7cfb\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306b\u306f\u8abf\u6574\u304c\u5fc5\u8981\u3068\u306a\u308b\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 1e-15 (3D) \u3082\u3057\u304f\u306f 1e-12 (2D) MP \u6df7\u5408\u7cbe\u5ea6\u5dee\u5206\u6cd5\u306e\u7cbe\u5ea6\uff0e DP \u306e\u5834\u5408\uff0c\u5fc5\u8981\u306a\u5909\u6570\u306b\u3064\u3044\u3066\u306f\u500d\u7cbe\u5ea6\u3067\uff0c\u305d\u308c\u4ee5\u5916\u306e\u5909\u6570\u3092\u5358\u7cbe\u5ea6\u3067\u305d\u308c\u305e\u308c\u8a08\u7b97\u3059\u308b\uff0e\u3053\u308c\u3092SP\u306b\u5909\u66f4\u3059\u308b\u3068\uff0c\u8a08\u7b97\u3059\u3079\u3066\u3092\u5358\u7cbe\u5ea6\u3067\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u306a\u308b\uff0e\u5358\u7cbe\u5ea6\u8a08\u7b97\u3067\u306f\u7279\u306b\u9707\u6e90\u5468\u8fba\u3067\u6841\u3042\u3075\u308c\u306b\u4f34\u3046\u4e0d\u5b89\u5b9a\u304c\u8d77\u3053\u308b\u5834\u5408\u304c\u3042\u308b\u304c\uff0c\u5fc5\u8981\u3068\u306a\u308b\u30e1\u30e2\u30ea\u91cf\u306f\u7d042/3\u306b\u5c0f\u3055\u304f\u306a\u308a\uff0c\u8a08\u7b97\u3082\u901f\u3044\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u500d\u7cbe\u5ea6\u3092\u610f\u5473\u3059\u308b\u30d1\u30e9\u30e1\u30bf DP \uff0e\u5177\u4f53\u7684\u306a\u5024\u306fFortran\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u81ea\u52d5\u7684\u306b\u6c7a\u5b9a\u3055\u308c\u308b\u304c\uff0c\u591a\u304f\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3067 8 \u3092\u53d6\u308b\uff0e NM \u30e1\u30e2\u30ea\u5909\u6570\u3092\u7528\u3044\u3066\u8a08\u7b97\u3059\u308b\u4e00\u822c\u5316Zener\u7c98\u5f3e\u6027\u4f53\u306e\u4e26\u5217\u6570\uff0e1\u3088\u308a\u5927\u304d\u306a\u5024\u306e\u5834\u5408\u306b\u306f\uff0c\u30d1\u30e9\u30e1\u30bf fq_* \u306b\u5fdc\u3058\u3066\u6307\u5b9a\u3055\u308c\u305f\u5468\u6ce2\u6570\u7bc4\u56f2\u306b\u304a\u3044\u3066\u5468\u6ce2\u6570\u4e00\u5b9a\u306e Q \u5024\u3092\u53d6\u308b\u3088\u3046\u306b\u6700\u9069\u5316\u3055\u308c\u308b\uff0e\u4e00\u65b9\uff0c0\u306e\u5834\u5408\u306b\u306f\u5b8c\u5168\u5f3e\u6027\u4f53\u306e\u554f\u984c\u3068\u306a\u308a\uff0c\u5185\u90e8\u6e1b\u8870\u306f\u8003\u616e\u3055\u308c\u306a\u3044\uff0e\u7279\u306b3\u6b21\u5143\u8a08\u7b97\u306b\u304a\u3044\u3066\u306f\uff0c\u8a08\u7b97\u306b\u5fc5\u8981\u306a\u6642\u9593\u3084\u30e1\u30e2\u30ea\u91cf\u304c\u3053\u306e\u30d1\u30e9\u30e1\u30bf\u306b\u3088\u3063\u3066\u5927\u304d\u304f\u5909\u52d5\u3059\u308b\uff0e","title":"\u57cb\u3081\u8fbc\u307f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8abf\u6574"},{"location":"ja/1._SetUp/0104_dataset/","text":"\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u6e96\u5099 \u00b6 \u5730\u4e0b\u69cb\u9020\u30e2\u30c7\u30eb \u00b6 \u5730\u8868\u6d77\u5e95\uff0c\u3042\u308b\u3044\u306f\u901f\u5ea6\u4e0d\u9023\u7d9a\u9762\u3092\u8868\u3059\u8907\u6570\u306e NetCDF \u30d5\u30a1\u30a4\u30eb\u306b\u3088\u3063\u30663\u6b21\u5143\u7684\u306a\u4e0d\u5747\u8cea\u69cb\u9020\u3092\u8868\u73fe\u3059\u308b\uff0e \u305d\u306e\u4e00\u4f8b\u3068\u3057\u3066\uff0c\u5730\u9707\u8abf\u67fb\u7814\u7a76\u63a8\u9032\u672c\u90e8\u3068(Koketsu et al., 2012)\u306b\u3088\u308b\u65e5\u672c\u306e\u5168\u56fd\uff11\u6b21\u5730\u4e0b\u69cb\u9020\u30e2\u30c7\u30eb\uff08Japan Integrated Velocity Structure Model; JIVSM\uff09\u304a\u3088\u3073\u305d\u308c\u3092\u3088\u308a\u5e83\u3044\u9818\u57df\u306b\u62e1\u5f35\u3057\u305fextended JIVSM (eJIVSM)\u30e2\u30c7\u30eb\uff08\u4e0b\u56f3\uff09\u306e\u751f\u6210\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u540c\u68b1\u3055\u308c\u3066\u3044\u308b\uff0e\u3053\u308c\u3089\u306e\u30e2\u30c7\u30eb\u306f\uff0c\u5730\u8868\u30fb\u6d77\u5e95\u5730\u5f62\u304b\u3089\uff0c\u65e5\u672c\u5217\u5cf6\u306b\u6c88\u307f\u8fbc\u3080\u30d7\u30ec\u30fc\u30c8\u306e\u6d77\u6d0b\u6027\u30e2\u30db\u9762\u307e\u3067\u3092\u542b\u3080\u30e2\u30c7\u30eb\u3067\u3042\u308b\uff0e\u3053\u306e\u30e2\u30c7\u30eb\u751f\u6210\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u52d5\u4f5c\u3055\u305b\u308b\u306b\u306fGMT\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\u3053\u308c\u3089\u306e\u30e2\u30c7\u30eb\u3092\u4f7f\u3046\u306e\u3067\u306a\u3051\u308c\u3070\uff0c\u672c\u7bc0\u306e\u4f5c\u696d\u306f\u5fc5\u8981\u306a\u3044\uff0e JIVSM/eJIVSM\u306e\u5b9a\u7fa9\u9818\u57df\u3068\u65ad\u9762\u56f3 JIVSM\u30e2\u30c7\u30eb\u3068eJIVSM\u30e2\u30c7\u30eb\uff0e\u4e2d\u592e\u5730\u56f3\u3067\u6a19\u9ad8\u5024\u306b\u3088\u308b\u8272\u304c\u5857\u3089\u308c\u305f\u90e8\u5206\u304cJIVSM\u3067\u69cb\u9020\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u9818\u57df\uff0c\u7070\u8272\u90e8\u5206\u304ceJIVSM\u30e2\u30c7\u30eb\u306b\u3088\u3063\u3066\u62e1\u5f35\u3055\u308c\u308b\u672a\u5b9a\u7fa9\u9818\u57df\u3067\u3042\u308b\uff0e\u5730\u56f3\u4e0a\u306e\u9752\u30fb\u8d64\u7dda\u306b\u6cbf\u3063\u305f\u69cb\u9020\u30e2\u30c7\u30eb\u4e0d\u9023\u7d9a\u9762\u306e\u6df1\u3055\u65ad\u9762\u3092\u4e0a\u4e0b\u5de6\u53f3\u306b\u305d\u308c\u305e\u308c\u793a\u3059\uff0e \u3053\u306e\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b\u306b\u306f\uff0c\u307e\u305a dataset/vmodel \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\uff0c\u4ee5\u4e0b\u306e\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b: 1 $ ./gen_JIVSM.sh \u6b63\u5e38\u306b\u52d5\u4f5c\u3059\u308b\u3068\uff0c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea JIVSM \u3068 eJIVSM \u4ee5\u4e0b\u306b\u305d\u308c\u305e\u308c23\u500b\u306e NetCDF \u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u308b\uff0e\u3053\u308c\u3089\u306fGMT\u306e grd \u30d5\u30a1\u30a4\u30eb\u3067\u3082\u3042\u308a\uff0cGMT\u306e grdimage , grdcontour \u7b49\u3067\u76f4\u63a5\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u306f\u9023\u756a\u306e\u307b\u304b5\u3064\u306e\u6570\u5b57\u304c\u57cb\u3081\u8fbc\u307e\u308c\u3066\u304a\u308a\uff0c\u305d\u308c\u305e\u308c\u5de6\u304b\u3089\u5bc6\u5ea6\uff08kg/m {}^3 \uff09, P\u6ce2\u901f\u5ea6\uff08m/s\uff09, S\u6ce2\u901f\u5ea6\uff08m/s\uff09,QP, QS\u306b\u5bfe\u5fdc\u3059\u308b\uff0e \u3053\u308c\u3089\u306e\u7269\u6027\u5024\u306f\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u898f\u5b9a\u3055\u308c\u308b\u4e0d\u9023\u7d9a\u9762\u306e\u4e0b\u306e\u69cb\u9020\u3092\u8868\u3057\u3066\u3044\u308b\uff0e \u307e\u305f\uff0c\u672c\u30b3\u30fc\u30c9\u306e\u5165\u529b\u306b\u7528\u3044\u308b\u69cb\u9020\u30e2\u30c7\u30eb\u30ea\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb jivsm.lst , ejivsm.lst \u304c\u4f5c\u6210\u3055\u308c\u308b\uff0e \u89b3\u6e2c\u70b9\u30ea\u30b9\u30c8 \u00b6 dataset/station \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u9632\u707d\u79d1\u5b66\u6280\u8853\u7814\u7a76\u6240Hi-net\u306b\u3088\u308a\u914d\u5e03\u3055\u308c\u3066\u3044\u308b\u89b3\u6e2c\u70b9\u4e00\u89a7\u304b\u3089OpenSWPC\u7528\u306e\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8 gen_stlst_hinet.sh \u304c\u3042\u308b\uff0e\u30b9\u30af\u30ea\u30d7\u30c8\u5b9f\u884c\u306e\u305f\u3081\u306b\u306f\uff0c\u89b3\u6e2c\u70b9\u4e00\u89a7\u3092\u3042\u3089\u304b\u3058\u3081\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\uff0c\u540c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u914d\u7f6e\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\uff0e \u89b3\u6e2c\u70b9\u30ea\u30b9\u30c8\u306f\u4e3b\u3068\u3057\u3066\u7def\u5ea6\u7d4c\u5ea6\u304b\u3089\u306a\u308b\u5358\u7d14\u306a\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b\uff08\u6b21\u7ae0\u53c2\u7167\uff09\u306e\u3067\uff0c\u5fc5\u305a\u3057\u3082\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u3088\u3063\u3066\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\uff0e \u57cb\u3081\u8fbc\u307f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8abf\u6574 \u00b6 OpenSWPC \u306e\u6319\u52d5\u306f\u539f\u5247\u3068\u3057\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u3067\u5236\u5fa1\u3055\u308c\u308b\u304c\uff0c\u8a08\u7b97\u901f\u5ea6\u306e\u5411\u4e0a\u306e\u305f\u3081\uff0c\u5e7e\u3064\u304b\u306e\u5909\u66f4\u983b\u5ea6\u306e\u4f4e\u3044\u3068\u671f\u5f85\u3055\u308c\u308b\u30d1\u30e9\u30e1\u30bf\u304c\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\uff0e\u3053\u308c\u3089\u306f\u3044\u305a\u308c\u3082 m_global.F90 \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\uff0e\u4ee5\u4e0b\u306e\u5024\u3092\u4fee\u6b63\u3057\u305f\u5834\u5408\u306b\u306f\uff0c\u30b3\u30fc\u30c9\u5168\u4f53\u306e\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\uff08 make clean; make \uff09\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e Parameters UC \u8a08\u7b97\u306b\u7528\u3044\u308b\u6df7\u5408\u5ea7\u6a19\u7cfb\uff08\u8ddd\u96e2km, \u5bc6\u5ea6g/cm ^3 , \u5730\u9707\u6ce2\u901f\u5ea6km/s\u306a\u3069\u306e\u6163\u7528\u5358\u4f4d\uff09\u3067\u306e\u7d50\u679c\u3092SI\u5358\u4f4d\u306b\u63db\u7b97\u3059\u308b\u5b9a\u6570\uff0e \u8a08\u7b97\u306e\u5358\u4f4d\u7cfb\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306b\u306f\u8abf\u6574\u304c\u5fc5\u8981\u3068\u306a\u308b\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 1e-15 (3D) \u3082\u3057\u304f\u306f 1e-12 (2D)\uff0e MP \u6df7\u5408\u7cbe\u5ea6\u5dee\u5206\u6cd5\u306e\u7cbe\u5ea6\uff0e DP \u306e\u5834\u5408\uff0c\u5fc5\u8981\u306a\u5909\u6570\u306b\u3064\u3044\u3066\u306f\u500d\u7cbe\u5ea6\u3067\uff0c\u305d\u308c\u4ee5\u5916\u306e\u5909\u6570\u3092\u5358\u7cbe\u5ea6\u3067\u305d\u308c\u305e\u308c\u8a08\u7b97\u3059\u308b\uff0e\u3053\u308c\u3092SP\u306b\u5909\u66f4\u3059\u308b\u3068\uff0c\u8a08\u7b97\u3059\u3079\u3066\u3092\u5358\u7cbe\u5ea6\u3067\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u306a\u308b\uff0e\u5358\u7cbe\u5ea6\u8a08\u7b97\u3067\u306f\u7279\u306b\u9707\u6e90\u5468\u8fba\u3067\u6841\u3042\u3075\u308c\u306b\u4f34\u3046\u4e0d\u5b89\u5b9a\u304c\u8d77\u3053\u308b\u5834\u5408\u304c\u3042\u308b\u304c\uff0c\u5fc5\u8981\u3068\u306a\u308b\u30e1\u30e2\u30ea\u91cf\u306f\u7d042/3\u306b\u5c0f\u3055\u304f\u306a\u308a\uff0c\u8a08\u7b97\u3082\u901f\u3044\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u500d\u7cbe\u5ea6\u3092\u610f\u5473\u3059\u308b\u30d1\u30e9\u30e1\u30bf DP \uff0e\u5177\u4f53\u7684\u306a\u5024\u306fFortran\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u81ea\u52d5\u7684\u306b\u6c7a\u5b9a\u3055\u308c\u308b\u304c\uff0c\u591a\u304f\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3067 8 \u3092\u53d6\u308b\uff0e NM \u30e1\u30e2\u30ea\u5909\u6570\u3092\u7528\u3044\u3066\u8a08\u7b97\u3059\u308b\u4e00\u822c\u5316Zener\u7c98\u5f3e\u6027\u4f53\u306e\u4e26\u5217\u6570\uff0e1\u3088\u308a\u5927\u304d\u306a\u5024\u306e\u5834\u5408\u306b\u306f\uff0c\u30d1\u30e9\u30e1\u30bf fq_* \u306b\u5fdc\u3058\u3066\u6307\u5b9a\u3055\u308c\u305f\u5468\u6ce2\u6570\u7bc4\u56f2\u306b\u304a\u3044\u3066\u5468\u6ce2\u6570\u4e00\u5b9a\u306e Q \u5024\u3092\u53d6\u308b\u3088\u3046\u306b\u6700\u9069\u5316\u3055\u308c\u308b\uff0e\u4e00\u65b9\uff0c0\u306e\u5834\u5408\u306b\u306f\u5b8c\u5168\u5f3e\u6027\u4f53\u306e\u554f\u984c\u3068\u306a\u308a\uff0c\u5185\u90e8\u6e1b\u8870\u306f\u8003\u616e\u3055\u308c\u306a\u3044\uff0e\u7279\u306b3\u6b21\u5143\u8a08\u7b97\u306b\u304a\u3044\u3066\u306f\uff0c\u8a08\u7b97\u306b\u5fc5\u8981\u306a\u6642\u9593\u3084\u30e1\u30e2\u30ea\u91cf\u304c\u3053\u306e\u30d1\u30e9\u30e1\u30bf\u306b\u3088\u3063\u3066\u5927\u304d\u304f\u5909\u52d5\u3059\u308b\uff0e","title":"\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u6e96\u5099"},{"location":"ja/1._SetUp/0104_dataset/#_1","text":"","title":"\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u6e96\u5099"},{"location":"ja/1._SetUp/0104_dataset/#_2","text":"\u5730\u8868\u6d77\u5e95\uff0c\u3042\u308b\u3044\u306f\u901f\u5ea6\u4e0d\u9023\u7d9a\u9762\u3092\u8868\u3059\u8907\u6570\u306e NetCDF \u30d5\u30a1\u30a4\u30eb\u306b\u3088\u3063\u30663\u6b21\u5143\u7684\u306a\u4e0d\u5747\u8cea\u69cb\u9020\u3092\u8868\u73fe\u3059\u308b\uff0e \u305d\u306e\u4e00\u4f8b\u3068\u3057\u3066\uff0c\u5730\u9707\u8abf\u67fb\u7814\u7a76\u63a8\u9032\u672c\u90e8\u3068(Koketsu et al., 2012)\u306b\u3088\u308b\u65e5\u672c\u306e\u5168\u56fd\uff11\u6b21\u5730\u4e0b\u69cb\u9020\u30e2\u30c7\u30eb\uff08Japan Integrated Velocity Structure Model; JIVSM\uff09\u304a\u3088\u3073\u305d\u308c\u3092\u3088\u308a\u5e83\u3044\u9818\u57df\u306b\u62e1\u5f35\u3057\u305fextended JIVSM (eJIVSM)\u30e2\u30c7\u30eb\uff08\u4e0b\u56f3\uff09\u306e\u751f\u6210\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u540c\u68b1\u3055\u308c\u3066\u3044\u308b\uff0e\u3053\u308c\u3089\u306e\u30e2\u30c7\u30eb\u306f\uff0c\u5730\u8868\u30fb\u6d77\u5e95\u5730\u5f62\u304b\u3089\uff0c\u65e5\u672c\u5217\u5cf6\u306b\u6c88\u307f\u8fbc\u3080\u30d7\u30ec\u30fc\u30c8\u306e\u6d77\u6d0b\u6027\u30e2\u30db\u9762\u307e\u3067\u3092\u542b\u3080\u30e2\u30c7\u30eb\u3067\u3042\u308b\uff0e\u3053\u306e\u30e2\u30c7\u30eb\u751f\u6210\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u52d5\u4f5c\u3055\u305b\u308b\u306b\u306fGMT\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\u3053\u308c\u3089\u306e\u30e2\u30c7\u30eb\u3092\u4f7f\u3046\u306e\u3067\u306a\u3051\u308c\u3070\uff0c\u672c\u7bc0\u306e\u4f5c\u696d\u306f\u5fc5\u8981\u306a\u3044\uff0e JIVSM/eJIVSM\u306e\u5b9a\u7fa9\u9818\u57df\u3068\u65ad\u9762\u56f3 JIVSM\u30e2\u30c7\u30eb\u3068eJIVSM\u30e2\u30c7\u30eb\uff0e\u4e2d\u592e\u5730\u56f3\u3067\u6a19\u9ad8\u5024\u306b\u3088\u308b\u8272\u304c\u5857\u3089\u308c\u305f\u90e8\u5206\u304cJIVSM\u3067\u69cb\u9020\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u9818\u57df\uff0c\u7070\u8272\u90e8\u5206\u304ceJIVSM\u30e2\u30c7\u30eb\u306b\u3088\u3063\u3066\u62e1\u5f35\u3055\u308c\u308b\u672a\u5b9a\u7fa9\u9818\u57df\u3067\u3042\u308b\uff0e\u5730\u56f3\u4e0a\u306e\u9752\u30fb\u8d64\u7dda\u306b\u6cbf\u3063\u305f\u69cb\u9020\u30e2\u30c7\u30eb\u4e0d\u9023\u7d9a\u9762\u306e\u6df1\u3055\u65ad\u9762\u3092\u4e0a\u4e0b\u5de6\u53f3\u306b\u305d\u308c\u305e\u308c\u793a\u3059\uff0e \u3053\u306e\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b\u306b\u306f\uff0c\u307e\u305a dataset/vmodel \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\uff0c\u4ee5\u4e0b\u306e\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b: 1 $ ./gen_JIVSM.sh \u6b63\u5e38\u306b\u52d5\u4f5c\u3059\u308b\u3068\uff0c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea JIVSM \u3068 eJIVSM \u4ee5\u4e0b\u306b\u305d\u308c\u305e\u308c23\u500b\u306e NetCDF \u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u308b\uff0e\u3053\u308c\u3089\u306fGMT\u306e grd \u30d5\u30a1\u30a4\u30eb\u3067\u3082\u3042\u308a\uff0cGMT\u306e grdimage , grdcontour \u7b49\u3067\u76f4\u63a5\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u306f\u9023\u756a\u306e\u307b\u304b5\u3064\u306e\u6570\u5b57\u304c\u57cb\u3081\u8fbc\u307e\u308c\u3066\u304a\u308a\uff0c\u305d\u308c\u305e\u308c\u5de6\u304b\u3089\u5bc6\u5ea6\uff08kg/m {}^3 \uff09, P\u6ce2\u901f\u5ea6\uff08m/s\uff09, S\u6ce2\u901f\u5ea6\uff08m/s\uff09,QP, QS\u306b\u5bfe\u5fdc\u3059\u308b\uff0e \u3053\u308c\u3089\u306e\u7269\u6027\u5024\u306f\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u898f\u5b9a\u3055\u308c\u308b\u4e0d\u9023\u7d9a\u9762\u306e\u4e0b\u306e\u69cb\u9020\u3092\u8868\u3057\u3066\u3044\u308b\uff0e \u307e\u305f\uff0c\u672c\u30b3\u30fc\u30c9\u306e\u5165\u529b\u306b\u7528\u3044\u308b\u69cb\u9020\u30e2\u30c7\u30eb\u30ea\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb jivsm.lst , ejivsm.lst \u304c\u4f5c\u6210\u3055\u308c\u308b\uff0e","title":"\u5730\u4e0b\u69cb\u9020\u30e2\u30c7\u30eb"},{"location":"ja/1._SetUp/0104_dataset/#_3","text":"dataset/station \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u9632\u707d\u79d1\u5b66\u6280\u8853\u7814\u7a76\u6240Hi-net\u306b\u3088\u308a\u914d\u5e03\u3055\u308c\u3066\u3044\u308b\u89b3\u6e2c\u70b9\u4e00\u89a7\u304b\u3089OpenSWPC\u7528\u306e\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8 gen_stlst_hinet.sh \u304c\u3042\u308b\uff0e\u30b9\u30af\u30ea\u30d7\u30c8\u5b9f\u884c\u306e\u305f\u3081\u306b\u306f\uff0c\u89b3\u6e2c\u70b9\u4e00\u89a7\u3092\u3042\u3089\u304b\u3058\u3081\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\uff0c\u540c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u914d\u7f6e\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\uff0e \u89b3\u6e2c\u70b9\u30ea\u30b9\u30c8\u306f\u4e3b\u3068\u3057\u3066\u7def\u5ea6\u7d4c\u5ea6\u304b\u3089\u306a\u308b\u5358\u7d14\u306a\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b\uff08\u6b21\u7ae0\u53c2\u7167\uff09\u306e\u3067\uff0c\u5fc5\u305a\u3057\u3082\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u3088\u3063\u3066\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\uff0e","title":"\u89b3\u6e2c\u70b9\u30ea\u30b9\u30c8"},{"location":"ja/1._SetUp/0104_dataset/#_4","text":"OpenSWPC \u306e\u6319\u52d5\u306f\u539f\u5247\u3068\u3057\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u3067\u5236\u5fa1\u3055\u308c\u308b\u304c\uff0c\u8a08\u7b97\u901f\u5ea6\u306e\u5411\u4e0a\u306e\u305f\u3081\uff0c\u5e7e\u3064\u304b\u306e\u5909\u66f4\u983b\u5ea6\u306e\u4f4e\u3044\u3068\u671f\u5f85\u3055\u308c\u308b\u30d1\u30e9\u30e1\u30bf\u304c\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\uff0e\u3053\u308c\u3089\u306f\u3044\u305a\u308c\u3082 m_global.F90 \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\uff0e\u4ee5\u4e0b\u306e\u5024\u3092\u4fee\u6b63\u3057\u305f\u5834\u5408\u306b\u306f\uff0c\u30b3\u30fc\u30c9\u5168\u4f53\u306e\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\uff08 make clean; make \uff09\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e Parameters UC \u8a08\u7b97\u306b\u7528\u3044\u308b\u6df7\u5408\u5ea7\u6a19\u7cfb\uff08\u8ddd\u96e2km, \u5bc6\u5ea6g/cm ^3 , \u5730\u9707\u6ce2\u901f\u5ea6km/s\u306a\u3069\u306e\u6163\u7528\u5358\u4f4d\uff09\u3067\u306e\u7d50\u679c\u3092SI\u5358\u4f4d\u306b\u63db\u7b97\u3059\u308b\u5b9a\u6570\uff0e \u8a08\u7b97\u306e\u5358\u4f4d\u7cfb\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306b\u306f\u8abf\u6574\u304c\u5fc5\u8981\u3068\u306a\u308b\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 1e-15 (3D) \u3082\u3057\u304f\u306f 1e-12 (2D)\uff0e MP \u6df7\u5408\u7cbe\u5ea6\u5dee\u5206\u6cd5\u306e\u7cbe\u5ea6\uff0e DP \u306e\u5834\u5408\uff0c\u5fc5\u8981\u306a\u5909\u6570\u306b\u3064\u3044\u3066\u306f\u500d\u7cbe\u5ea6\u3067\uff0c\u305d\u308c\u4ee5\u5916\u306e\u5909\u6570\u3092\u5358\u7cbe\u5ea6\u3067\u305d\u308c\u305e\u308c\u8a08\u7b97\u3059\u308b\uff0e\u3053\u308c\u3092SP\u306b\u5909\u66f4\u3059\u308b\u3068\uff0c\u8a08\u7b97\u3059\u3079\u3066\u3092\u5358\u7cbe\u5ea6\u3067\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u306a\u308b\uff0e\u5358\u7cbe\u5ea6\u8a08\u7b97\u3067\u306f\u7279\u306b\u9707\u6e90\u5468\u8fba\u3067\u6841\u3042\u3075\u308c\u306b\u4f34\u3046\u4e0d\u5b89\u5b9a\u304c\u8d77\u3053\u308b\u5834\u5408\u304c\u3042\u308b\u304c\uff0c\u5fc5\u8981\u3068\u306a\u308b\u30e1\u30e2\u30ea\u91cf\u306f\u7d042/3\u306b\u5c0f\u3055\u304f\u306a\u308a\uff0c\u8a08\u7b97\u3082\u901f\u3044\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u500d\u7cbe\u5ea6\u3092\u610f\u5473\u3059\u308b\u30d1\u30e9\u30e1\u30bf DP \uff0e\u5177\u4f53\u7684\u306a\u5024\u306fFortran\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u81ea\u52d5\u7684\u306b\u6c7a\u5b9a\u3055\u308c\u308b\u304c\uff0c\u591a\u304f\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3067 8 \u3092\u53d6\u308b\uff0e NM \u30e1\u30e2\u30ea\u5909\u6570\u3092\u7528\u3044\u3066\u8a08\u7b97\u3059\u308b\u4e00\u822c\u5316Zener\u7c98\u5f3e\u6027\u4f53\u306e\u4e26\u5217\u6570\uff0e1\u3088\u308a\u5927\u304d\u306a\u5024\u306e\u5834\u5408\u306b\u306f\uff0c\u30d1\u30e9\u30e1\u30bf fq_* \u306b\u5fdc\u3058\u3066\u6307\u5b9a\u3055\u308c\u305f\u5468\u6ce2\u6570\u7bc4\u56f2\u306b\u304a\u3044\u3066\u5468\u6ce2\u6570\u4e00\u5b9a\u306e Q \u5024\u3092\u53d6\u308b\u3088\u3046\u306b\u6700\u9069\u5316\u3055\u308c\u308b\uff0e\u4e00\u65b9\uff0c0\u306e\u5834\u5408\u306b\u306f\u5b8c\u5168\u5f3e\u6027\u4f53\u306e\u554f\u984c\u3068\u306a\u308a\uff0c\u5185\u90e8\u6e1b\u8870\u306f\u8003\u616e\u3055\u308c\u306a\u3044\uff0e\u7279\u306b3\u6b21\u5143\u8a08\u7b97\u306b\u304a\u3044\u3066\u306f\uff0c\u8a08\u7b97\u306b\u5fc5\u8981\u306a\u6642\u9593\u3084\u30e1\u30e2\u30ea\u91cf\u304c\u3053\u306e\u30d1\u30e9\u30e1\u30bf\u306b\u3088\u3063\u3066\u5927\u304d\u304f\u5909\u52d5\u3059\u308b\uff0e","title":"\u57cb\u3081\u8fbc\u307f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8abf\u6574"},{"location":"ja/1._SetUp/0105_parallel/","text":"\u5b9f\u884c\u4f8b \u00b6 \u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\u306b\u306f\uff0cMPI\u5b9f\u884c\u74b0\u5883\u3092\u7528\u3044\u3066\uff0c 1 $ mpirun -np ${ NP } ./bin/swpc_3d.x -i ${ input } \u306e\u3088\u3046\u306b\u3059\u308b\uff0e\u3053\u3053\u3067 ${NP} \u306f\u5b9f\u884c\u30d7\u30ed\u30bb\u30b9\u6570\uff0c ${input} \u306f\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u3042\u308b\uff0e\u305f\u3060\u3057\uff0c\u5b9f\u884c\u74b0\u5883\u306b\u3088\u3063\u3066\u306f\uff0c mpirun \u30b3\u30de\u30f3\u30c9\u540d\u3084\u305d\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4e0e\u3048\u65b9\u304c\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308b\uff0e ./example/input.inf \u306b2x2=4\u4e26\u5217\u306e\u5747\u8cea\u5a92\u8cea\u4e2d\u306e3\u6b21\u5143\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u4f8b\u304c\u3042\u308b\uff0e\u3053\u308c\u3092\u305d\u306e\u307e\u307e\u5b9f\u884c\u3059\u308b\u306b\u306f\uff0c 1 $ mpirun -np 4 ./bin/swpc_3d.x -i example/input.inf \u3068\u3059\u308b\uff0e \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u6b63\u5e38\u306b\u5b9f\u884c\u3055\u308c\u308b\u3068\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u753b\u9762\u51fa\u529b\u304c\u73fe\u308c\u308b\uff0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 ------------------------------------------------------------------------------ SWPC_3D ------------------------------------------------------------------------------ Grid Size : 384 x 384 x 384 MPI Partitioning : 2 x 2 Total Memory Size : 13.292 [GiB] Node Memory Size : 3.323 [GiB] Stability Condition c : 0.645 (c<1) Wavelength Condition r : 12.488 (r>5-10) Minimum velocity : 3.122 [km/s] Maximum velocity : 7.977 [km/s] Maximum frequency : 0.500 [Hz] ------------------------------------------------------------------------------ it=0000050, 1.024 s/loop, eta 000:16:12, ( 2.94E-05 2.94E-05 1.59E-04 ) it=0000100, 1.028 s/loop, eta 000:15:25, ( 1.95E-04 1.95E-04 8.87E-04 ) it=0000150, 1.023 s/loop, eta 000:14:29, ( 1.04E-04 1.04E-04 4.87E-04 ) it=0000200, 1.014 s/loop, eta 000:13:31, ( 2.62E-05 2.62E-05 4.89E-05 ) it=0000250, 1.010 s/loop, eta 000:12:37, ( 1.32E-05 1.32E-05 3.59E-05 ) it=0000300, 1.001 s/loop, eta 000:11:40, ( 1.13E-05 1.13E-05 3.16E-05 ) it=0000350, 0.996 s/loop, eta 000:10:47, ( 1.26E-05 1.26E-05 2.67E-05 ) it=0000400, 0.992 s/loop, eta 000:09:55, ( 1.13E-05 1.13E-05 2.33E-05 ) it=0000450, 0.991 s/loop, eta 000:09:05, ( 9.68E-06 9.68E-06 2.07E-05 ) it=0000500, 0.987 s/loop, eta 000:08:13, ( 9.22E-06 9.22E-06 1.98E-05 ) it=0000550, 0.984 s/loop, eta 000:07:22, ( 8.90E-06 8.90E-06 1.90E-05 ) it=0000600, 0.981 s/loop, eta 000:06:32, ( 8.37E-06 8.37E-06 1.78E-05 ) it=0000650, 0.978 s/loop, eta 000:05:42, ( 7.78E-06 7.78E-06 1.68E-05 ) it=0000700, 0.975 s/loop, eta 000:04:52, ( 7.63E-06 7.63E-06 1.59E-05 ) it=0000750, 0.973 s/loop, eta 000:04:03, ( 7.47E-06 7.47E-06 1.53E-05 ) it=0000800, 0.972 s/loop, eta 000:03:14, ( 7.01E-06 7.01E-06 1.45E-05 ) it=0000850, 0.974 s/loop, eta 000:02:26, ( 6.79E-06 6.79E-06 1.35E-05 ) it=0000900, 0.974 s/loop, eta 000:01:37, ( 7.07E-06 7.07E-06 1.28E-05 ) it=0000950, 0.973 s/loop, eta 000:00:48, ( 7.38E-06 7.38E-06 1.20E-05 ) it=0001000, 0.973 s/loop, eta 000:00:00, ( 7.22E-06 7.22E-06 1.14E-05 ) ------------------------------------------------------------------------------ Total time : 972.827 s ------------------------------------------------------------------------------``` \uff08\u3053\u306e\u7d50\u679c\u306f example/example.out \u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\uff09 \u5b9f\u884c\u958b\u59cb\u6642\u306b\u306f\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u3084\u5b89\u5b9a\u6761\u4ef6\uff08CFL\u6761\u4ef6\u304b\u3089\u53d6\u308a\u3046\u308b\u6700\u5927\u306e\u6642\u9593\u523b\u307f\u3068\u5229\u7528\u3057\u305f\u6642\u9593\u523b\u307f\u3068\u306e\u6bd4\uff09\u3084\u6ce2\u9577\u6761\u4ef6\uff08\u6700\u5c0f\u6ce2\u9577\u3068\u7a7a\u9593\u523b\u307f\u3068\u306e\u6bd4\uff09\u306a\u3069\u3092\u8868\u793a\u3059\u308b\uff0e \u5b89\u5b9a\u6761\u4ef6\u306f c<1 \u3067\u3042\u308b\u3053\u3068\u304c\u5fc5\u9808\u3067\u3042\u308a\uff0c\u304b\u3064\u6ce2\u9577\u6761\u4ef6 r>5-10 \u304c\u63a8\u5968\u3055\u308c\u308b\uff0e\u7279\u306b\uff0c\u5b89\u5b9a\u6761\u4ef6\u304c\u6e80\u305f\u3055\u308c\u306a\u3044\u5834\u5408\u306b\u306f\u8a08\u7b97\u306f\u5b9f\u884c\u3055\u308c\u305a\u7570\u5e38\u7d42\u4e86\u3059\u308b\uff0e\u8a08\u7b97\u306e\u5b9f\u884c\u4e2d\u306f\uff0c\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u3067\u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\uff0c\u5b9a\u671f\u7684\u306b1\u30b9\u30c6\u30c3\u30d7\u3042\u305f\u308a\u306e\u8a08\u7b97\u6240\u8981\u6642\u9593\u30fb\u4e88\u60f3\u6b8b\u308a\u8a08\u7b97\u6642\u9593\u30fb\u73fe\u6642\u70b9\u3067\u306e\u6700\u5927\u901f\u5ea6\u632f\u5e45\u3092\u305d\u308c\u305e\u308c\u8868\u793a\u3059\u308b\uff0e\u51fa\u529b\u7d50\u679c\u306e\u3046\u3061\uff0c\u8a08\u7b97\u6642\u9593\u306b\u95a2\u3059\u308b\u8868\u793a\u306f\u74b0\u5883\u306b\u3088\u3063\u3066\u7570\u306a\u308b\uff0e\u8a08\u7b97\u304c\u6b63\u5e38\u306b\u5b9f\u884c\u3067\u304d\u3066\u3044\u308c\u3070\uff0c\u6700\u5927\u632f\u5e45\uff08\u6700\u5f8c\u306e () \u5185\u306e3\u3064\u306e\u6570\u5b57\uff09\u306f\uff0c\u540c\u3058\u7d50\u679c\u306b\u306a\u308b\u306f\u305a\u3060\uff0e \u306a\u304a\uff0c\u4e0a\u8a18\u306e3\u6b21\u5143\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u306f\u7d0414GB\u306e\u30e1\u30e2\u30ea\u3092\u5fc5\u8981\u3068\u3059\u308b\uff0e\u30e1\u30e2\u30ea\u4e0d\u8db3\u306b\u3088\u308a\u30c6\u30b9\u30c8\u5b9f\u884c\u304c\u56f0\u96e3\u306a\u5834\u5408\u306f\uff0c\u304a\u306a\u3058\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u3092\u3064\u304b\u3063\u3066 xz \u65ad\u9762\u306b\u304a\u3051\u308b2\u6b21\u5143P-SV\u6ce2\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u65bd\u3067\u304d\u308b\uff1a 1 $ mpirun -np 2 ./bin/swpc_psv.x -i example/input.inf \u540c\u3058\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u3063\u3066\u3082\uff0c2\u6b21\u5143\u8a08\u7b97\u306e\u5834\u5408\u306f\u4e26\u5217\u6570\uff08 -np \u30aa\u30d7\u30b7\u30e7\u30f3\uff09\u304c\u7570\u306a\u308b\u3053\u3068\u306b\u6ce8\u610f\u3055\u308c\u305f\u3044\uff0e \u3053\u306e\u5834\u5408\u306e\u51fa\u529b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\uff0e\u7d50\u679c\u306e\u898b\u304b\u305f\u306f3\u6b21\u5143\u30b3\u30fc\u30c9\u3068\u307b\u3068\u3093\u3069\u540c\u3058\u3067\uff0c\u6700\u5927\u632f\u5e45\u304c3\u6210\u5206\u304b\u30892\u6210\u5206\u306b\u5909\u308f\u3063\u305f\u3060\u3051\u3060\uff0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 ------------------------------------------------------------------------------ SWPC_PSV ------------------------------------------------------------------------------ Grid Size : 384 x 384 MPI Partitioning : 2 Total Memory Size : 0.020 [GiB] Node Memory Size : 0.010 [GiB] Stability Condition c : 0.526 (c<1) Wavelength Condition r : 12.488 (r>5-10) Minimum velocity : 3.122 [km/s] Maximum velocity : 7.977 [km/s] Maximum frequency : 0.500 [Hz] ------------------------------------------------------------------------------ it=0000050, 0.003 s/loop, eta 000:00:02, ( 7.40E-02 2.73E-01 ) it=0000100, 0.003 s/loop, eta 000:00:02, ( 8.13E-01 2.01E+00 ) it=0000150, 0.003 s/loop, eta 000:00:02, ( 7.71E-01 1.46E+00 ) it=0000200, 0.003 s/loop, eta 000:00:02, ( 2.90E-01 2.56E-01 ) it=0000250, 0.003 s/loop, eta 000:00:01, ( 2.21E-01 3.03E-01 ) it=0000300, 0.003 s/loop, eta 000:00:01, ( 1.90E-01 3.22E-01 ) it=0000350, 0.003 s/loop, eta 000:00:01, ( 1.76E-01 3.27E-01 ) it=0000400, 0.003 s/loop, eta 000:00:01, ( 1.93E-01 3.23E-01 ) it=0000450, 0.003 s/loop, eta 000:00:01, ( 1.92E-01 3.08E-01 ) it=0000500, 0.003 s/loop, eta 000:00:01, ( 1.89E-01 3.19E-01 ) it=0000550, 0.003 s/loop, eta 000:00:01, ( 1.83E-01 3.33E-01 ) it=0000600, 0.003 s/loop, eta 000:00:01, ( 1.75E-01 3.34E-01 ) it=0000650, 0.003 s/loop, eta 000:00:00, ( 1.70E-01 3.36E-01 ) it=0000700, 0.003 s/loop, eta 000:00:00, ( 1.69E-01 3.37E-01 ) it=0000750, 0.003 s/loop, eta 000:00:00, ( 1.73E-01 3.48E-01 ) it=0000800, 0.003 s/loop, eta 000:00:00, ( 1.76E-01 3.53E-01 ) it=0000850, 0.003 s/loop, eta 000:00:00, ( 1.77E-01 3.45E-01 ) it=0000900, 0.003 s/loop, eta 000:00:00, ( 1.81E-01 3.41E-01 ) it=0000950, 0.003 s/loop, eta 000:00:00, ( 1.77E-01 3.39E-01 ) it=0001000, 0.003 s/loop, eta 000:00:00, ( 1.63E-01 3.36E-01 ) ------------------------------------------------------------------------------ Total time : 2.652 s ------------------------------------------------------------------------------ \u8a08\u7b97\u901f\u5ea6\u306f\u74b0\u5883\u306b\u4f9d\u5b58\u3059\u308b\u304c\uff0c\u4e00\u822c\u306b3\u6b21\u5143\u8a08\u7b97\u3088\u308a2\u6b21\u5143\u8a08\u7b97\u306e\u307b\u3046\u304c\u306f\u308b\u304b\u306b\u8a08\u7b97\u6642\u9593\u304c\u77ed\u3044\uff0e \u306a\u304a\uff0c\u8a08\u7b97\u7d42\u4e86\u5f8c\u306b 1 Note: The following floating-point exceptions are signalling: IEEE_UNDERFLOW_FLAG \u3068\u3044\u3046\u8868\u793a\u304c\u73fe\u308c\u308b\u3053\u3068\u304c\u3042\u308b\u304c\uff0c\u8a08\u7b97\u7d50\u679c\u306b\u306f\u5f71\u97ff\u306a\u3044\uff0e","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/1._SetUp/0105_parallel/#_1","text":"\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\u306b\u306f\uff0cMPI\u5b9f\u884c\u74b0\u5883\u3092\u7528\u3044\u3066\uff0c 1 $ mpirun -np ${ NP } ./bin/swpc_3d.x -i ${ input } \u306e\u3088\u3046\u306b\u3059\u308b\uff0e\u3053\u3053\u3067 ${NP} \u306f\u5b9f\u884c\u30d7\u30ed\u30bb\u30b9\u6570\uff0c ${input} \u306f\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u3042\u308b\uff0e\u305f\u3060\u3057\uff0c\u5b9f\u884c\u74b0\u5883\u306b\u3088\u3063\u3066\u306f\uff0c mpirun \u30b3\u30de\u30f3\u30c9\u540d\u3084\u305d\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4e0e\u3048\u65b9\u304c\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308b\uff0e ./example/input.inf \u306b2x2=4\u4e26\u5217\u306e\u5747\u8cea\u5a92\u8cea\u4e2d\u306e3\u6b21\u5143\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u4f8b\u304c\u3042\u308b\uff0e\u3053\u308c\u3092\u305d\u306e\u307e\u307e\u5b9f\u884c\u3059\u308b\u306b\u306f\uff0c 1 $ mpirun -np 4 ./bin/swpc_3d.x -i example/input.inf \u3068\u3059\u308b\uff0e \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u6b63\u5e38\u306b\u5b9f\u884c\u3055\u308c\u308b\u3068\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u753b\u9762\u51fa\u529b\u304c\u73fe\u308c\u308b\uff0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 ------------------------------------------------------------------------------ SWPC_3D ------------------------------------------------------------------------------ Grid Size : 384 x 384 x 384 MPI Partitioning : 2 x 2 Total Memory Size : 13.292 [GiB] Node Memory Size : 3.323 [GiB] Stability Condition c : 0.645 (c<1) Wavelength Condition r : 12.488 (r>5-10) Minimum velocity : 3.122 [km/s] Maximum velocity : 7.977 [km/s] Maximum frequency : 0.500 [Hz] ------------------------------------------------------------------------------ it=0000050, 1.024 s/loop, eta 000:16:12, ( 2.94E-05 2.94E-05 1.59E-04 ) it=0000100, 1.028 s/loop, eta 000:15:25, ( 1.95E-04 1.95E-04 8.87E-04 ) it=0000150, 1.023 s/loop, eta 000:14:29, ( 1.04E-04 1.04E-04 4.87E-04 ) it=0000200, 1.014 s/loop, eta 000:13:31, ( 2.62E-05 2.62E-05 4.89E-05 ) it=0000250, 1.010 s/loop, eta 000:12:37, ( 1.32E-05 1.32E-05 3.59E-05 ) it=0000300, 1.001 s/loop, eta 000:11:40, ( 1.13E-05 1.13E-05 3.16E-05 ) it=0000350, 0.996 s/loop, eta 000:10:47, ( 1.26E-05 1.26E-05 2.67E-05 ) it=0000400, 0.992 s/loop, eta 000:09:55, ( 1.13E-05 1.13E-05 2.33E-05 ) it=0000450, 0.991 s/loop, eta 000:09:05, ( 9.68E-06 9.68E-06 2.07E-05 ) it=0000500, 0.987 s/loop, eta 000:08:13, ( 9.22E-06 9.22E-06 1.98E-05 ) it=0000550, 0.984 s/loop, eta 000:07:22, ( 8.90E-06 8.90E-06 1.90E-05 ) it=0000600, 0.981 s/loop, eta 000:06:32, ( 8.37E-06 8.37E-06 1.78E-05 ) it=0000650, 0.978 s/loop, eta 000:05:42, ( 7.78E-06 7.78E-06 1.68E-05 ) it=0000700, 0.975 s/loop, eta 000:04:52, ( 7.63E-06 7.63E-06 1.59E-05 ) it=0000750, 0.973 s/loop, eta 000:04:03, ( 7.47E-06 7.47E-06 1.53E-05 ) it=0000800, 0.972 s/loop, eta 000:03:14, ( 7.01E-06 7.01E-06 1.45E-05 ) it=0000850, 0.974 s/loop, eta 000:02:26, ( 6.79E-06 6.79E-06 1.35E-05 ) it=0000900, 0.974 s/loop, eta 000:01:37, ( 7.07E-06 7.07E-06 1.28E-05 ) it=0000950, 0.973 s/loop, eta 000:00:48, ( 7.38E-06 7.38E-06 1.20E-05 ) it=0001000, 0.973 s/loop, eta 000:00:00, ( 7.22E-06 7.22E-06 1.14E-05 ) ------------------------------------------------------------------------------ Total time : 972.827 s ------------------------------------------------------------------------------``` \uff08\u3053\u306e\u7d50\u679c\u306f example/example.out \u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\uff09 \u5b9f\u884c\u958b\u59cb\u6642\u306b\u306f\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u3084\u5b89\u5b9a\u6761\u4ef6\uff08CFL\u6761\u4ef6\u304b\u3089\u53d6\u308a\u3046\u308b\u6700\u5927\u306e\u6642\u9593\u523b\u307f\u3068\u5229\u7528\u3057\u305f\u6642\u9593\u523b\u307f\u3068\u306e\u6bd4\uff09\u3084\u6ce2\u9577\u6761\u4ef6\uff08\u6700\u5c0f\u6ce2\u9577\u3068\u7a7a\u9593\u523b\u307f\u3068\u306e\u6bd4\uff09\u306a\u3069\u3092\u8868\u793a\u3059\u308b\uff0e \u5b89\u5b9a\u6761\u4ef6\u306f c<1 \u3067\u3042\u308b\u3053\u3068\u304c\u5fc5\u9808\u3067\u3042\u308a\uff0c\u304b\u3064\u6ce2\u9577\u6761\u4ef6 r>5-10 \u304c\u63a8\u5968\u3055\u308c\u308b\uff0e\u7279\u306b\uff0c\u5b89\u5b9a\u6761\u4ef6\u304c\u6e80\u305f\u3055\u308c\u306a\u3044\u5834\u5408\u306b\u306f\u8a08\u7b97\u306f\u5b9f\u884c\u3055\u308c\u305a\u7570\u5e38\u7d42\u4e86\u3059\u308b\uff0e\u8a08\u7b97\u306e\u5b9f\u884c\u4e2d\u306f\uff0c\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u3067\u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\uff0c\u5b9a\u671f\u7684\u306b1\u30b9\u30c6\u30c3\u30d7\u3042\u305f\u308a\u306e\u8a08\u7b97\u6240\u8981\u6642\u9593\u30fb\u4e88\u60f3\u6b8b\u308a\u8a08\u7b97\u6642\u9593\u30fb\u73fe\u6642\u70b9\u3067\u306e\u6700\u5927\u901f\u5ea6\u632f\u5e45\u3092\u305d\u308c\u305e\u308c\u8868\u793a\u3059\u308b\uff0e\u51fa\u529b\u7d50\u679c\u306e\u3046\u3061\uff0c\u8a08\u7b97\u6642\u9593\u306b\u95a2\u3059\u308b\u8868\u793a\u306f\u74b0\u5883\u306b\u3088\u3063\u3066\u7570\u306a\u308b\uff0e\u8a08\u7b97\u304c\u6b63\u5e38\u306b\u5b9f\u884c\u3067\u304d\u3066\u3044\u308c\u3070\uff0c\u6700\u5927\u632f\u5e45\uff08\u6700\u5f8c\u306e () \u5185\u306e3\u3064\u306e\u6570\u5b57\uff09\u306f\uff0c\u540c\u3058\u7d50\u679c\u306b\u306a\u308b\u306f\u305a\u3060\uff0e \u306a\u304a\uff0c\u4e0a\u8a18\u306e3\u6b21\u5143\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u306f\u7d0414GB\u306e\u30e1\u30e2\u30ea\u3092\u5fc5\u8981\u3068\u3059\u308b\uff0e\u30e1\u30e2\u30ea\u4e0d\u8db3\u306b\u3088\u308a\u30c6\u30b9\u30c8\u5b9f\u884c\u304c\u56f0\u96e3\u306a\u5834\u5408\u306f\uff0c\u304a\u306a\u3058\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u3092\u3064\u304b\u3063\u3066 xz \u65ad\u9762\u306b\u304a\u3051\u308b2\u6b21\u5143P-SV\u6ce2\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u65bd\u3067\u304d\u308b\uff1a 1 $ mpirun -np 2 ./bin/swpc_psv.x -i example/input.inf \u540c\u3058\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u3063\u3066\u3082\uff0c2\u6b21\u5143\u8a08\u7b97\u306e\u5834\u5408\u306f\u4e26\u5217\u6570\uff08 -np \u30aa\u30d7\u30b7\u30e7\u30f3\uff09\u304c\u7570\u306a\u308b\u3053\u3068\u306b\u6ce8\u610f\u3055\u308c\u305f\u3044\uff0e \u3053\u306e\u5834\u5408\u306e\u51fa\u529b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\uff0e\u7d50\u679c\u306e\u898b\u304b\u305f\u306f3\u6b21\u5143\u30b3\u30fc\u30c9\u3068\u307b\u3068\u3093\u3069\u540c\u3058\u3067\uff0c\u6700\u5927\u632f\u5e45\u304c3\u6210\u5206\u304b\u30892\u6210\u5206\u306b\u5909\u308f\u3063\u305f\u3060\u3051\u3060\uff0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 ------------------------------------------------------------------------------ SWPC_PSV ------------------------------------------------------------------------------ Grid Size : 384 x 384 MPI Partitioning : 2 Total Memory Size : 0.020 [GiB] Node Memory Size : 0.010 [GiB] Stability Condition c : 0.526 (c<1) Wavelength Condition r : 12.488 (r>5-10) Minimum velocity : 3.122 [km/s] Maximum velocity : 7.977 [km/s] Maximum frequency : 0.500 [Hz] ------------------------------------------------------------------------------ it=0000050, 0.003 s/loop, eta 000:00:02, ( 7.40E-02 2.73E-01 ) it=0000100, 0.003 s/loop, eta 000:00:02, ( 8.13E-01 2.01E+00 ) it=0000150, 0.003 s/loop, eta 000:00:02, ( 7.71E-01 1.46E+00 ) it=0000200, 0.003 s/loop, eta 000:00:02, ( 2.90E-01 2.56E-01 ) it=0000250, 0.003 s/loop, eta 000:00:01, ( 2.21E-01 3.03E-01 ) it=0000300, 0.003 s/loop, eta 000:00:01, ( 1.90E-01 3.22E-01 ) it=0000350, 0.003 s/loop, eta 000:00:01, ( 1.76E-01 3.27E-01 ) it=0000400, 0.003 s/loop, eta 000:00:01, ( 1.93E-01 3.23E-01 ) it=0000450, 0.003 s/loop, eta 000:00:01, ( 1.92E-01 3.08E-01 ) it=0000500, 0.003 s/loop, eta 000:00:01, ( 1.89E-01 3.19E-01 ) it=0000550, 0.003 s/loop, eta 000:00:01, ( 1.83E-01 3.33E-01 ) it=0000600, 0.003 s/loop, eta 000:00:01, ( 1.75E-01 3.34E-01 ) it=0000650, 0.003 s/loop, eta 000:00:00, ( 1.70E-01 3.36E-01 ) it=0000700, 0.003 s/loop, eta 000:00:00, ( 1.69E-01 3.37E-01 ) it=0000750, 0.003 s/loop, eta 000:00:00, ( 1.73E-01 3.48E-01 ) it=0000800, 0.003 s/loop, eta 000:00:00, ( 1.76E-01 3.53E-01 ) it=0000850, 0.003 s/loop, eta 000:00:00, ( 1.77E-01 3.45E-01 ) it=0000900, 0.003 s/loop, eta 000:00:00, ( 1.81E-01 3.41E-01 ) it=0000950, 0.003 s/loop, eta 000:00:00, ( 1.77E-01 3.39E-01 ) it=0001000, 0.003 s/loop, eta 000:00:00, ( 1.63E-01 3.36E-01 ) ------------------------------------------------------------------------------ Total time : 2.652 s ------------------------------------------------------------------------------ \u8a08\u7b97\u901f\u5ea6\u306f\u74b0\u5883\u306b\u4f9d\u5b58\u3059\u308b\u304c\uff0c\u4e00\u822c\u306b3\u6b21\u5143\u8a08\u7b97\u3088\u308a2\u6b21\u5143\u8a08\u7b97\u306e\u307b\u3046\u304c\u306f\u308b\u304b\u306b\u8a08\u7b97\u6642\u9593\u304c\u77ed\u3044\uff0e \u306a\u304a\uff0c\u8a08\u7b97\u7d42\u4e86\u5f8c\u306b 1 Note: The following floating-point exceptions are signalling: IEEE_UNDERFLOW_FLAG \u3068\u3044\u3046\u8868\u793a\u304c\u73fe\u308c\u308b\u3053\u3068\u304c\u3042\u308b\u304c\uff0c\u8a08\u7b97\u7d50\u679c\u306b\u306f\u5f71\u97ff\u306a\u3044\uff0e","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/2._Parameters/0201_description/","text":"\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u8a18\u6cd5 \u00b6 \u672c\u30b3\u30fc\u30c9\u306e\u6319\u52d5\u306f\u539f\u5247\u3068\u3057\u3066\u4e00\u3064\u306e\u5165\u529b\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u3067\u5236\u5fa1\u3055\u308c\u308b\uff0e \u672c\u7ae0\u3067\u306f\u4e3b\u3068\u3057\u30663\u6b21\u5143\u30b3\u30fc\u30c9\u306e\u5165\u529b\u3092\u8aac\u660e\u3059\u308b\u304c\uff0c2\u6b21\u5143P-SV, SH\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\u3082\uff0c \u4e00\u90e8\u5909\u6570\u304c\u4e0d\u8981\u306a\u3060\u3051\u3067\u540c\u3058\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u52d5\u4f5c\u3059\u308b\uff0e 1\u884c\u306b1\u5909\u6570\u3092 1 ( \u5909\u6570\u540d ) = ( \u5909\u6570\u306e\u5024 ) \u306e\u5f62\u5f0f\u3067\u8a18\u8ff0\u3059\u308b\uff0e\u5909\u6570\u5024\u306e\u8868\u73fe\u306b\u306fFortran\u306e\u8a18\u6cd5\u3092\u7528\u3044\u308b\uff0e\u305f\u3068\u3048\u3070\u8ad6\u7406\u578b\u306f .true. \u3084 .false. \u3067\u8a18\u8ff0\u3055\u308c\u308b\uff0e \u539f\u5247\u3068\u3057\u3066\u81ea\u7531\u66f8\u5f0f\u3067\u3042\u308a\uff0c\u4e0a\u8a18\u5909\u6570\u884c\u4ee5\u5916\u306b\u306f\u4f55\u3092\u66f8\u3044\u3066\u3042\u3063\u3066\u3082\u3088\u3044\u304c\uff0c\u7279\u306b ! \u3068 # \u3067\u59cb\u307e\u308b\u884c\u306f \u660e\u793a\u7684\u306b\u30b3\u30e1\u30f3\u30c8\u884c\u3068\u3057\u3066\u8aad\u307f\u3068\u3070\u3055\u308c\u308b\uff0e\u30b3\u30e1\u30f3\u30c8\u306f\u5909\u6570\u3068\u540c\u3058\u884c\u306b\u3042\u3063\u3066\u3082\u826f\u3044\uff0e\u305f\u3068\u3048\u3070 1 nx = 1024 ! number of grids \u306e\u3088\u3046\u306a\u8a18\u8ff0\u304c\u53ef\u80fd\u3067\u3042\u308b\uff0e \u5909\u6570\u306e\u9806\u756a\u306f\u554f\u308f\u305a\uff0c\u3069\u306e\u5909\u6570\u304c\u3069\u306e\u884c\u306b\u66f8\u304b\u308c\u3066\u3044\u3066\u3082\u826f\u3044\uff0e \u305f\u3060\u3057\uff0c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5909\u6570\u304c\u3042\u308b\u5834\u5408\u306b\u306f\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u52d5\u4f5c\u306e\u652f\u969c\u306e\u5177\u5408\u306b\u5fdc\u3058\u3066\uff0c\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u4f7f\u308f\u308c\u308b\u5834\u5408\u3068\u52d5\u4f5c\u3092\u505c\u6b62\u3059\u308b\u5834\u5408\u304c\u3042\u308b\uff0e \u3082\u3057\u540c\u3058\u5909\u6570\u306e\u8a18\u8ff0\u304c\u8907\u6570\u56de\u3042\u308b\u5834\u5408\u306b\u306f\uff0c\u6700\u521d\u306b\u8aad\u307f\u8fbc\u307e\u308c\u305f\u3082\u306e\u304c\u63a1\u7528\u3055\u308c\u308b\uff0e \u5909\u6570\u6307\u5b9a\u306e\u7b49\u53f7\u306e\u4e21\u5074\u306b\u306f\u7a7a\u767d\u304c\u3042\u3063\u3066\u826f\u3044\uff0e\u305f\u3060\u3057\uff0c\u6574\u6570\u3082\u3057\u304f\u306f\u5b9f\u6570\u306e\u30d1\u30e9\u30e1\u30bf\u304c\u8ca0\u306e\u5024\u306e\u5834\u5408\uff0c \u30de\u30a4\u30ca\u30b9\u8a18\u53f7\u3068\u6570\u5b57\u306e\u9593\u306b\u7a7a\u767d\u3092\u7f6e\u304f\u3053\u3068\u306f\u8a31\u3055\u308c\u306a\u3044 \uff0e\u307e\u305f\uff0c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u533a\u5207\u308a\u8a18\u53f7\u3092\u542b\u3080 \u6587\u5b57\u5217\u5909\u6570\u306f\uff0c\u30b7\u30f3\u30b0\u30eb\u3082\u3057\u304f\u306f\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u62ec\u3063\u3066 \u4e0e\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e Caution \u52d5\u4f5c\u306b\u5fc5\u9808\u3067\u306f\u306a\u3044\u30d1\u30e9\u30e1\u30bf\u304c\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\uff0c\u5229\u7528\u3055\u308c\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\u306b\u8868\u793a\u3055\u308c\u308b\uff0e 1 2 [info] key XXXX is not found. [info] Use default value YYYY instead. \u3053\u306e\u8a18\u8f09\u3092\u898b\u9003\u3059\u3068\u4e88\u671f\u305b\u306c\u52d5\u4f5c\u306b\u3064\u306a\u304c\u308b\u3053\u3068\u304c\u3042\u308b\uff0e \u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u4f8b \u00b6 \u4ee5\u4e0b\u306b\u30b5\u30f3\u30d7\u30eb\u30d1\u30e9\u30e1\u30bf\u3092\u793a\u3059\uff0e\u4ee5\u964d\u306e\u5404\u7bc0\u3067\uff0c\u6a5f\u80fd\u3054\u3068\u306b\u6319\u52d5\u3068\u30d1\u30e9\u30e1\u30bf\u306e\u89e3\u8aac\u3092\u884c\u3046\uff0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 !! ----------------------------------------------------------------------- !! !! !! SWPC input file !! !! ----------------------------------------------------------------------- !! !! ----------------------------------------------------------------------- !! !! Control !! title = 'swpc' !! exe title: used for output filenames odir = './out' !! output directory ntdec_r = 50 !! screen report timing (1/cycle) strict_mode = . false . !! all parameters to be explicitly definied !! ----------------------------------------------------------------------- !! !! Model/Grid Size and Area !! nproc_x = 2 !! parallelization in x-dir nproc_y = 2 !! parallelization in x-dir nx = 384 !! total grid number in x-dir ny = 384 !! total grid number in y-dir nz = 384 !! total grid number in z-dir nt = 1000 !! time step number dx = 0.5 !! grid width in x-dir dy = 0.5 !! grid width in y-dir dz = 0.5 !! grid width in z-dir dt = 0.02 !! time step width vcut = 1.5 !! minimum velocity !- smaller velocities will be increased xbeg = - 9 6.0 !! minimum in x-dir ybeg = - 9 6.0 !! minimum in y-dir zbeg = - 1 0.0 !! minimum in z-dir tbeg = 0.0 !! start time clon = 13 9.7604 !! center longitude clat = 3 5.7182 !! center latitude phi = 0.0 !! horizontal coordinate rotation !- measured clockwise from the north fq_min = 0.02 !! minimum freq. for Q-constant model fq_max = 2.00 !! maximum freq. for Q-constant model fq_ref = 1.0 !! ref. freq. for physical dispersion !! ----------------------------------------------------------------------- !! !! Snapshot Output !! snp_format = 'netcdf' !! snapshot format (netcdf) xy_ps % sw = . false . !! P&S amp. for xy section xz_ps % sw = . true . !! P&S amp. for xz section yz_ps % sw = . false . !! P&S amp. for yz section fs_ps % sw = . false . !! P&S amp. for free surface ob_ps % sw = . true . !! P&S amp. for ocean bottom xy_v % sw = . false . !! 3-comp. velocity for xy section xz_v % sw = . true . !! 3-comp. velocity for xz section yz_v % sw = . false . !! 3-comp. velocity for yz section fs_v % sw = . false . !! 3-comp. velocity for free surface ob_v % sw = . true . !! 3-comp. velocity for ocean bottom xy_u % sw = . false . !! 3-comp. disp. for xy section xz_u % sw = . true . !! 3-comp. disp. for xz section yz_u % sw = . false . !! 3-comp. disp. for yz section fs_u % sw = . false . !! 3-comp. disp. for free surface ob_u % sw = . true . !! 3-comp. disp. for ocean bottom z0_xy = 7.0 !! depth for xy cross section x0_yz = 0.0 !! x-value for yz cross section y0_xz = 0.0 !! y-value for xz cross section ntdec_s = 5 !! time decimation of snapshot !- (specify 1 for no decimation) idec = 2 !! x-decimation for snapshot jdec = 2 !! y-decimation for snapshot kdec = 2 !! z-decimation for snapshot !! ----------------------------------------------------------------------- !! !! Waveform Output !! sw_wav_v = . true . !! velocity trace output at stations sw_wav_u = . false . !! displacement trace output at stations sw_wav_stress = . false . !! stress tensor trace sw_wav_strain = . false . !! strain tansor trace ntdec_w = 5 !! time decimation of waveform output st_format = 'xy' !! station format: 'xy' or 'll' fn_stloc = './example/stloc.xy' !! station location file wav_format = 'sac' !! 'sac' or 'csf' ('sac' recommended) wav_calc_dist = . false . !! Calculate epicentral distance !! ----------------------------------------------------------------------- !! !! Earthquake Source !! !! Moment tensor source format: !! xymoij / xym0dc / llm0ij / llm0dc / xymwij / xymwdc / llmwij / llmwdc !! Body force source format: !! xy or ll stf_format = 'xym0ij' !! Basis source time function !! 'boxcar' / 'triangle' / 'herrmann' / 'kupper' / 'cosine' / 'texp' stftype = 'kupper' fn_stf = \"./example/source.dat\" !! Source grid file name !! source depth correction !! 'asis':use z value, 'bd{i}': i-th boundary (i=0...9) sdep_fit = 'asis' !! --------------------------------------------------------------------- !! !! Body force source mode !! bf_mode = . false . !! --------------------------------------------------------------------- !! !! Plane wave source mode !! pw_mode = . false . !! plane wave input. neglects fn_stf pw_ztop = 10 0. !! top z-coordinate of the initial plane wave pw_zlen = 3 0. !! wavelength of the initial plane wave pw_ps = 'p' !! 'p' P-wave 's' S-wave pw_strike = 0.0 !! strike direction of plane wave (deg.) pw_dip = 0.0 !! dip of plane wave (deg.) pw_rake = 0.0 !! rake of plane S-wave polarization (deg.) !! ----------------------------------------------------------------------- !! !! Absorbing Boundary Condition !! abc_type = 'pml' !! 'pml' or 'cerjan' na = 20 !! absorbing layer thickness stabilize_pml = . false . !! avoid low-v layer in PML region !! ----------------------------------------------------------------------- !! !! Velocity model !! vmodel_type = 'lhm' !! velocity model type 'uni'/'grd'/'lhm' is_ocean = . true . !! topography z<0 is covered by ocean topo_flatten = . false . !! Force topography variation to zero (formerly is_flatten) munk_profile = . true . !! velocity gradient inside the seawater column earth_flattening = . false . !! Earth-flattening tranformation !! --------------------------------------------------------------------- !! !! For uniform velocity model 'uni' !! vp0 = 5.0 !! P-wave velocity [km/s] vs0 = 3.0 !! S-wave velocity [km/s] rho0 = 2.7 !! mass density [g/cm^3] qp0 = 200 !! Qp qs0 = 200 !! Qs topo0 = 0 !! topography location !! --------------------------------------------------------------------- !! !! For GMT grid file input 'grd' ( requires netcdf library ) !! dir_grd = '${DATASET}/vmodel/ejivsm/' !! directory for grd file fn_grdlst = './example/grd.lst' !! grd file list node_grd = 0 !! input MPI node !! --------------------------------------------------------------------- !! !! For layered homogeneous medium model ('lhm') !! fn_lhm = 'example/lhm.dat' !! 1D velocity structure !! --------------------------------------------------------------------- !! !! For random medium models !! dir_rmed = './in/' !! location of random medium file fn_grdlst_rmed = './example/grd.lst' !! grd file list rhomin = 1.0 !! minimum density threshold fn_rmed0 = 'dummy.ns' !! vel. purturb. on a uniform media !! ----------------------------------------------------------------------- !! !! Checkpoint/Restart !! is_ckp = . false . !! perform checkpoint/restart ckpdir = './out/ckp' !! output directory ckp_interval = 1000000 !! interval for checkpoint check\uff081/cycle\uff09 ckp_time = 100000 0. !! checkpoint time ckp_seq = . true . !! sequential output mode !! ----------------------------------------------------------------------- !! !! Reciprocity Green's Function Mode !! green_mode = . false . !! reciprocity Green's function mode green_stnm = 'st01' !! virtual station name from fn_stlst green_cmp = 'z' !! virtual source direction 'x', 'y', 'z' green_trise = 1.0 !! rise time green_bforce = . false . !! also calc. body force Green's function green_maxdist = 55 0. !! horizontal limit of source grid green_fmt = 'llz' !! list file format: 'xyz' or 'llz' fn_glst = 'example/green.lst' !! Green's function grid point list !! ----------------------------------------------------------------------- !! !! MISC !! stopwatch_mode = . false . !! measure computation time at routines benchmark_mode = . false . !! benchmark mode ipad = 0 !! memory padding size for tuning jpad = 0 !! memory padding size for tuning kpad = 0 !! memory padding size for tuning \u4ee5\u4e0b\u306e\u5404\u7bc0\u3067\u306f\uff0c\u6a5f\u80fd\u3054\u3068\u306b\u30d1\u30e9\u30e1\u30bf\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\uff0e","title":"\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u8a18\u6cd5"},{"location":"ja/2._Parameters/0201_description/#_1","text":"\u672c\u30b3\u30fc\u30c9\u306e\u6319\u52d5\u306f\u539f\u5247\u3068\u3057\u3066\u4e00\u3064\u306e\u5165\u529b\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u3067\u5236\u5fa1\u3055\u308c\u308b\uff0e \u672c\u7ae0\u3067\u306f\u4e3b\u3068\u3057\u30663\u6b21\u5143\u30b3\u30fc\u30c9\u306e\u5165\u529b\u3092\u8aac\u660e\u3059\u308b\u304c\uff0c2\u6b21\u5143P-SV, SH\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\u3082\uff0c \u4e00\u90e8\u5909\u6570\u304c\u4e0d\u8981\u306a\u3060\u3051\u3067\u540c\u3058\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u52d5\u4f5c\u3059\u308b\uff0e 1\u884c\u306b1\u5909\u6570\u3092 1 ( \u5909\u6570\u540d ) = ( \u5909\u6570\u306e\u5024 ) \u306e\u5f62\u5f0f\u3067\u8a18\u8ff0\u3059\u308b\uff0e\u5909\u6570\u5024\u306e\u8868\u73fe\u306b\u306fFortran\u306e\u8a18\u6cd5\u3092\u7528\u3044\u308b\uff0e\u305f\u3068\u3048\u3070\u8ad6\u7406\u578b\u306f .true. \u3084 .false. \u3067\u8a18\u8ff0\u3055\u308c\u308b\uff0e \u539f\u5247\u3068\u3057\u3066\u81ea\u7531\u66f8\u5f0f\u3067\u3042\u308a\uff0c\u4e0a\u8a18\u5909\u6570\u884c\u4ee5\u5916\u306b\u306f\u4f55\u3092\u66f8\u3044\u3066\u3042\u3063\u3066\u3082\u3088\u3044\u304c\uff0c\u7279\u306b ! \u3068 # \u3067\u59cb\u307e\u308b\u884c\u306f \u660e\u793a\u7684\u306b\u30b3\u30e1\u30f3\u30c8\u884c\u3068\u3057\u3066\u8aad\u307f\u3068\u3070\u3055\u308c\u308b\uff0e\u30b3\u30e1\u30f3\u30c8\u306f\u5909\u6570\u3068\u540c\u3058\u884c\u306b\u3042\u3063\u3066\u3082\u826f\u3044\uff0e\u305f\u3068\u3048\u3070 1 nx = 1024 ! number of grids \u306e\u3088\u3046\u306a\u8a18\u8ff0\u304c\u53ef\u80fd\u3067\u3042\u308b\uff0e \u5909\u6570\u306e\u9806\u756a\u306f\u554f\u308f\u305a\uff0c\u3069\u306e\u5909\u6570\u304c\u3069\u306e\u884c\u306b\u66f8\u304b\u308c\u3066\u3044\u3066\u3082\u826f\u3044\uff0e \u305f\u3060\u3057\uff0c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5909\u6570\u304c\u3042\u308b\u5834\u5408\u306b\u306f\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u52d5\u4f5c\u306e\u652f\u969c\u306e\u5177\u5408\u306b\u5fdc\u3058\u3066\uff0c\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u4f7f\u308f\u308c\u308b\u5834\u5408\u3068\u52d5\u4f5c\u3092\u505c\u6b62\u3059\u308b\u5834\u5408\u304c\u3042\u308b\uff0e \u3082\u3057\u540c\u3058\u5909\u6570\u306e\u8a18\u8ff0\u304c\u8907\u6570\u56de\u3042\u308b\u5834\u5408\u306b\u306f\uff0c\u6700\u521d\u306b\u8aad\u307f\u8fbc\u307e\u308c\u305f\u3082\u306e\u304c\u63a1\u7528\u3055\u308c\u308b\uff0e \u5909\u6570\u6307\u5b9a\u306e\u7b49\u53f7\u306e\u4e21\u5074\u306b\u306f\u7a7a\u767d\u304c\u3042\u3063\u3066\u826f\u3044\uff0e\u305f\u3060\u3057\uff0c\u6574\u6570\u3082\u3057\u304f\u306f\u5b9f\u6570\u306e\u30d1\u30e9\u30e1\u30bf\u304c\u8ca0\u306e\u5024\u306e\u5834\u5408\uff0c \u30de\u30a4\u30ca\u30b9\u8a18\u53f7\u3068\u6570\u5b57\u306e\u9593\u306b\u7a7a\u767d\u3092\u7f6e\u304f\u3053\u3068\u306f\u8a31\u3055\u308c\u306a\u3044 \uff0e\u307e\u305f\uff0c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u533a\u5207\u308a\u8a18\u53f7\u3092\u542b\u3080 \u6587\u5b57\u5217\u5909\u6570\u306f\uff0c\u30b7\u30f3\u30b0\u30eb\u3082\u3057\u304f\u306f\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u62ec\u3063\u3066 \u4e0e\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e Caution \u52d5\u4f5c\u306b\u5fc5\u9808\u3067\u306f\u306a\u3044\u30d1\u30e9\u30e1\u30bf\u304c\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\uff0c\u5229\u7528\u3055\u308c\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\u306b\u8868\u793a\u3055\u308c\u308b\uff0e 1 2 [info] key XXXX is not found. [info] Use default value YYYY instead. \u3053\u306e\u8a18\u8f09\u3092\u898b\u9003\u3059\u3068\u4e88\u671f\u305b\u306c\u52d5\u4f5c\u306b\u3064\u306a\u304c\u308b\u3053\u3068\u304c\u3042\u308b\uff0e","title":"\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u8a18\u6cd5"},{"location":"ja/2._Parameters/0201_description/#_2","text":"\u4ee5\u4e0b\u306b\u30b5\u30f3\u30d7\u30eb\u30d1\u30e9\u30e1\u30bf\u3092\u793a\u3059\uff0e\u4ee5\u964d\u306e\u5404\u7bc0\u3067\uff0c\u6a5f\u80fd\u3054\u3068\u306b\u6319\u52d5\u3068\u30d1\u30e9\u30e1\u30bf\u306e\u89e3\u8aac\u3092\u884c\u3046\uff0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 !! ----------------------------------------------------------------------- !! !! !! SWPC input file !! !! ----------------------------------------------------------------------- !! !! ----------------------------------------------------------------------- !! !! Control !! title = 'swpc' !! exe title: used for output filenames odir = './out' !! output directory ntdec_r = 50 !! screen report timing (1/cycle) strict_mode = . false . !! all parameters to be explicitly definied !! ----------------------------------------------------------------------- !! !! Model/Grid Size and Area !! nproc_x = 2 !! parallelization in x-dir nproc_y = 2 !! parallelization in x-dir nx = 384 !! total grid number in x-dir ny = 384 !! total grid number in y-dir nz = 384 !! total grid number in z-dir nt = 1000 !! time step number dx = 0.5 !! grid width in x-dir dy = 0.5 !! grid width in y-dir dz = 0.5 !! grid width in z-dir dt = 0.02 !! time step width vcut = 1.5 !! minimum velocity !- smaller velocities will be increased xbeg = - 9 6.0 !! minimum in x-dir ybeg = - 9 6.0 !! minimum in y-dir zbeg = - 1 0.0 !! minimum in z-dir tbeg = 0.0 !! start time clon = 13 9.7604 !! center longitude clat = 3 5.7182 !! center latitude phi = 0.0 !! horizontal coordinate rotation !- measured clockwise from the north fq_min = 0.02 !! minimum freq. for Q-constant model fq_max = 2.00 !! maximum freq. for Q-constant model fq_ref = 1.0 !! ref. freq. for physical dispersion !! ----------------------------------------------------------------------- !! !! Snapshot Output !! snp_format = 'netcdf' !! snapshot format (netcdf) xy_ps % sw = . false . !! P&S amp. for xy section xz_ps % sw = . true . !! P&S amp. for xz section yz_ps % sw = . false . !! P&S amp. for yz section fs_ps % sw = . false . !! P&S amp. for free surface ob_ps % sw = . true . !! P&S amp. for ocean bottom xy_v % sw = . false . !! 3-comp. velocity for xy section xz_v % sw = . true . !! 3-comp. velocity for xz section yz_v % sw = . false . !! 3-comp. velocity for yz section fs_v % sw = . false . !! 3-comp. velocity for free surface ob_v % sw = . true . !! 3-comp. velocity for ocean bottom xy_u % sw = . false . !! 3-comp. disp. for xy section xz_u % sw = . true . !! 3-comp. disp. for xz section yz_u % sw = . false . !! 3-comp. disp. for yz section fs_u % sw = . false . !! 3-comp. disp. for free surface ob_u % sw = . true . !! 3-comp. disp. for ocean bottom z0_xy = 7.0 !! depth for xy cross section x0_yz = 0.0 !! x-value for yz cross section y0_xz = 0.0 !! y-value for xz cross section ntdec_s = 5 !! time decimation of snapshot !- (specify 1 for no decimation) idec = 2 !! x-decimation for snapshot jdec = 2 !! y-decimation for snapshot kdec = 2 !! z-decimation for snapshot !! ----------------------------------------------------------------------- !! !! Waveform Output !! sw_wav_v = . true . !! velocity trace output at stations sw_wav_u = . false . !! displacement trace output at stations sw_wav_stress = . false . !! stress tensor trace sw_wav_strain = . false . !! strain tansor trace ntdec_w = 5 !! time decimation of waveform output st_format = 'xy' !! station format: 'xy' or 'll' fn_stloc = './example/stloc.xy' !! station location file wav_format = 'sac' !! 'sac' or 'csf' ('sac' recommended) wav_calc_dist = . false . !! Calculate epicentral distance !! ----------------------------------------------------------------------- !! !! Earthquake Source !! !! Moment tensor source format: !! xymoij / xym0dc / llm0ij / llm0dc / xymwij / xymwdc / llmwij / llmwdc !! Body force source format: !! xy or ll stf_format = 'xym0ij' !! Basis source time function !! 'boxcar' / 'triangle' / 'herrmann' / 'kupper' / 'cosine' / 'texp' stftype = 'kupper' fn_stf = \"./example/source.dat\" !! Source grid file name !! source depth correction !! 'asis':use z value, 'bd{i}': i-th boundary (i=0...9) sdep_fit = 'asis' !! --------------------------------------------------------------------- !! !! Body force source mode !! bf_mode = . false . !! --------------------------------------------------------------------- !! !! Plane wave source mode !! pw_mode = . false . !! plane wave input. neglects fn_stf pw_ztop = 10 0. !! top z-coordinate of the initial plane wave pw_zlen = 3 0. !! wavelength of the initial plane wave pw_ps = 'p' !! 'p' P-wave 's' S-wave pw_strike = 0.0 !! strike direction of plane wave (deg.) pw_dip = 0.0 !! dip of plane wave (deg.) pw_rake = 0.0 !! rake of plane S-wave polarization (deg.) !! ----------------------------------------------------------------------- !! !! Absorbing Boundary Condition !! abc_type = 'pml' !! 'pml' or 'cerjan' na = 20 !! absorbing layer thickness stabilize_pml = . false . !! avoid low-v layer in PML region !! ----------------------------------------------------------------------- !! !! Velocity model !! vmodel_type = 'lhm' !! velocity model type 'uni'/'grd'/'lhm' is_ocean = . true . !! topography z<0 is covered by ocean topo_flatten = . false . !! Force topography variation to zero (formerly is_flatten) munk_profile = . true . !! velocity gradient inside the seawater column earth_flattening = . false . !! Earth-flattening tranformation !! --------------------------------------------------------------------- !! !! For uniform velocity model 'uni' !! vp0 = 5.0 !! P-wave velocity [km/s] vs0 = 3.0 !! S-wave velocity [km/s] rho0 = 2.7 !! mass density [g/cm^3] qp0 = 200 !! Qp qs0 = 200 !! Qs topo0 = 0 !! topography location !! --------------------------------------------------------------------- !! !! For GMT grid file input 'grd' ( requires netcdf library ) !! dir_grd = '${DATASET}/vmodel/ejivsm/' !! directory for grd file fn_grdlst = './example/grd.lst' !! grd file list node_grd = 0 !! input MPI node !! --------------------------------------------------------------------- !! !! For layered homogeneous medium model ('lhm') !! fn_lhm = 'example/lhm.dat' !! 1D velocity structure !! --------------------------------------------------------------------- !! !! For random medium models !! dir_rmed = './in/' !! location of random medium file fn_grdlst_rmed = './example/grd.lst' !! grd file list rhomin = 1.0 !! minimum density threshold fn_rmed0 = 'dummy.ns' !! vel. purturb. on a uniform media !! ----------------------------------------------------------------------- !! !! Checkpoint/Restart !! is_ckp = . false . !! perform checkpoint/restart ckpdir = './out/ckp' !! output directory ckp_interval = 1000000 !! interval for checkpoint check\uff081/cycle\uff09 ckp_time = 100000 0. !! checkpoint time ckp_seq = . true . !! sequential output mode !! ----------------------------------------------------------------------- !! !! Reciprocity Green's Function Mode !! green_mode = . false . !! reciprocity Green's function mode green_stnm = 'st01' !! virtual station name from fn_stlst green_cmp = 'z' !! virtual source direction 'x', 'y', 'z' green_trise = 1.0 !! rise time green_bforce = . false . !! also calc. body force Green's function green_maxdist = 55 0. !! horizontal limit of source grid green_fmt = 'llz' !! list file format: 'xyz' or 'llz' fn_glst = 'example/green.lst' !! Green's function grid point list !! ----------------------------------------------------------------------- !! !! MISC !! stopwatch_mode = . false . !! measure computation time at routines benchmark_mode = . false . !! benchmark mode ipad = 0 !! memory padding size for tuning jpad = 0 !! memory padding size for tuning kpad = 0 !! memory padding size for tuning \u4ee5\u4e0b\u306e\u5404\u7bc0\u3067\u306f\uff0c\u6a5f\u80fd\u3054\u3068\u306b\u30d1\u30e9\u30e1\u30bf\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\uff0e","title":"\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u4f8b"},{"location":"ja/2._Parameters/0202_env/","text":"\u52d5\u4f5c\u74b0\u5883\u306e\u5236\u5fa1 \u00b6 \u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30bf\u306f\u30b3\u30fc\u30c9\u306e\u52d5\u4f5c\u5168\u4f53\u306b\u5f71\u97ff\u3059\u308b\uff0e Parameters title \u8a08\u7b97\u306e\u30bf\u30a4\u30c8\u30eb\uff0e\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u5229\u7528\u3055\u308c\u308b\uff0e odir \u51fa\u529b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\uff0e\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u6642\u306e\u5834\u6240\u304b\u3089\u306e\u76f8\u5bfe\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff0e\u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306b\u306f\uff0c\u5b9f\u884c\u6642\u306b\u81ea\u52d5\u7684\u306b\u4f5c\u6210\u3055\u308c\u308b\uff0e ntdec_r \u8a08\u7b97\u306e\u7d4c\u904e\u3092\u753b\u9762\u51fa\u529b\u3059\u308b\u969b\u306e\u9593\u5f15\u304d\u9593\u9694\uff0e ntdec_r \u8a08\u7b97\u30b9\u30c6\u30c3\u30d7\u6bce\u306b\uff0c\u9014\u4e2d\u7d4c\u904e\u3068\u3057\u3066\uff0c1\u30b9\u30c6\u30c3\u30d7\u3042\u305f\u308a\u306b\u304b\u304b\u308b\u8a08\u7b97\u6642\u9593\u3068\u8a08\u7b97\u7d42\u4e86\u307e\u3067\u306e\u6240\u8981\u6642\u9593\u898b\u8fbc\u307f\uff0c\u305d\u3057\u30663\u6210\u5206\u5730\u9707\u6ce2\u901f\u5ea6\u8a08\u7b97\u5024\u306e\u6700\u5927\u5024\u3092\u51fa\u529b\u3059\u308b\uff0e\u672c\u30d1\u30e9\u30e1\u30bf\u306f\u4e3b\u306b\u6b63\u5e38\u52d5\u4f5c\u306e\u78ba\u8a8d\u3068\u8a08\u7b97\u6642\u9593\u306e\u8a55\u4fa1\u306e\u305f\u3081\u306b\u7528\u3044\u308b\u3082\u306e\u3067\uff0c\u8a08\u7b97\u7d50\u679c\u306b\u306f\u5f71\u97ff\u3057\u306a\u3044\uff0c\u305f\u3060\u3057\uff0c\u3042\u307e\u308a\u306b\u3082\u8868\u793a\u983b\u5ea6\u304c\u9ad8\u3044\uff08 ntdec_r \u304c\u5c0f\u3055\u3044\uff09\u3068\uff0c\u8a08\u7b97\u5b9f\u884c\u6642\u9593\u306e\u5897\u5927\u3092\u62db\u304f\u53ef\u80fd\u6027\u304c\u3042\u308b\uff0e stopwatch_mode \u5404\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u3067\u306e\u8a08\u7b97\u6642\u9593\u3092\u72ec\u81ea\u306b\u8a08\u6e2c\u3057\uff0c\u305d\u306e\u7d50\u679c\u3092 (odir)/(title).tim \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3059\u308b\uff0e\u4e3b\u3068\u3057\u3066\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u30fb\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u7528\u9014\u306b\u7528\u3044\u308b\uff0eGMT\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308c\u3070\uff0c\u3053\u306e\u7d50\u679c\u306f tools/timvis.gmt? \u306b\u3088\u3063\u3066\u53ef\u8996\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e benchmark_mode .true. \u306e\u5834\u5408\uff0c\u5165\u529b\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u95a2\u308f\u3089\u305a\u56fa\u5b9a\u306e\u69cb\u9020\u30fb\u30b0\u30ea\u30c3\u30c9\u9593\u9694\u3067\u52d5\u4f5c\u3055\u305b\u308b\uff0e\u6b63\u5e38\u52d5\u4f5c\u3068\u8a08\u7b97\u901f\u5ea6\u78ba\u8a8d\u306e\u305f\u3081\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3042\u308b\uff0e strict_mode (New in v5.1) .true. \u306e\u5834\u5408\uff0c\u3042\u3089\u3086\u308b\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30bf\u304c\u660e\u793a\u7684\u306b\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff0e .false. \uff08\u3042\u308b\u3044\u306f\u6307\u5b9a\u306a\u3057\uff09\u306e\u5834\u5408\u306b\u306f\uff0c\u3044\u304f\u3064\u304b\u306e\u30d1\u30e9\u30e1\u30bf\u306b\u3064\u3044\u3066\u306f\u7121\u6307\u5b9a\u306e\u5834\u5408\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u8a2d\u5b9a\u3055\u308c\u308b\uff0e\u305d\u306e\u5834\u5408\u306b\u306f\u753b\u9762\u306b\u63a1\u7528\u3057\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u8868\u793a\u3055\u308c\u308b\uff0e ipad, jpad, kpad x, y, z\u5404\u65b9\u5411\u306e\u914d\u5217\u78ba\u4fdd\u306e\u6c34\u5897\u3057\u30b5\u30a4\u30ba\uff0e\u8a08\u7b97\u6a5f\u306b\u3088\u3063\u3066\u306f\uff0c\u5b9f\u969b\u306e\u8a08\u7b97\u9818\u57df\u3088\u308a\u3082\u914d\u5217\u306e\u30e1\u30e2\u30ea\u78ba\u4fdd\u9818\u57df\u3092\u5fae\u5999\u306b\u5897\u3084\u3059\u3053\u3068\u3067\uff0c\u8a08\u7b97\u901f\u5ea6\u304c\u6539\u5584\u3059\u308b\u3053\u3068\u304c\u3042\u308b\uff0e\u305f\u3060\u3057\u3053\u308c\u3089\u306f\u3042\u304f\u307e\u3067\u3082\u30e1\u30e2\u30ea\u78ba\u4fdd\u4e0a\u306e\u6c34\u5897\u3057\u3067\u3042\u308a\uff0c\u8a08\u7b97\u7d50\u679c\u306b\u306f\u5f71\u97ff\u3057\u306a\u3044\uff0e \u30d9\u30f3\u30c1\u30de\u30fc\u30af\u30e2\u30fc\u30c9\u306b\u3064\u3044\u3066 \u30d0\u30fc\u30b8\u30e7\u30f3 5.0.2 \u307e\u3067\u306f\uff0c example/input.inf \u306e\u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb\u3067\u306f benchmark_mode = .true. \u3068\u3055\u308c\u3066\u3044\u305f\uff0e\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4fee\u6b63\u3057\u3066\u8a08\u7b97\u3057\u3088\u3046\u3068\u3057\u3066\u3082\uff0c benchmark_mode \u306e\u305f\u3081\u901f\u5ea6\u69cb\u9020\u3084\u9707\u6e90\u306e\u5909\u66f4\u306e\u4e00\u5207\u3092\u53d7\u3051\u5165\u308c\u306a\u3044\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\uff0e\u30d0\u30fc\u30b8\u30e7\u30f3 5.1\u304b\u3089\u306f\uff0c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3053\u306e\u30d1\u30e9\u30e1\u30bf\u306f .false. \u3068\u306a\u3063\u305f\uff0e","title":"\u52d5\u4f5c\u74b0\u5883\u306e\u5236\u5fa1"},{"location":"ja/2._Parameters/0202_env/#_1","text":"\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30bf\u306f\u30b3\u30fc\u30c9\u306e\u52d5\u4f5c\u5168\u4f53\u306b\u5f71\u97ff\u3059\u308b\uff0e Parameters title \u8a08\u7b97\u306e\u30bf\u30a4\u30c8\u30eb\uff0e\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u5229\u7528\u3055\u308c\u308b\uff0e odir \u51fa\u529b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\uff0e\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u6642\u306e\u5834\u6240\u304b\u3089\u306e\u76f8\u5bfe\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff0e\u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306b\u306f\uff0c\u5b9f\u884c\u6642\u306b\u81ea\u52d5\u7684\u306b\u4f5c\u6210\u3055\u308c\u308b\uff0e ntdec_r \u8a08\u7b97\u306e\u7d4c\u904e\u3092\u753b\u9762\u51fa\u529b\u3059\u308b\u969b\u306e\u9593\u5f15\u304d\u9593\u9694\uff0e ntdec_r \u8a08\u7b97\u30b9\u30c6\u30c3\u30d7\u6bce\u306b\uff0c\u9014\u4e2d\u7d4c\u904e\u3068\u3057\u3066\uff0c1\u30b9\u30c6\u30c3\u30d7\u3042\u305f\u308a\u306b\u304b\u304b\u308b\u8a08\u7b97\u6642\u9593\u3068\u8a08\u7b97\u7d42\u4e86\u307e\u3067\u306e\u6240\u8981\u6642\u9593\u898b\u8fbc\u307f\uff0c\u305d\u3057\u30663\u6210\u5206\u5730\u9707\u6ce2\u901f\u5ea6\u8a08\u7b97\u5024\u306e\u6700\u5927\u5024\u3092\u51fa\u529b\u3059\u308b\uff0e\u672c\u30d1\u30e9\u30e1\u30bf\u306f\u4e3b\u306b\u6b63\u5e38\u52d5\u4f5c\u306e\u78ba\u8a8d\u3068\u8a08\u7b97\u6642\u9593\u306e\u8a55\u4fa1\u306e\u305f\u3081\u306b\u7528\u3044\u308b\u3082\u306e\u3067\uff0c\u8a08\u7b97\u7d50\u679c\u306b\u306f\u5f71\u97ff\u3057\u306a\u3044\uff0c\u305f\u3060\u3057\uff0c\u3042\u307e\u308a\u306b\u3082\u8868\u793a\u983b\u5ea6\u304c\u9ad8\u3044\uff08 ntdec_r \u304c\u5c0f\u3055\u3044\uff09\u3068\uff0c\u8a08\u7b97\u5b9f\u884c\u6642\u9593\u306e\u5897\u5927\u3092\u62db\u304f\u53ef\u80fd\u6027\u304c\u3042\u308b\uff0e stopwatch_mode \u5404\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u3067\u306e\u8a08\u7b97\u6642\u9593\u3092\u72ec\u81ea\u306b\u8a08\u6e2c\u3057\uff0c\u305d\u306e\u7d50\u679c\u3092 (odir)/(title).tim \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3059\u308b\uff0e\u4e3b\u3068\u3057\u3066\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u30fb\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u7528\u9014\u306b\u7528\u3044\u308b\uff0eGMT\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308c\u3070\uff0c\u3053\u306e\u7d50\u679c\u306f tools/timvis.gmt? \u306b\u3088\u3063\u3066\u53ef\u8996\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e benchmark_mode .true. \u306e\u5834\u5408\uff0c\u5165\u529b\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u95a2\u308f\u3089\u305a\u56fa\u5b9a\u306e\u69cb\u9020\u30fb\u30b0\u30ea\u30c3\u30c9\u9593\u9694\u3067\u52d5\u4f5c\u3055\u305b\u308b\uff0e\u6b63\u5e38\u52d5\u4f5c\u3068\u8a08\u7b97\u901f\u5ea6\u78ba\u8a8d\u306e\u305f\u3081\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3042\u308b\uff0e strict_mode (New in v5.1) .true. \u306e\u5834\u5408\uff0c\u3042\u3089\u3086\u308b\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30bf\u304c\u660e\u793a\u7684\u306b\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff0e .false. \uff08\u3042\u308b\u3044\u306f\u6307\u5b9a\u306a\u3057\uff09\u306e\u5834\u5408\u306b\u306f\uff0c\u3044\u304f\u3064\u304b\u306e\u30d1\u30e9\u30e1\u30bf\u306b\u3064\u3044\u3066\u306f\u7121\u6307\u5b9a\u306e\u5834\u5408\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u8a2d\u5b9a\u3055\u308c\u308b\uff0e\u305d\u306e\u5834\u5408\u306b\u306f\u753b\u9762\u306b\u63a1\u7528\u3057\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u8868\u793a\u3055\u308c\u308b\uff0e ipad, jpad, kpad x, y, z\u5404\u65b9\u5411\u306e\u914d\u5217\u78ba\u4fdd\u306e\u6c34\u5897\u3057\u30b5\u30a4\u30ba\uff0e\u8a08\u7b97\u6a5f\u306b\u3088\u3063\u3066\u306f\uff0c\u5b9f\u969b\u306e\u8a08\u7b97\u9818\u57df\u3088\u308a\u3082\u914d\u5217\u306e\u30e1\u30e2\u30ea\u78ba\u4fdd\u9818\u57df\u3092\u5fae\u5999\u306b\u5897\u3084\u3059\u3053\u3068\u3067\uff0c\u8a08\u7b97\u901f\u5ea6\u304c\u6539\u5584\u3059\u308b\u3053\u3068\u304c\u3042\u308b\uff0e\u305f\u3060\u3057\u3053\u308c\u3089\u306f\u3042\u304f\u307e\u3067\u3082\u30e1\u30e2\u30ea\u78ba\u4fdd\u4e0a\u306e\u6c34\u5897\u3057\u3067\u3042\u308a\uff0c\u8a08\u7b97\u7d50\u679c\u306b\u306f\u5f71\u97ff\u3057\u306a\u3044\uff0e \u30d9\u30f3\u30c1\u30de\u30fc\u30af\u30e2\u30fc\u30c9\u306b\u3064\u3044\u3066 \u30d0\u30fc\u30b8\u30e7\u30f3 5.0.2 \u307e\u3067\u306f\uff0c example/input.inf \u306e\u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb\u3067\u306f benchmark_mode = .true. \u3068\u3055\u308c\u3066\u3044\u305f\uff0e\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4fee\u6b63\u3057\u3066\u8a08\u7b97\u3057\u3088\u3046\u3068\u3057\u3066\u3082\uff0c benchmark_mode \u306e\u305f\u3081\u901f\u5ea6\u69cb\u9020\u3084\u9707\u6e90\u306e\u5909\u66f4\u306e\u4e00\u5207\u3092\u53d7\u3051\u5165\u308c\u306a\u3044\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\uff0e\u30d0\u30fc\u30b8\u30e7\u30f3 5.1\u304b\u3089\u306f\uff0c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3053\u306e\u30d1\u30e9\u30e1\u30bf\u306f .false. \u3068\u306a\u3063\u305f\uff0e","title":"\u52d5\u4f5c\u74b0\u5883\u306e\u5236\u5fa1"},{"location":"ja/2._Parameters/0203_coord/","text":"\u5ea7\u6a19\u7cfb\u3068\u4e26\u5217\u8a08\u7b97 \u00b6 OpenSWPC \u306f3\u6b21\u5143\u8a08\u7b97\u306e\u5834\u5408\u306f\u6c34\u5e732\u6b21\u5143\u5206\u5272\u3092\uff0c2\u6b21\u5143\u8a08\u7b97\u306e\u5834\u5408\u306b\u306f\u6c34\u5e731\u6b21\u5143\u5206\u5272\u3092\u7528\u3044\u3066\u4e26\u5217\u8a08\u7b97\u3092\u884c\u3046\uff0e 3\u6b21\u5143\u8a08\u7b97\u306e\u5834\u5408\u306e\u7a7a\u9593MPI\u5206\u5272\u306e\u69d8\u5b50\u3092\u4e0b\u56f3\u306b\u793a\u3059\uff0e2\u6b21\u5143\u8a08\u7b97\u306e\u5834\u5408\u306b\u306f\uff0cXZ ( I-K )\u65ad\u9762\u304c\u5229\u7528\u3055\u308c\u308b\uff0e Figure (a) \uff13\u6b21\u5143\u7a7a\u9593\u306e\u30e2\u30c7\u30eb\u5206\u5272\u306e\u6a21\u5f0f\u56f3\uff0e(b) \u96a3\u63a5\u30ce\u30fc\u30c9\u9593\u306e\u901a\u4fe1\u306e\u6a21\u5f0f\u56f3\uff0e\uff08Modified from Maeda et al., 2013 1 \uff09\uff0e \u672c\u30b3\u30fc\u30c9\u306f\uff0c xbeg--xend , ybeg--yend , zbeg--zend \u306e\u9818\u57df\u3092\uff0c\u7a7a\u9593\u523b\u307f dx , dy , dz \u3067\u5404\u65b9\u5411 nx , ny , nz \u500b\u306e\u30b0\u30ea\u30c3\u30c9\u306b\u96e2\u6563\u5316\u3059\u308b\uff0e z \u65b9\u5411\u306f\u4e0b\u304c\u6b63\u306e\u5ea7\u6a19\u7cfb\u3092\u53d6\u308b\uff0e\u6c34\u9762\u304c z=0 \u3067\u3042\u308b\u3053\u3068\u304c\u60f3\u5b9a\u3055\u308c\u3066\u3044\u308b\u305f\u3081\uff0c\u5730\u8868\u5883\u754c\u6761\u4ef6\u3092\u6e80\u305f\u3059\u305f\u3081 zbeg \u306f\u8ca0\u306e\u5024\u304b\u3089\u59cb\u3081\u308b\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u308b\uff0e \u5b9f\u7a7a\u9593\u30e2\u30c7\u30eb\u3067\u306e\u8a08\u7b97\u306e\u5834\u5408\u306b\u306f\uff0c\u4e2d\u5fc3\u7def\u5ea6 clon , clat \u3092\u57fa\u6e96\u70b9\u3068\u3057\u3066 Gauss-Kr\u00fcger\u6295\u5f71\uff08Kawase et al., 2011 2 \uff09\u306b\u3088\u308a\u8a08\u7b97\u5ea7\u6a19\u7cfb\uff08\u30c7\u30ab\u30eb\u30c8\u5ea7\u6a19\u7cfb\uff09\u306e xy \u9762\u3092\u5730\u7406\u5ea7\u6a19\u7cfb\u306b\u95a2\u9023\u3065\u3051\u308b\uff0e\u5177\u4f53\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u624b\u6cd5\u306b\u3088\u308a\u5730\u7406\u5ea7\u6a19\u3092\u53d6\u5f97\u3059\u308b\uff0e \u56de\u8ee2\u89d2phi\u3068x,y\u306e\u30d1\u30e9\u30e1\u30bf\u304b\u3089\uff0c\u30c7\u30ab\u30eb\u30c8\u5ea7\u6a19\u7cfb\u306b\u304a\u3051\u308b\u7b49\u9593\u9694\u30b0\u30ea\u30c3\u30c9\u4f4d\u7f6e\u3092\u751f\u6210\u3059\u308b\uff0e 1.\u3067\u751f\u6210\u3057\u305f\u30b0\u30ea\u30c3\u30c9\u4e00\u3064\u4e00\u3064\u306e\u4f4d\u7f6e\u3092\uff0c clon , clat \u3092\u4e2d\u5fc3\u4f4d\u7f6e\u3068\u3057\u305fGauss-Kr\u00fcger\u5909\u63db\u306b\u3088\u3063\u3066\u7def\u5ea6\u7d4c\u5ea6\u306b\u5909\u63db\u3059\u308b\uff0e \u5404\u30b0\u30ea\u30c3\u30c9\u4f4d\u7f6e\u306e\u7def\u5ea6\u7d4c\u5ea6\u306b\u304a\u3051\u308b\u6a19\u9ad8\u306a\u3044\u3057\u306f\u5883\u754c\u9762\u6df1\u3055\u3092\uff0c\u5165\u529b\u901f\u5ea6\u69cb\u9020\u30c7\u30fc\u30bf\u304b\u3089\u53cc3\u6b21\u88dc\u9593\u306b\u3088\u3063\u3066\u63a8\u5b9a\u3059\u308b\uff0e \u9818\u57df\u306e\u6307\u5b9a\u7bc4\u56f2\u304c\u5165\u529b\u69cb\u9020\u30d5\u30a1\u30a4\u30eb\u306e\u5916\u306b\u306f\u307f\u51fa\u3057\u3066\u3057\u307e\u3063\u305f\u5834\u5408\u306b\u306f\uff0c\u69cb\u9020\u30d5\u30a1\u30a4\u30eb\u306e\u6700\u5916\u5074\u30b0\u30ea\u30c3\u30c9\u3067\u306e\u5024\u304c\u88dc\u5916\u3055\u308c\u308b\uff0e Figure \u5730\u7406\u5ea7\u6a19\u7cfb\u3068\u8a08\u7b97\u5ea7\u6a19\u7cfb\uff08\u6c34\u5e73\u65ad\u9762\uff09\u3068\u306e\u95a2\u4fc2\uff0e \u30b9\u30bf\u30ac\u30fc\u30c9\u30b0\u30ea\u30c3\u30c9 \u00b6 \u76f4\u4ea4\u5ea7\u6a19\u7cfb O(xyz) \u3068\u96e2\u6563\u5316\u30b0\u30ea\u30c3\u30c9\u3068\u306e\u9593\u306f\u4e0b\u56f3\u306e\u3088\u3046\u306b\u95a2\u4fc2\u4ed8\u3051\u3089\u308c\u308b\uff0e 3\u6b21\u5143\u306e\u30b9\u30bf\u30ac\u30fc\u30c9\u30b0\u30ea\u30c3\u30c9\u914d\u7f6e xbeg=ybeg=zbeg=0 \u306e\u5834\u5408\uff0e \u56f3\u306b\u542b\u307e\u308c\u308b\u30b0\u30ea\u30c3\u30c9\u304c\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u4e0a\u3067\u306f\u540c\u4e00\u306e\u914d\u5217\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 (I, J, K) \u3092\u3082\u3064\uff0e\u3053\u306e\u5358\u4f4d4\u9762\u4f53\u3092\u30dc\u30af\u30bb\u30eb\uff0c\u3068\u547c\u3076\uff0e \u3042\u308b x \u304c\u5c5e\u3059\u308b\u30dc\u30af\u30bb\u30eb\u4f4d\u7f6e\u306f \\begin{align} I = \\left \\lceil \\frac{ x-x_{\\text{beg}} }{ \\Delta x } \\right \\rceil, \\end{align} \u3067\uff0c\u9006\u306b\u30dc\u30af\u30bb\u30eb\u4f4d\u7f6e I \u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u306e\u30dc\u30af\u30bb\u30eb\u4e2d\u5fc3\u306e\u5ea7\u6a19\u4f4d\u7f6e\u306f \\begin{align} x = x_{\\text{beg}} + \\left( I - \\frac{1}{2} \\right) \\Delta x \\end{align} \u3067\u305d\u308c\u305e\u308c\u4e0e\u3048\u3089\u308c\u308b\uff0e\u305f\u3060\u3057 \\lceil \\cdot \\rceil \u306f\u5929\u4e95\u95a2\u6570\uff0c x_{\\text{beg}} \u306f\u5ea7\u6a19\u7cfb\u306e\u3068\u308b\u6700\u5c0f\u5024\u3067\u3042\u308a\uff0c x= x_{\\text{beg}} \u306f\u30dc\u30af\u30bb\u30eb I=1 \u306b\u5c5e\u3059\u308b\u3088\u3046\u306b\u3068\u3089\u308c\u3066\u3044\u308b\uff0e \u7bc4\u56f2 \\begin{align} \\begin{split} x_\\text{beg} + (I-1)\\Delta x < x \\le x_\\text{beg} + I \\Delta x, \\\\ y_\\text{beg} + (J-1)\\Delta y < y \\le y_\\text{beg} + J \\Delta y, \\\\ z_\\text{beg} + (K-1)\\Delta z < z \\le z_\\text{beg} + K \\Delta z \\end{split} \\end{align} \u3067\u5b9a\u7fa9\u3055\u308c\u308b\u30dc\u30af\u30bb\u30eb\u306e\u4e2d\u5fc3\u306b\u6cd5\u7dda\u5fdc\u529b\u6210\u5206\u304c\uff0c\u8fba\u4e0a\u306b\u526a\u65ad\u5fdc\u529b\u6210\u5206\u304c\uff0c\u305d\u3057\u3066\u30dc\u30af\u30bb\u30eb\u9762\u4e0a\u306b\u901f\u5ea6\u6210\u5206\u304c\u305d\u308c\u305e\u308c\u914d\u7f6e\u3055\u308c\u308b\uff0e \u5bc6\u5ea6\u30fb\u901f\u5ea6\u306a\u3069\u306e\u5a92\u8cea\u5b9a\u6570\u306f\u3059\u3079\u3066\u30dc\u30af\u30bb\u30eb\u4e2d\u5fc3 \\begin{align} x_\\text{beg} + (I-1/2) \\Delta x, \\quad y_\\text{beg} + (J-1/2) \\Delta y, \\quad z_\\text{beg} + (K-1/2) \\Delta z \\end{align} \u306e\u4f4d\u7f6e\u3067\u4e0e\u3048\u308b\uff0e\u8a08\u7b97\u4e2d\u306b\u9069\u5b9c\u5e73\u5747\u5316\u64cd\u4f5c\u304c\u884c\u308f\u308c\uff0c\u305d\u308c\u305e\u308c\u306e\u30b0\u30ea\u30c3\u30c9\u3067\u306e\u5a92\u8cea\u30d1\u30e9\u30e1\u30bf\u304c\u8a55\u4fa1\u3055\u308c\u308b\uff0e \u5b89\u5b9a\u6761\u4ef6\u3068\u6ce2\u9577\u6761\u4ef6 \u00b6 \u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba \\Delta x , \\Delta y , \\Delta z \u3068\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u9593\u9694 \\Delta t \u306f\uff0c\u5dee\u5206\u6cd5\u306e\u5b89\u5b9a\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\uff0e N_D \u6b21\u5143\u7a7a\u9593\u306e\uff0c\u7a7a\u9593\u5dee\u5206\u6b21\u6570 P \u6b21\u306e\u5b89\u5b9a\u6761\u4ef6\u306f \\begin{align} \\Delta t < \\frac{ 1 }{ V_{\\max} } \\left( \\sum_{i=1}^{N_D} \\frac{1}{\\Delta x_i^2} \\right)^{-1/2} \\left( \\sum_{p=1}^{P/2} C_p\\right) ^{-1} \\end{align} \u306e\u3088\u3046\u306b\u4e0e\u3048\u3089\u308c\u308b\uff0e \u3053\u3053\u3067 V_{\\max}%_ \u306f\u5a92\u8cea\u4e2d\u3082\u3063\u3068\u3082\u901f\u3044\u5730\u9707\u6ce2\u901f\u5ea6\uff0c C_p%_ \u306f\u5dee\u5206\u6f14\u7b97\u306e\u4fc2\u6570\uff0c \\Delta x_i%_ \u306f i \u65b9\u5411\u306e\u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u3067\u3042\u308b\uff0e \u7a7a\u95934\u6b21\u306e\u5dee\u5206\u516c\u5f0f\u306e\u5834\u5408\uff0c\u4fc2\u6570 C_p \u306f C_1 = 9/8 , C_2 = 1/24 \u3067\u3042\u308b\uff0e \u305f\u3068\u3048\u3070\uff0c3\u6b21\u5143\u7a7a\u95934\u6b21\u306e\u5dee\u5206\u6cd5\u3067\uff0c\u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u304c\u7b49\u65b9\u7684\uff08 \\Delta x = \\Delta y =\\Delta z = h \uff09\u306a\u5834\u5408\uff0c\u3053\u306e\u5b89\u5b9a\u6761\u4ef6\u306f \\begin{align} \\Delta t < \\frac{6}{7} \\dfrac{1}{V_{\\max} \\sqrt{ \\dfrac{1}{\\Delta x^2} + \\dfrac{1}{\\Delta y^2} +\\dfrac{1}{\\Delta z^2}}} = \\frac{6 h}{7 \\sqrt{3} V_{\\max}} \\simeq 0.495 \\frac{h}{V_{\\max}}. \\end{align} \u306e\u3088\u3046\u306b\u7c21\u7565\u5316\u3055\u308c\u308b\uff0e\u3053\u308c\u306f\uff0c\u76f4\u611f\u7684\u306b\u306f \u300e1\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u306b\u5730\u9707\u6ce2\u304c\u4f1d\u64ad\u3059\u308b\u8ddd\u96e2\u306f\uff0c\u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u9593\u9694\u3088\u308a\u3082\uff08\u5145\u5206\u306b\uff09\u5c0f\u3055\u3044\u300f \u3053\u3068\u304c\u8981\u8acb\u3055\u308c\u3066\u3044\u308b\u3068\u8003\u3048\u3066\u826f\u3044\uff0e\u3053\u306e\u6761\u4ef6\u304c\u6e80\u305f\u3055\u308c\u306a\u3044\u3068\uff0c\u5dee\u5206\u6cd5\u306b\u3088\u308b\u6642\u9593\u767a\u5c55\u8a08\u7b97\u305d\u306e\u3082\u306e\u304c\u4e0d\u5b89\u5b9a\u306b\u306a\u308a\uff0c\u3059\u3050\u3055\u307e\u767a\u6563\u3057\u3066\u3057\u307e\u3046\uff0e \u5b89\u5b9a\u6761\u4ef6\u306b\u52a0\u3048\uff0c \u5730\u9707\u6ce2\u306e\u6ce2\u9577\u3088\u308a\u3082\u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u304c\u5145\u5206\u306b\u5c0f\u3055\u3044 \uff081\u6ce2\u9577\u3042\u305f\u308a5-10\u30b0\u30ea\u30c3\u30c9\uff09\u3053\u3068\u3082\u8981\u6c42\u3055\u308c\u308b\uff0e\u3053\u3061\u3089\u306e\u6ce2\u9577\u6761\u4ef6\u306f\u305f\u3068\u3048\u6e80\u305f\u3055\u308c\u306a\u304f\u3066\u3082\u8a08\u7b97\u305d\u306e\u3082\u306e\u306f\u5b9f\u884c\u53ef\u80fd\u3067\u3042\u308b\u304c\uff0c\u6ce2\u9577\u3042\u305f\u308a\u306e\u30b0\u30ea\u30c3\u30c9\u6570\u304c\u8db3\u308a\u306a\u3044\u5834\u5408\u306b\u306f\uff0c\u5730\u9707\u6ce2\u901f\u5ea6\u304c\u6ce2\u9577\uff08\u3042\u308b\u3044\u306f\u5468\u6ce2\u6570\uff09\u306b\u4f9d\u5b58\u3059\u308b\u6570\u5024\u5206\u6563\u73fe\u8c61\u304c\u8d77\u3053\u308b\uff0e\u6570\u5024\u5206\u6563\u306e\u7d50\u679c\uff0c\u5dee\u5206\u6cd5\u306b\u3088\u3063\u3066\u8a08\u7b97\u3055\u308c\u308b\u5730\u9707\u6ce2\u306e\u901f\u5ea6\u306f\u5e38\u306b\u4eee\u5b9a\u3057\u305f\u901f\u5ea6\u3088\u308a\u9045\u304f\u306a\u308b\u305f\u3081\uff0c\u3053\u306e\u4eba\u5de5\u7684\u306a\u5206\u6563\u306b\u3088\u308b\u5f8c\u7d9a\u6ce2\u304c\u73fe\u308c\u3066\u3057\u307e\u3046\uff0e\u6570\u5024\u5206\u6563\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u306f\u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u3092\u5c0f\u3055\u304f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304c\uff0c\u540c\u6642\u306b\uff0c\u5b89\u5b9a\u6761\u4ef6\u3092\u6e80\u305f\u3059\u305f\u3081\u306b\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u9593\u9694\u3082\u5c0f\u3055\u304f\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff0e \u3053\u308c\u3089\u5b89\u5b9a\u6761\u4ef6\u3068\u6ce2\u9577\u6761\u4ef6\u306f\uff0c\u5dee\u5206\u6cd5\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u958b\u59cb\u6642\u306b\u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\u306b Stability Condition c \u304a\u3088\u3073 Wavelength Condition r \u3068\u3057\u3066\u8868\u793a\u3055\u308c\u308b\uff0e\u305d\u308c\u305e\u308c\uff0c\u5b89\u5b9a\u6761\u4ef6\u3068\u6642\u9593\u523b\u307f\u306e\u6bd4\u304a\u3088\u3073\u69cb\u9020\u4e2d\u306e\u6700\u5c0f\u6ce2\u9577\u3068\u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u306e\u6bd4\u3092\u610f\u5473\u3057\u3066\u3044\u308b\uff0e\u524d\u8005\u306f1\u3088\u308a\u5c0f\u3055\u304f\u306a\u3051\u308c\u3070\u8a08\u7b97\u304c\u5b9f\u884c\u3067\u304d\u306a\u3044\uff0e Parameters nproc_x , nproc_y x , y \u65b9\u5411\u306eMPI\u5206\u5272\u6570\uff0e\u5168\u4e26\u5217\u6570\u306f nproc_x * nproc_y \u306b\u306a\u308b\uff0e\u3053\u306e\u5168\u4e26\u5217\u6570\u304c\u5b9f\u884c\u6642\u306b mpirun \u7b49\u3067\u6307\u5b9a\u3055\u308c\u308b\u30d7\u30ed\u30bb\u30b9\u6570\u3068\u4e00\u81f4\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\u5206\u5272\u6570\u306f1\u3067\u3082\u826f\u3044\uff0e\u3069\u3061\u3089\u30821\u306e\u5834\u5408\u306b\u306f\u4e8b\u5b9f\u4e0a\u306e\u975e\u4e26\u5217\u8a08\u7b97\u306b\u306a\u308b\uff0e nx , ny , nz \u7a7a\u9593\u6b21\u5143\u5404\u65b9\u5411\u306e\u30b0\u30ea\u30c3\u30c9\u6570\uff0e \u306a\u304a\uff0c\u6c34\u5e73\u65b9\u5411\u306e\u30b0\u30ea\u30c3\u30c9\u6570 nx , ny \u306f\u5fc5\u305a\u3057\u3082 nproc_x , nproc_y \u306e\u500d\u6570\u3067\u306a\u304f\u3068\u3082\u826f\u3044\uff0e\u4f59\u308a\u304c\u767a\u751f\u3059\u308b\u5834\u5408\u306b\u306f\uff0c\u7aef\u3092\u62c5\u5f53\u3059\u308b\u30ce\u30fc\u30c9\u306e\u30b0\u30ea\u30c3\u30c9\u6570\u3067\u81ea\u52d5\u7684\u306b\u8abf\u7bc0\u3055\u308c\u308b\uff0e dx , dy , dz \u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u9593\u9694 [km]\uff0e\u5168\u7a7a\u9593\u30b5\u30a4\u30ba\u306f nx * dx \u306a\u3069\u3068\u306a\u308b\uff0e\u5404\u65b9\u5411\u306e\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u306f\u7b49\u3057\u304f\u306a\u304f\u3068\u3082\u826f\u3044\uff0e nt \u6642\u9593\u30b0\u30ea\u30c3\u30c9\u6570\uff0e dt \u6642\u9593\u30b0\u30ea\u30c3\u30c9\u9593\u9694 [s]\uff0e\u5168\u6642\u9593\u9577\u306f nt * dt \u3067\u3042\u308b\uff0e xbeg , ybeg , zbeg \u5404\u7a7a\u9593\u65b9\u5411\u306e\u6700\u5c0f\u5024\uff0e\u5730\u56f3\u6295\u5f71\u6cd5\u4e0a\u306f\uff0c\u57fa\u6e96\u7def\u5ea6\u7d4c\u5ea6\u304c\u4e2d\u5fc3\u306b\u306a\u308b\u3088\u3046\u306a\u5024\u3068\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u6700\u3082\u6b6a\u307f\u304c\u5c11\u306a\u3044\uff0e xbeg \u3068 ybeg \u304c\u7701\u7565\u3055\u308c\u305f\u5834\u5408\u306b\u306f\uff0c xbeg\u2006=\u2006-\u2006nx\u2006*\u2006dx\u2006/\u20062 , ybeg\u2006=\u2006-\u2006ny\u2006*\u2006dy\u2006/\u20062 \u3068\u81ea\u52d5\u8a2d\u5b9a\u3055\u308c\u308b\uff0e zbeg \u304c\u7701\u7565\u3055\u308c\u305f\u5834\u5408\u306b\u306f\uff0c K=30 \u304c\u5730\u8868\u9762\u3068\u306a\u308b\u3088\u3046\u306b\u81ea\u52d5\u8a2d\u5b9a\u3055\u308c\u308b\uff0e tbeg \u6642\u9593\u306e\u6700\u5c0f\u5024\uff0e\u901a\u5e38\u306f0\u3067\u826f\u3044\u304c\uff0c\u7279\u5b9a\u306e\u6642\u523b\u304b\u3089\u59cb\u3081\u308b\u3053\u3068\u3082\u3067\u304d\u308b\uff0e clon , clat \u5ea7\u6a19\u7cfb\u4e2d\u5fc3\u7d4c\u5ea6\u30fb\u4e2d\u5fc3\u7def\u5ea6\uff08\u5ea6\uff09\uff0e\u672c\u5ea7\u6a19\u4f4d\u7f6e\u3092\u4e2d\u5fc3\u3068\u3057\u305fGauss-Kr\u00fcger\u5909\u63db\u306b\u3088\u3063\u3066\u5ea7\u6a19\u6295\u5f71\u304c\u884c\u308f\u308c\u308b\uff0e phi \u5730\u7406\u5ea7\u6a19\u7cfb\u306b\u5bfe\u3059\u308b\u8a08\u7b97\u5ea7\u6a19\u7cfb\u306e\u56de\u8ee2\u89d2\u5ea6\uff0e phi=0 \u306e\u5834\u5408\u306f x \u8ef8\u304c\u5317\uff0c y \u8ef8\u304c\u6771\u3092\u5411\u3044\u3066\u3044\u308b\uff0e\u901a\u5e38\u306f\u30bc\u30ed\u3067\u826f\u3044\u304c\uff0c\u659c\u3081\u306e\u5ea7\u6a19\u7cfb\u3092\u7528\u3044\u308b\u3053\u3068\u3082\u3067\u304d\u308b\uff0e\u305f\u3060\u3057\uff0c phi \u304c\u30bc\u30ed\u3067\u306a\u3044\u5834\u5408\u306b\u306f\uff0c\u51fa\u529b\u6ce2\u5f62\u3084\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e x , y \u6210\u5206\u3082\u89d2\u5ea6\u304c phi \u3060\u3051\u50be\u3044\u3066\u3044\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e Maeda, T., Furumura, T., Noguchi, S., Takemura, S., Sakai, S., Shinohara, M., Iwai, K., & Lee, S.-J. (2013). Seismic and tsunami wave propagation of the 2011 Off the Pacific Coast of Tohoku Earthquake as inferred from the tsunami-coupled finite difference simulation, Bulletin of the Seismological Society of America , 103, 1456\u20131472, doi:10.1785/0120120118. (article link) \u21a9 Kawase, K. (2011), A general formula for calculating meridian arc length and its application to coordinate conversion in the Gauss-Kr\u00fcger projection, Bulletin of the Geospatial Information Authority of Japan , 59 , 1\u201313. (article link) \u21a9","title":"\u5ea7\u6a19\u7cfb\u3068\u4e26\u5217\u8a08\u7b97"},{"location":"ja/2._Parameters/0203_coord/#_1","text":"OpenSWPC \u306f3\u6b21\u5143\u8a08\u7b97\u306e\u5834\u5408\u306f\u6c34\u5e732\u6b21\u5143\u5206\u5272\u3092\uff0c2\u6b21\u5143\u8a08\u7b97\u306e\u5834\u5408\u306b\u306f\u6c34\u5e731\u6b21\u5143\u5206\u5272\u3092\u7528\u3044\u3066\u4e26\u5217\u8a08\u7b97\u3092\u884c\u3046\uff0e 3\u6b21\u5143\u8a08\u7b97\u306e\u5834\u5408\u306e\u7a7a\u9593MPI\u5206\u5272\u306e\u69d8\u5b50\u3092\u4e0b\u56f3\u306b\u793a\u3059\uff0e2\u6b21\u5143\u8a08\u7b97\u306e\u5834\u5408\u306b\u306f\uff0cXZ ( I-K )\u65ad\u9762\u304c\u5229\u7528\u3055\u308c\u308b\uff0e Figure (a) \uff13\u6b21\u5143\u7a7a\u9593\u306e\u30e2\u30c7\u30eb\u5206\u5272\u306e\u6a21\u5f0f\u56f3\uff0e(b) \u96a3\u63a5\u30ce\u30fc\u30c9\u9593\u306e\u901a\u4fe1\u306e\u6a21\u5f0f\u56f3\uff0e\uff08Modified from Maeda et al., 2013 1 \uff09\uff0e \u672c\u30b3\u30fc\u30c9\u306f\uff0c xbeg--xend , ybeg--yend , zbeg--zend \u306e\u9818\u57df\u3092\uff0c\u7a7a\u9593\u523b\u307f dx , dy , dz \u3067\u5404\u65b9\u5411 nx , ny , nz \u500b\u306e\u30b0\u30ea\u30c3\u30c9\u306b\u96e2\u6563\u5316\u3059\u308b\uff0e z \u65b9\u5411\u306f\u4e0b\u304c\u6b63\u306e\u5ea7\u6a19\u7cfb\u3092\u53d6\u308b\uff0e\u6c34\u9762\u304c z=0 \u3067\u3042\u308b\u3053\u3068\u304c\u60f3\u5b9a\u3055\u308c\u3066\u3044\u308b\u305f\u3081\uff0c\u5730\u8868\u5883\u754c\u6761\u4ef6\u3092\u6e80\u305f\u3059\u305f\u3081 zbeg \u306f\u8ca0\u306e\u5024\u304b\u3089\u59cb\u3081\u308b\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u308b\uff0e \u5b9f\u7a7a\u9593\u30e2\u30c7\u30eb\u3067\u306e\u8a08\u7b97\u306e\u5834\u5408\u306b\u306f\uff0c\u4e2d\u5fc3\u7def\u5ea6 clon , clat \u3092\u57fa\u6e96\u70b9\u3068\u3057\u3066 Gauss-Kr\u00fcger\u6295\u5f71\uff08Kawase et al., 2011 2 \uff09\u306b\u3088\u308a\u8a08\u7b97\u5ea7\u6a19\u7cfb\uff08\u30c7\u30ab\u30eb\u30c8\u5ea7\u6a19\u7cfb\uff09\u306e xy \u9762\u3092\u5730\u7406\u5ea7\u6a19\u7cfb\u306b\u95a2\u9023\u3065\u3051\u308b\uff0e\u5177\u4f53\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u624b\u6cd5\u306b\u3088\u308a\u5730\u7406\u5ea7\u6a19\u3092\u53d6\u5f97\u3059\u308b\uff0e \u56de\u8ee2\u89d2phi\u3068x,y\u306e\u30d1\u30e9\u30e1\u30bf\u304b\u3089\uff0c\u30c7\u30ab\u30eb\u30c8\u5ea7\u6a19\u7cfb\u306b\u304a\u3051\u308b\u7b49\u9593\u9694\u30b0\u30ea\u30c3\u30c9\u4f4d\u7f6e\u3092\u751f\u6210\u3059\u308b\uff0e 1.\u3067\u751f\u6210\u3057\u305f\u30b0\u30ea\u30c3\u30c9\u4e00\u3064\u4e00\u3064\u306e\u4f4d\u7f6e\u3092\uff0c clon , clat \u3092\u4e2d\u5fc3\u4f4d\u7f6e\u3068\u3057\u305fGauss-Kr\u00fcger\u5909\u63db\u306b\u3088\u3063\u3066\u7def\u5ea6\u7d4c\u5ea6\u306b\u5909\u63db\u3059\u308b\uff0e \u5404\u30b0\u30ea\u30c3\u30c9\u4f4d\u7f6e\u306e\u7def\u5ea6\u7d4c\u5ea6\u306b\u304a\u3051\u308b\u6a19\u9ad8\u306a\u3044\u3057\u306f\u5883\u754c\u9762\u6df1\u3055\u3092\uff0c\u5165\u529b\u901f\u5ea6\u69cb\u9020\u30c7\u30fc\u30bf\u304b\u3089\u53cc3\u6b21\u88dc\u9593\u306b\u3088\u3063\u3066\u63a8\u5b9a\u3059\u308b\uff0e \u9818\u57df\u306e\u6307\u5b9a\u7bc4\u56f2\u304c\u5165\u529b\u69cb\u9020\u30d5\u30a1\u30a4\u30eb\u306e\u5916\u306b\u306f\u307f\u51fa\u3057\u3066\u3057\u307e\u3063\u305f\u5834\u5408\u306b\u306f\uff0c\u69cb\u9020\u30d5\u30a1\u30a4\u30eb\u306e\u6700\u5916\u5074\u30b0\u30ea\u30c3\u30c9\u3067\u306e\u5024\u304c\u88dc\u5916\u3055\u308c\u308b\uff0e Figure \u5730\u7406\u5ea7\u6a19\u7cfb\u3068\u8a08\u7b97\u5ea7\u6a19\u7cfb\uff08\u6c34\u5e73\u65ad\u9762\uff09\u3068\u306e\u95a2\u4fc2\uff0e","title":"\u5ea7\u6a19\u7cfb\u3068\u4e26\u5217\u8a08\u7b97"},{"location":"ja/2._Parameters/0203_coord/#_2","text":"\u76f4\u4ea4\u5ea7\u6a19\u7cfb O(xyz) \u3068\u96e2\u6563\u5316\u30b0\u30ea\u30c3\u30c9\u3068\u306e\u9593\u306f\u4e0b\u56f3\u306e\u3088\u3046\u306b\u95a2\u4fc2\u4ed8\u3051\u3089\u308c\u308b\uff0e 3\u6b21\u5143\u306e\u30b9\u30bf\u30ac\u30fc\u30c9\u30b0\u30ea\u30c3\u30c9\u914d\u7f6e xbeg=ybeg=zbeg=0 \u306e\u5834\u5408\uff0e \u56f3\u306b\u542b\u307e\u308c\u308b\u30b0\u30ea\u30c3\u30c9\u304c\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u4e0a\u3067\u306f\u540c\u4e00\u306e\u914d\u5217\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 (I, J, K) \u3092\u3082\u3064\uff0e\u3053\u306e\u5358\u4f4d4\u9762\u4f53\u3092\u30dc\u30af\u30bb\u30eb\uff0c\u3068\u547c\u3076\uff0e \u3042\u308b x \u304c\u5c5e\u3059\u308b\u30dc\u30af\u30bb\u30eb\u4f4d\u7f6e\u306f \\begin{align} I = \\left \\lceil \\frac{ x-x_{\\text{beg}} }{ \\Delta x } \\right \\rceil, \\end{align} \u3067\uff0c\u9006\u306b\u30dc\u30af\u30bb\u30eb\u4f4d\u7f6e I \u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u306e\u30dc\u30af\u30bb\u30eb\u4e2d\u5fc3\u306e\u5ea7\u6a19\u4f4d\u7f6e\u306f \\begin{align} x = x_{\\text{beg}} + \\left( I - \\frac{1}{2} \\right) \\Delta x \\end{align} \u3067\u305d\u308c\u305e\u308c\u4e0e\u3048\u3089\u308c\u308b\uff0e\u305f\u3060\u3057 \\lceil \\cdot \\rceil \u306f\u5929\u4e95\u95a2\u6570\uff0c x_{\\text{beg}} \u306f\u5ea7\u6a19\u7cfb\u306e\u3068\u308b\u6700\u5c0f\u5024\u3067\u3042\u308a\uff0c x= x_{\\text{beg}} \u306f\u30dc\u30af\u30bb\u30eb I=1 \u306b\u5c5e\u3059\u308b\u3088\u3046\u306b\u3068\u3089\u308c\u3066\u3044\u308b\uff0e \u7bc4\u56f2 \\begin{align} \\begin{split} x_\\text{beg} + (I-1)\\Delta x < x \\le x_\\text{beg} + I \\Delta x, \\\\ y_\\text{beg} + (J-1)\\Delta y < y \\le y_\\text{beg} + J \\Delta y, \\\\ z_\\text{beg} + (K-1)\\Delta z < z \\le z_\\text{beg} + K \\Delta z \\end{split} \\end{align} \u3067\u5b9a\u7fa9\u3055\u308c\u308b\u30dc\u30af\u30bb\u30eb\u306e\u4e2d\u5fc3\u306b\u6cd5\u7dda\u5fdc\u529b\u6210\u5206\u304c\uff0c\u8fba\u4e0a\u306b\u526a\u65ad\u5fdc\u529b\u6210\u5206\u304c\uff0c\u305d\u3057\u3066\u30dc\u30af\u30bb\u30eb\u9762\u4e0a\u306b\u901f\u5ea6\u6210\u5206\u304c\u305d\u308c\u305e\u308c\u914d\u7f6e\u3055\u308c\u308b\uff0e \u5bc6\u5ea6\u30fb\u901f\u5ea6\u306a\u3069\u306e\u5a92\u8cea\u5b9a\u6570\u306f\u3059\u3079\u3066\u30dc\u30af\u30bb\u30eb\u4e2d\u5fc3 \\begin{align} x_\\text{beg} + (I-1/2) \\Delta x, \\quad y_\\text{beg} + (J-1/2) \\Delta y, \\quad z_\\text{beg} + (K-1/2) \\Delta z \\end{align} \u306e\u4f4d\u7f6e\u3067\u4e0e\u3048\u308b\uff0e\u8a08\u7b97\u4e2d\u306b\u9069\u5b9c\u5e73\u5747\u5316\u64cd\u4f5c\u304c\u884c\u308f\u308c\uff0c\u305d\u308c\u305e\u308c\u306e\u30b0\u30ea\u30c3\u30c9\u3067\u306e\u5a92\u8cea\u30d1\u30e9\u30e1\u30bf\u304c\u8a55\u4fa1\u3055\u308c\u308b\uff0e","title":"\u30b9\u30bf\u30ac\u30fc\u30c9\u30b0\u30ea\u30c3\u30c9"},{"location":"ja/2._Parameters/0203_coord/#_3","text":"\u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba \\Delta x , \\Delta y , \\Delta z \u3068\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u9593\u9694 \\Delta t \u306f\uff0c\u5dee\u5206\u6cd5\u306e\u5b89\u5b9a\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\uff0e N_D \u6b21\u5143\u7a7a\u9593\u306e\uff0c\u7a7a\u9593\u5dee\u5206\u6b21\u6570 P \u6b21\u306e\u5b89\u5b9a\u6761\u4ef6\u306f \\begin{align} \\Delta t < \\frac{ 1 }{ V_{\\max} } \\left( \\sum_{i=1}^{N_D} \\frac{1}{\\Delta x_i^2} \\right)^{-1/2} \\left( \\sum_{p=1}^{P/2} C_p\\right) ^{-1} \\end{align} \u306e\u3088\u3046\u306b\u4e0e\u3048\u3089\u308c\u308b\uff0e \u3053\u3053\u3067 V_{\\max}%_ \u306f\u5a92\u8cea\u4e2d\u3082\u3063\u3068\u3082\u901f\u3044\u5730\u9707\u6ce2\u901f\u5ea6\uff0c C_p%_ \u306f\u5dee\u5206\u6f14\u7b97\u306e\u4fc2\u6570\uff0c \\Delta x_i%_ \u306f i \u65b9\u5411\u306e\u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u3067\u3042\u308b\uff0e \u7a7a\u95934\u6b21\u306e\u5dee\u5206\u516c\u5f0f\u306e\u5834\u5408\uff0c\u4fc2\u6570 C_p \u306f C_1 = 9/8 , C_2 = 1/24 \u3067\u3042\u308b\uff0e \u305f\u3068\u3048\u3070\uff0c3\u6b21\u5143\u7a7a\u95934\u6b21\u306e\u5dee\u5206\u6cd5\u3067\uff0c\u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u304c\u7b49\u65b9\u7684\uff08 \\Delta x = \\Delta y =\\Delta z = h \uff09\u306a\u5834\u5408\uff0c\u3053\u306e\u5b89\u5b9a\u6761\u4ef6\u306f \\begin{align} \\Delta t < \\frac{6}{7} \\dfrac{1}{V_{\\max} \\sqrt{ \\dfrac{1}{\\Delta x^2} + \\dfrac{1}{\\Delta y^2} +\\dfrac{1}{\\Delta z^2}}} = \\frac{6 h}{7 \\sqrt{3} V_{\\max}} \\simeq 0.495 \\frac{h}{V_{\\max}}. \\end{align} \u306e\u3088\u3046\u306b\u7c21\u7565\u5316\u3055\u308c\u308b\uff0e\u3053\u308c\u306f\uff0c\u76f4\u611f\u7684\u306b\u306f \u300e1\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u306b\u5730\u9707\u6ce2\u304c\u4f1d\u64ad\u3059\u308b\u8ddd\u96e2\u306f\uff0c\u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u9593\u9694\u3088\u308a\u3082\uff08\u5145\u5206\u306b\uff09\u5c0f\u3055\u3044\u300f \u3053\u3068\u304c\u8981\u8acb\u3055\u308c\u3066\u3044\u308b\u3068\u8003\u3048\u3066\u826f\u3044\uff0e\u3053\u306e\u6761\u4ef6\u304c\u6e80\u305f\u3055\u308c\u306a\u3044\u3068\uff0c\u5dee\u5206\u6cd5\u306b\u3088\u308b\u6642\u9593\u767a\u5c55\u8a08\u7b97\u305d\u306e\u3082\u306e\u304c\u4e0d\u5b89\u5b9a\u306b\u306a\u308a\uff0c\u3059\u3050\u3055\u307e\u767a\u6563\u3057\u3066\u3057\u307e\u3046\uff0e \u5b89\u5b9a\u6761\u4ef6\u306b\u52a0\u3048\uff0c \u5730\u9707\u6ce2\u306e\u6ce2\u9577\u3088\u308a\u3082\u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u304c\u5145\u5206\u306b\u5c0f\u3055\u3044 \uff081\u6ce2\u9577\u3042\u305f\u308a5-10\u30b0\u30ea\u30c3\u30c9\uff09\u3053\u3068\u3082\u8981\u6c42\u3055\u308c\u308b\uff0e\u3053\u3061\u3089\u306e\u6ce2\u9577\u6761\u4ef6\u306f\u305f\u3068\u3048\u6e80\u305f\u3055\u308c\u306a\u304f\u3066\u3082\u8a08\u7b97\u305d\u306e\u3082\u306e\u306f\u5b9f\u884c\u53ef\u80fd\u3067\u3042\u308b\u304c\uff0c\u6ce2\u9577\u3042\u305f\u308a\u306e\u30b0\u30ea\u30c3\u30c9\u6570\u304c\u8db3\u308a\u306a\u3044\u5834\u5408\u306b\u306f\uff0c\u5730\u9707\u6ce2\u901f\u5ea6\u304c\u6ce2\u9577\uff08\u3042\u308b\u3044\u306f\u5468\u6ce2\u6570\uff09\u306b\u4f9d\u5b58\u3059\u308b\u6570\u5024\u5206\u6563\u73fe\u8c61\u304c\u8d77\u3053\u308b\uff0e\u6570\u5024\u5206\u6563\u306e\u7d50\u679c\uff0c\u5dee\u5206\u6cd5\u306b\u3088\u3063\u3066\u8a08\u7b97\u3055\u308c\u308b\u5730\u9707\u6ce2\u306e\u901f\u5ea6\u306f\u5e38\u306b\u4eee\u5b9a\u3057\u305f\u901f\u5ea6\u3088\u308a\u9045\u304f\u306a\u308b\u305f\u3081\uff0c\u3053\u306e\u4eba\u5de5\u7684\u306a\u5206\u6563\u306b\u3088\u308b\u5f8c\u7d9a\u6ce2\u304c\u73fe\u308c\u3066\u3057\u307e\u3046\uff0e\u6570\u5024\u5206\u6563\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u306f\u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u3092\u5c0f\u3055\u304f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304c\uff0c\u540c\u6642\u306b\uff0c\u5b89\u5b9a\u6761\u4ef6\u3092\u6e80\u305f\u3059\u305f\u3081\u306b\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u9593\u9694\u3082\u5c0f\u3055\u304f\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff0e \u3053\u308c\u3089\u5b89\u5b9a\u6761\u4ef6\u3068\u6ce2\u9577\u6761\u4ef6\u306f\uff0c\u5dee\u5206\u6cd5\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u958b\u59cb\u6642\u306b\u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\u306b Stability Condition c \u304a\u3088\u3073 Wavelength Condition r \u3068\u3057\u3066\u8868\u793a\u3055\u308c\u308b\uff0e\u305d\u308c\u305e\u308c\uff0c\u5b89\u5b9a\u6761\u4ef6\u3068\u6642\u9593\u523b\u307f\u306e\u6bd4\u304a\u3088\u3073\u69cb\u9020\u4e2d\u306e\u6700\u5c0f\u6ce2\u9577\u3068\u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u306e\u6bd4\u3092\u610f\u5473\u3057\u3066\u3044\u308b\uff0e\u524d\u8005\u306f1\u3088\u308a\u5c0f\u3055\u304f\u306a\u3051\u308c\u3070\u8a08\u7b97\u304c\u5b9f\u884c\u3067\u304d\u306a\u3044\uff0e Parameters nproc_x , nproc_y x , y \u65b9\u5411\u306eMPI\u5206\u5272\u6570\uff0e\u5168\u4e26\u5217\u6570\u306f nproc_x * nproc_y \u306b\u306a\u308b\uff0e\u3053\u306e\u5168\u4e26\u5217\u6570\u304c\u5b9f\u884c\u6642\u306b mpirun \u7b49\u3067\u6307\u5b9a\u3055\u308c\u308b\u30d7\u30ed\u30bb\u30b9\u6570\u3068\u4e00\u81f4\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\u5206\u5272\u6570\u306f1\u3067\u3082\u826f\u3044\uff0e\u3069\u3061\u3089\u30821\u306e\u5834\u5408\u306b\u306f\u4e8b\u5b9f\u4e0a\u306e\u975e\u4e26\u5217\u8a08\u7b97\u306b\u306a\u308b\uff0e nx , ny , nz \u7a7a\u9593\u6b21\u5143\u5404\u65b9\u5411\u306e\u30b0\u30ea\u30c3\u30c9\u6570\uff0e \u306a\u304a\uff0c\u6c34\u5e73\u65b9\u5411\u306e\u30b0\u30ea\u30c3\u30c9\u6570 nx , ny \u306f\u5fc5\u305a\u3057\u3082 nproc_x , nproc_y \u306e\u500d\u6570\u3067\u306a\u304f\u3068\u3082\u826f\u3044\uff0e\u4f59\u308a\u304c\u767a\u751f\u3059\u308b\u5834\u5408\u306b\u306f\uff0c\u7aef\u3092\u62c5\u5f53\u3059\u308b\u30ce\u30fc\u30c9\u306e\u30b0\u30ea\u30c3\u30c9\u6570\u3067\u81ea\u52d5\u7684\u306b\u8abf\u7bc0\u3055\u308c\u308b\uff0e dx , dy , dz \u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u9593\u9694 [km]\uff0e\u5168\u7a7a\u9593\u30b5\u30a4\u30ba\u306f nx * dx \u306a\u3069\u3068\u306a\u308b\uff0e\u5404\u65b9\u5411\u306e\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u306f\u7b49\u3057\u304f\u306a\u304f\u3068\u3082\u826f\u3044\uff0e nt \u6642\u9593\u30b0\u30ea\u30c3\u30c9\u6570\uff0e dt \u6642\u9593\u30b0\u30ea\u30c3\u30c9\u9593\u9694 [s]\uff0e\u5168\u6642\u9593\u9577\u306f nt * dt \u3067\u3042\u308b\uff0e xbeg , ybeg , zbeg \u5404\u7a7a\u9593\u65b9\u5411\u306e\u6700\u5c0f\u5024\uff0e\u5730\u56f3\u6295\u5f71\u6cd5\u4e0a\u306f\uff0c\u57fa\u6e96\u7def\u5ea6\u7d4c\u5ea6\u304c\u4e2d\u5fc3\u306b\u306a\u308b\u3088\u3046\u306a\u5024\u3068\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u6700\u3082\u6b6a\u307f\u304c\u5c11\u306a\u3044\uff0e xbeg \u3068 ybeg \u304c\u7701\u7565\u3055\u308c\u305f\u5834\u5408\u306b\u306f\uff0c xbeg\u2006=\u2006-\u2006nx\u2006*\u2006dx\u2006/\u20062 , ybeg\u2006=\u2006-\u2006ny\u2006*\u2006dy\u2006/\u20062 \u3068\u81ea\u52d5\u8a2d\u5b9a\u3055\u308c\u308b\uff0e zbeg \u304c\u7701\u7565\u3055\u308c\u305f\u5834\u5408\u306b\u306f\uff0c K=30 \u304c\u5730\u8868\u9762\u3068\u306a\u308b\u3088\u3046\u306b\u81ea\u52d5\u8a2d\u5b9a\u3055\u308c\u308b\uff0e tbeg \u6642\u9593\u306e\u6700\u5c0f\u5024\uff0e\u901a\u5e38\u306f0\u3067\u826f\u3044\u304c\uff0c\u7279\u5b9a\u306e\u6642\u523b\u304b\u3089\u59cb\u3081\u308b\u3053\u3068\u3082\u3067\u304d\u308b\uff0e clon , clat \u5ea7\u6a19\u7cfb\u4e2d\u5fc3\u7d4c\u5ea6\u30fb\u4e2d\u5fc3\u7def\u5ea6\uff08\u5ea6\uff09\uff0e\u672c\u5ea7\u6a19\u4f4d\u7f6e\u3092\u4e2d\u5fc3\u3068\u3057\u305fGauss-Kr\u00fcger\u5909\u63db\u306b\u3088\u3063\u3066\u5ea7\u6a19\u6295\u5f71\u304c\u884c\u308f\u308c\u308b\uff0e phi \u5730\u7406\u5ea7\u6a19\u7cfb\u306b\u5bfe\u3059\u308b\u8a08\u7b97\u5ea7\u6a19\u7cfb\u306e\u56de\u8ee2\u89d2\u5ea6\uff0e phi=0 \u306e\u5834\u5408\u306f x \u8ef8\u304c\u5317\uff0c y \u8ef8\u304c\u6771\u3092\u5411\u3044\u3066\u3044\u308b\uff0e\u901a\u5e38\u306f\u30bc\u30ed\u3067\u826f\u3044\u304c\uff0c\u659c\u3081\u306e\u5ea7\u6a19\u7cfb\u3092\u7528\u3044\u308b\u3053\u3068\u3082\u3067\u304d\u308b\uff0e\u305f\u3060\u3057\uff0c phi \u304c\u30bc\u30ed\u3067\u306a\u3044\u5834\u5408\u306b\u306f\uff0c\u51fa\u529b\u6ce2\u5f62\u3084\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e x , y \u6210\u5206\u3082\u89d2\u5ea6\u304c phi \u3060\u3051\u50be\u3044\u3066\u3044\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e Maeda, T., Furumura, T., Noguchi, S., Takemura, S., Sakai, S., Shinohara, M., Iwai, K., & Lee, S.-J. (2013). Seismic and tsunami wave propagation of the 2011 Off the Pacific Coast of Tohoku Earthquake as inferred from the tsunami-coupled finite difference simulation, Bulletin of the Seismological Society of America , 103, 1456\u20131472, doi:10.1785/0120120118. (article link) \u21a9 Kawase, K. (2011), A general formula for calculating meridian arc length and its application to coordinate conversion in the Gauss-Kr\u00fcger projection, Bulletin of the Geospatial Information Authority of Japan , 59 , 1\u201313. (article link) \u21a9","title":"\u5b89\u5b9a\u6761\u4ef6\u3068\u6ce2\u9577\u6761\u4ef6"},{"location":"ja/2._Parameters/0204_visco/","text":"\u7c98\u5f3e\u6027\u4f53 \u00b6 OpenSWPC \u3067\u306f\u7c98\u5f3e\u6027\u4f53\u30e2\u30c7\u30eb\u3068\u3057\u3066Generalized Zener Body (GZB)\u3092\u63a1\u7528\u3057\uff0c\u8907\u6570\u306e\u7570\u306a\u308b\u7de9\u548c\u6642\u9593\u3092\u3082\u3064\u7c98\u5f3e\u6027\u4f53\u8981\u7d20\u3092\u4e26\u5217\u306b\u7e4b\u3050\u3053\u3068\u3067\uff0c\u5e83\u3044\u5468\u6ce2\u6570\u5e2f\u57df\u306b\u304a\u3044\u3066\u4e00\u5b9a\u306e Q \u5024\u3092\u6301\u3064\u30e2\u30c7\u30eb\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\uff0e GZB\u306e\u69cb\u9020\u6a21\u5f0f\u56f3\uff0e \u4e92\u3044\u306b\u30d1\u30e9\u30e1\u30bf\u306e\u7570\u306a\u308bZener Body\uff08\u77e9\u5f62\u5185\uff09\u304c\u8907\u6570\u4e26\u5217\u3067\u7d50\u5408\u3057\u3066\u3044\u308b\uff0e \u3053\u306e\u3053\u3068\u306b\u3088\u308a\uff0c\u5b9f\u4f53\u6ce2\u901f\u5ea6\u306f\u7269\u7406\u5206\u6563\u6027\u3092\u6301\u3064\u3053\u3068\u306b\u306a\u308b\uff08e.g., Aki and Richards, 2002 1 \uff09\uff0e\u305d\u306e\u305f\u3081\uff0c\u69cb\u9020\u30e2\u30c7\u30eb\u304c\u3069\u306e\u5468\u6ce2\u6570\u306b\u304a\u3051\u308b\u5024\u306a\u306e\u304b\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081\u306e\u57fa\u6e96\u5468\u6ce2\u6570\u3092\u30d1\u30e9\u30e1\u30bf\u3068\u3057\u3066\u4e0e\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e Figure Q {}^{-1} \u306e\u5468\u6ce2\u6570\u4f9d\u5b58\u6027\u306e\u4f8b\uff0e nm=3 \u306e\u5834\u5408\u306e\u5404\u7c98\u5f3e\u6027\u4f53\u69cb\u6210\u8981\u7d20\u306e\u5468\u6ce2\u6570\u4f9d\u5b58\u6027\uff08\u7834\u7dda\uff09\u3068\u5408\u8a08\u3055\u308c\u305f\u5168\u4f53\u306eQ {}^{-1} \u30e2\u30c7\u30eb\uff08\u5b9f\u7dda\uff09\u306e\u5468\u6ce2\u6570\u7279\u6027\u3092\u793a\u3059\uff0e\u9752\u8272\u306e\u9818\u57df\u304c fq_min \uff08\u5de6\u9752\u7dda\uff09\u3068 fq_max \uff08\u53f3\u9752\u7dda\uff09\u3067\u6307\u5b9a\u3055\u308c\u305fQ\u5024\u4e00\u5b9a\u306e\u5468\u6ce2\u6570\u7bc4\u56f2\uff0e \u3053\u306e\u7c98\u5f3e\u6027\u4f53\u306f\uff0c\u5f3e\u6027\u4fc2\u6570 \\pi \\equiv \\lambda + \\mu \u3068 \\mu \u305d\u308c\u305e\u308c\u306b\u5bfe\u5fdc\u3059\u308b\u7de9\u548c\u95a2\u6570 \\begin{align} \\begin{split} \\psi_\\pi \\left( t \\right) &= \\pi_R \\left( 1 - \\frac{1}{N_M} \\sum_{m=1}^{N_M} \\left( 1 -\\frac{ \\tau_m^{\\epsilon P}}{\\tau_{m}^\\sigma} \\right) e^{-t/\\tau^\\sigma_m} \\right) H(t) \\\\ \\psi_\\mu \\left( t \\right) &= \\mu_R \\left( 1 - \\frac{1}{N_M} \\sum_{m=1}^{N_M} \\left( 1 -\\frac{ \\tau_m^{\\epsilon S}}{\\tau^\\sigma_m} \\right) e^{-t/\\tau^\\sigma_m} \\right) H(t) \\end{split} \\end{align} \u3092\u6301\u3064\uff0e\u305f\u3060\u3057\u3053\u3053\u3067\uff0c \\pi_R\\equiv \\lambda_R + 2 \\mu_R \u306fP\u6ce2\u306erelaxed modulus, \\mu_R \u306fS\u6ce2\u306erelaxed modulus\u3067\u3042\u308b\uff0e\u307e\u305f\uff0c \\tau_m^{\\epsilon P} \u3068 \\tau_m^{\\epsilon S} \u306f\u305d\u308c\u305e\u308cP\u6ce2\u3068S\u6ce2\u306e\u30af\u30ea\u30fc\u30d7\u6642\u9593\uff0c \\tau_m^\\sigma \u306f\u7de9\u548c\u6642\u9593\u3068\u547c\u3070\u308c\u308b\uff0eGZB\u306fZener\u7c98\u5f3e\u6027\u4f53\u3092 N_M \u500b\u4e26\u5217\u306b\u63a5\u7d9a\u3057\u305f\u30e2\u30c7\u30eb\u3067\u3042\u308b\uff0e\u7570\u306a\u308b\u7de9\u548c\u6642\u9593\u3092\u3082\u3064\u7c98\u5f3e\u6027\u4f53\u30e2\u30c7\u30eb\u3092\u591a\u6570\u4e26\u5217\u3055\u305b\u308b\u3053\u3068\u306b\u3088\u308a\uff0c\u5e83\u3044\u5468\u6ce2\u6570\u5e2f\u3067\u73fe\u5b9f\u7684\u306a\u6e1b\u8870\u3092\u3082\u3064\u5a92\u8cea\u3092\u8868\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u307e\u305f\uff0c\u30af\u30ea\u30fc\u30d7\u6642\u9593\u3092P\u6ce2\u3068S\u6ce2\u3067\u72ec\u7acb\u306b\u9078\u3076\u3053\u3068\u306b\u3088\u308a\uff0c\u72ec\u7acb\u306a\u5185\u90e8\u6e1b\u8870 Q_P , Q_S \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u3053\u306e\u30e2\u30c7\u30eb\u306e\u69cb\u6210\u65b9\u7a0b\u5f0f\u306f \\begin{align} \\begin{split} &\\dot \\sigma_{ii} (t) = \\left( \\dot \\psi_\\pi (t) - 2 \\dot \\psi_\\mu (t) \\right) \\ast \\partial_k v_k(t) + 2 \\dot \\psi_\\mu(t) \\ast \\partial_i v_i(t) \\\\ &\\dot\\sigma_{ij} (t) = \\dot \\psi_\\mu(t) \\ast \\left( \\partial_i v_j(t) + \\partial_j v_i(t) \\right) \\end{split} \\end{align} \u3068\u306a\u308b\uff0e\u69cb\u6210\u65b9\u7a0b\u5f0f\u306b\u7573\u307f\u8fbc\u307f\u304c\u73fe\u308c\u308b\u304c\uff0c\u30e1\u30e2\u30ea\u5909\u6570\u6cd5(Robertsson, 1994 2 )\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3053\u308c\u3092\u8907\u6570\u306e1\u968e\u306e\u5fae\u5206\u65b9\u7a0b\u5f0f\u306e\u7d44\u306b\u5e30\u7740\u3055\u305b\u3066\u6570\u5024\u8a08\u7b97\u3092\u884c\u3046\uff0e\u307e\u305f\uff0c(Blanch, 1994 3 )\u306e \\tau -method\u306b\u3088\u308a\uff0c\u4ee5\u4e0b\u306b\u8ff0\u3079\u308b\u6700\u5c0f\u9650\u306e\u30d1\u30e9\u30e1\u30bf\u304b\u3089\uff0c\u6307\u5b9a\u5468\u6ce2\u6570\u7bc4\u56f2\u3067 Q \u5024\u304c\u3082\u3063\u3068\u3082\u5e73\u5766\u306b\u306a\u308b\u3088\u3046\u306a\u30e2\u30c7\u30eb\u3092\u81ea\u52d5\u7684\u306b\u9078\u629e\u3059\u308b\uff0e Parameters fq_min \u7c98\u5f3e\u6027\u4f53 Q \u4e00\u5b9a\u5024\u30e2\u30c7\u30eb\u306e\u6700\u5c0f\u5468\u6ce2\u6570 fq_max \u7c98\u5f3e\u6027\u4f53 Q \u4e00\u5b9a\u5024\u30e2\u30c7\u30eb\u306e\u6700\u5927\u5468\u6ce2\u6570 fq_ref \u7c98\u5f3e\u6027\u4f53 Q \u4e00\u5b9a\u5024\u30e2\u30c7\u30eb\u306b\u304a\u3044\u3066\u901f\u5ea6\u5024\u304c\u5b9a\u7fa9\u3055\u308c\u308b\u57fa\u6e96\u5468\u6ce2\u6570 \u56f3\u306b\u793a\u3059\u3088\u3046\u306b\uff0c\u30d1\u30e9\u30e1\u30bf fq_min \u3068 fq_max \u306e\u9593\u306e\u5468\u6ce2\u6570\u5e2f\u3067\uff0cQ\u5024\u304c\u307b\u307c\u4e00\u5b9a\u306e\u5024\u3092\u3068\u308b\uff0e\u305d\u306e\u5916\u5074\u3067\u306f\uff0c\u5468\u6ce2\u6570\u306e2\u6b21\u3067\u6e1b\u8870\u304c\u5c0f\u3055\u304f\u306a\u308b\uff0e\u3053\u306eQ\u30e2\u30c7\u30eb\u306f\u8907\u6570\u306e\u7c98\u5f3e\u6027\u4f53\uff08\u56f3\u4e2d\u70b9\u7dda\uff09\u306e\u91cd\u306d\u5408\u308f\u305b\u3067\u5b9f\u73fe\u3055\u308c\u308b\uff0e\u305d\u306e\u305f\u3081\uff0c\u3088\u308a\u5e83\u5e2f\u57df\u3067Q\u3092\u7dad\u6301\u3059\u308b\u305f\u3081\u306b\u306f\uff0c\u30e1\u30e2\u30ea\u5909\u6570\u306e\u6570\uff08\u57cb\u3081\u8fbc\u307f\u30d1\u30e9\u30e1\u30bf NM \uff09\u3092\u5897\u3084\u3059\u5fc5\u8981\u304c\u3042\u308b\uff0e\u3057\u304b\u3057\uff0c\u3053\u308c\u306f\u8a08\u7b97\u91cf\u3068\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u306e\u5927\u5e45\u306a\u5897\u5927\u3092\u62db\u304f\uff0e\u8a2d\u5b9a\u3057\u305f\u30d1\u30e9\u30e1\u30bf\u4e0b\u3067\u306eQ\u5024\u306e\u5468\u6ce2\u6570\u4f9d\u5b58\u6027\u306f\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0 qmodel_tau.x \u3067\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u5e83\u5e2f\u57df\u3067\u5e73\u5766\u306a\u6e1b\u8870\u30e2\u30c7\u30eb\u3092\u63a1\u7528\u3059\u308b\u3068\uff0c\u7269\u7406\u5206\u6563\u6027\u306b\u3088\u308a\u5b9f\u4f53\u6ce2\u306e\u901f\u5ea6\u304c\u5468\u6ce2\u6570\u306b\u4f9d\u5b58\u3059\u308b\u3088\u3046\u306b\u306a\u308b\uff0e\u305d\u3053\u3067\u57fa\u6e96\u5468\u6ce2\u6570 fq_ref \u3092\u5b9a\u7fa9\u3057\uff0c\u69cb\u9020\u30e2\u30c7\u30eb\u3067\u5165\u529b\u3055\u308c\u305f\u901f\u5ea6\u306f\u5468\u6ce2\u6570 fq_ref \u3067\u306e\u901f\u5ea6\u3067\u3042\u308b\u3053\u3068\u304c\u4eee\u5b9a\u3055\u308c\u308b\uff0e Aki, K., & Richards, P. G. (2002), Quantitative Seismology, 2nd Edition, University Science Books. \u21a9 Robertsson, J. O., J. O. Blanch, and W. W. Symes (1994), Viscoelastic finite-difference modeling, Geophysics, 59(9), 1444\u20131456, doi:10.1190/1.1443701. \u21a9 Blanch, J. O., J. O. Robertsson, and W. W. Symes (1994), Modeling of a constant Q: methodology and algorithm for an efficient and optimally inexpensive viscoelastic technique, Geophysics, 60, 176\u2013184, doi:10.1111/j.1365-246X.2004.02300.x. \u21a9","title":"\u7c98\u5f3e\u6027\u4f53"},{"location":"ja/2._Parameters/0204_visco/#_1","text":"OpenSWPC \u3067\u306f\u7c98\u5f3e\u6027\u4f53\u30e2\u30c7\u30eb\u3068\u3057\u3066Generalized Zener Body (GZB)\u3092\u63a1\u7528\u3057\uff0c\u8907\u6570\u306e\u7570\u306a\u308b\u7de9\u548c\u6642\u9593\u3092\u3082\u3064\u7c98\u5f3e\u6027\u4f53\u8981\u7d20\u3092\u4e26\u5217\u306b\u7e4b\u3050\u3053\u3068\u3067\uff0c\u5e83\u3044\u5468\u6ce2\u6570\u5e2f\u57df\u306b\u304a\u3044\u3066\u4e00\u5b9a\u306e Q \u5024\u3092\u6301\u3064\u30e2\u30c7\u30eb\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\uff0e GZB\u306e\u69cb\u9020\u6a21\u5f0f\u56f3\uff0e \u4e92\u3044\u306b\u30d1\u30e9\u30e1\u30bf\u306e\u7570\u306a\u308bZener Body\uff08\u77e9\u5f62\u5185\uff09\u304c\u8907\u6570\u4e26\u5217\u3067\u7d50\u5408\u3057\u3066\u3044\u308b\uff0e \u3053\u306e\u3053\u3068\u306b\u3088\u308a\uff0c\u5b9f\u4f53\u6ce2\u901f\u5ea6\u306f\u7269\u7406\u5206\u6563\u6027\u3092\u6301\u3064\u3053\u3068\u306b\u306a\u308b\uff08e.g., Aki and Richards, 2002 1 \uff09\uff0e\u305d\u306e\u305f\u3081\uff0c\u69cb\u9020\u30e2\u30c7\u30eb\u304c\u3069\u306e\u5468\u6ce2\u6570\u306b\u304a\u3051\u308b\u5024\u306a\u306e\u304b\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081\u306e\u57fa\u6e96\u5468\u6ce2\u6570\u3092\u30d1\u30e9\u30e1\u30bf\u3068\u3057\u3066\u4e0e\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e Figure Q {}^{-1} \u306e\u5468\u6ce2\u6570\u4f9d\u5b58\u6027\u306e\u4f8b\uff0e nm=3 \u306e\u5834\u5408\u306e\u5404\u7c98\u5f3e\u6027\u4f53\u69cb\u6210\u8981\u7d20\u306e\u5468\u6ce2\u6570\u4f9d\u5b58\u6027\uff08\u7834\u7dda\uff09\u3068\u5408\u8a08\u3055\u308c\u305f\u5168\u4f53\u306eQ {}^{-1} \u30e2\u30c7\u30eb\uff08\u5b9f\u7dda\uff09\u306e\u5468\u6ce2\u6570\u7279\u6027\u3092\u793a\u3059\uff0e\u9752\u8272\u306e\u9818\u57df\u304c fq_min \uff08\u5de6\u9752\u7dda\uff09\u3068 fq_max \uff08\u53f3\u9752\u7dda\uff09\u3067\u6307\u5b9a\u3055\u308c\u305fQ\u5024\u4e00\u5b9a\u306e\u5468\u6ce2\u6570\u7bc4\u56f2\uff0e \u3053\u306e\u7c98\u5f3e\u6027\u4f53\u306f\uff0c\u5f3e\u6027\u4fc2\u6570 \\pi \\equiv \\lambda + \\mu \u3068 \\mu \u305d\u308c\u305e\u308c\u306b\u5bfe\u5fdc\u3059\u308b\u7de9\u548c\u95a2\u6570 \\begin{align} \\begin{split} \\psi_\\pi \\left( t \\right) &= \\pi_R \\left( 1 - \\frac{1}{N_M} \\sum_{m=1}^{N_M} \\left( 1 -\\frac{ \\tau_m^{\\epsilon P}}{\\tau_{m}^\\sigma} \\right) e^{-t/\\tau^\\sigma_m} \\right) H(t) \\\\ \\psi_\\mu \\left( t \\right) &= \\mu_R \\left( 1 - \\frac{1}{N_M} \\sum_{m=1}^{N_M} \\left( 1 -\\frac{ \\tau_m^{\\epsilon S}}{\\tau^\\sigma_m} \\right) e^{-t/\\tau^\\sigma_m} \\right) H(t) \\end{split} \\end{align} \u3092\u6301\u3064\uff0e\u305f\u3060\u3057\u3053\u3053\u3067\uff0c \\pi_R\\equiv \\lambda_R + 2 \\mu_R \u306fP\u6ce2\u306erelaxed modulus, \\mu_R \u306fS\u6ce2\u306erelaxed modulus\u3067\u3042\u308b\uff0e\u307e\u305f\uff0c \\tau_m^{\\epsilon P} \u3068 \\tau_m^{\\epsilon S} \u306f\u305d\u308c\u305e\u308cP\u6ce2\u3068S\u6ce2\u306e\u30af\u30ea\u30fc\u30d7\u6642\u9593\uff0c \\tau_m^\\sigma \u306f\u7de9\u548c\u6642\u9593\u3068\u547c\u3070\u308c\u308b\uff0eGZB\u306fZener\u7c98\u5f3e\u6027\u4f53\u3092 N_M \u500b\u4e26\u5217\u306b\u63a5\u7d9a\u3057\u305f\u30e2\u30c7\u30eb\u3067\u3042\u308b\uff0e\u7570\u306a\u308b\u7de9\u548c\u6642\u9593\u3092\u3082\u3064\u7c98\u5f3e\u6027\u4f53\u30e2\u30c7\u30eb\u3092\u591a\u6570\u4e26\u5217\u3055\u305b\u308b\u3053\u3068\u306b\u3088\u308a\uff0c\u5e83\u3044\u5468\u6ce2\u6570\u5e2f\u3067\u73fe\u5b9f\u7684\u306a\u6e1b\u8870\u3092\u3082\u3064\u5a92\u8cea\u3092\u8868\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u307e\u305f\uff0c\u30af\u30ea\u30fc\u30d7\u6642\u9593\u3092P\u6ce2\u3068S\u6ce2\u3067\u72ec\u7acb\u306b\u9078\u3076\u3053\u3068\u306b\u3088\u308a\uff0c\u72ec\u7acb\u306a\u5185\u90e8\u6e1b\u8870 Q_P , Q_S \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u3053\u306e\u30e2\u30c7\u30eb\u306e\u69cb\u6210\u65b9\u7a0b\u5f0f\u306f \\begin{align} \\begin{split} &\\dot \\sigma_{ii} (t) = \\left( \\dot \\psi_\\pi (t) - 2 \\dot \\psi_\\mu (t) \\right) \\ast \\partial_k v_k(t) + 2 \\dot \\psi_\\mu(t) \\ast \\partial_i v_i(t) \\\\ &\\dot\\sigma_{ij} (t) = \\dot \\psi_\\mu(t) \\ast \\left( \\partial_i v_j(t) + \\partial_j v_i(t) \\right) \\end{split} \\end{align} \u3068\u306a\u308b\uff0e\u69cb\u6210\u65b9\u7a0b\u5f0f\u306b\u7573\u307f\u8fbc\u307f\u304c\u73fe\u308c\u308b\u304c\uff0c\u30e1\u30e2\u30ea\u5909\u6570\u6cd5(Robertsson, 1994 2 )\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3053\u308c\u3092\u8907\u6570\u306e1\u968e\u306e\u5fae\u5206\u65b9\u7a0b\u5f0f\u306e\u7d44\u306b\u5e30\u7740\u3055\u305b\u3066\u6570\u5024\u8a08\u7b97\u3092\u884c\u3046\uff0e\u307e\u305f\uff0c(Blanch, 1994 3 )\u306e \\tau -method\u306b\u3088\u308a\uff0c\u4ee5\u4e0b\u306b\u8ff0\u3079\u308b\u6700\u5c0f\u9650\u306e\u30d1\u30e9\u30e1\u30bf\u304b\u3089\uff0c\u6307\u5b9a\u5468\u6ce2\u6570\u7bc4\u56f2\u3067 Q \u5024\u304c\u3082\u3063\u3068\u3082\u5e73\u5766\u306b\u306a\u308b\u3088\u3046\u306a\u30e2\u30c7\u30eb\u3092\u81ea\u52d5\u7684\u306b\u9078\u629e\u3059\u308b\uff0e Parameters fq_min \u7c98\u5f3e\u6027\u4f53 Q \u4e00\u5b9a\u5024\u30e2\u30c7\u30eb\u306e\u6700\u5c0f\u5468\u6ce2\u6570 fq_max \u7c98\u5f3e\u6027\u4f53 Q \u4e00\u5b9a\u5024\u30e2\u30c7\u30eb\u306e\u6700\u5927\u5468\u6ce2\u6570 fq_ref \u7c98\u5f3e\u6027\u4f53 Q \u4e00\u5b9a\u5024\u30e2\u30c7\u30eb\u306b\u304a\u3044\u3066\u901f\u5ea6\u5024\u304c\u5b9a\u7fa9\u3055\u308c\u308b\u57fa\u6e96\u5468\u6ce2\u6570 \u56f3\u306b\u793a\u3059\u3088\u3046\u306b\uff0c\u30d1\u30e9\u30e1\u30bf fq_min \u3068 fq_max \u306e\u9593\u306e\u5468\u6ce2\u6570\u5e2f\u3067\uff0cQ\u5024\u304c\u307b\u307c\u4e00\u5b9a\u306e\u5024\u3092\u3068\u308b\uff0e\u305d\u306e\u5916\u5074\u3067\u306f\uff0c\u5468\u6ce2\u6570\u306e2\u6b21\u3067\u6e1b\u8870\u304c\u5c0f\u3055\u304f\u306a\u308b\uff0e\u3053\u306eQ\u30e2\u30c7\u30eb\u306f\u8907\u6570\u306e\u7c98\u5f3e\u6027\u4f53\uff08\u56f3\u4e2d\u70b9\u7dda\uff09\u306e\u91cd\u306d\u5408\u308f\u305b\u3067\u5b9f\u73fe\u3055\u308c\u308b\uff0e\u305d\u306e\u305f\u3081\uff0c\u3088\u308a\u5e83\u5e2f\u57df\u3067Q\u3092\u7dad\u6301\u3059\u308b\u305f\u3081\u306b\u306f\uff0c\u30e1\u30e2\u30ea\u5909\u6570\u306e\u6570\uff08\u57cb\u3081\u8fbc\u307f\u30d1\u30e9\u30e1\u30bf NM \uff09\u3092\u5897\u3084\u3059\u5fc5\u8981\u304c\u3042\u308b\uff0e\u3057\u304b\u3057\uff0c\u3053\u308c\u306f\u8a08\u7b97\u91cf\u3068\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u306e\u5927\u5e45\u306a\u5897\u5927\u3092\u62db\u304f\uff0e\u8a2d\u5b9a\u3057\u305f\u30d1\u30e9\u30e1\u30bf\u4e0b\u3067\u306eQ\u5024\u306e\u5468\u6ce2\u6570\u4f9d\u5b58\u6027\u306f\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0 qmodel_tau.x \u3067\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u5e83\u5e2f\u57df\u3067\u5e73\u5766\u306a\u6e1b\u8870\u30e2\u30c7\u30eb\u3092\u63a1\u7528\u3059\u308b\u3068\uff0c\u7269\u7406\u5206\u6563\u6027\u306b\u3088\u308a\u5b9f\u4f53\u6ce2\u306e\u901f\u5ea6\u304c\u5468\u6ce2\u6570\u306b\u4f9d\u5b58\u3059\u308b\u3088\u3046\u306b\u306a\u308b\uff0e\u305d\u3053\u3067\u57fa\u6e96\u5468\u6ce2\u6570 fq_ref \u3092\u5b9a\u7fa9\u3057\uff0c\u69cb\u9020\u30e2\u30c7\u30eb\u3067\u5165\u529b\u3055\u308c\u305f\u901f\u5ea6\u306f\u5468\u6ce2\u6570 fq_ref \u3067\u306e\u901f\u5ea6\u3067\u3042\u308b\u3053\u3068\u304c\u4eee\u5b9a\u3055\u308c\u308b\uff0e Aki, K., & Richards, P. G. (2002), Quantitative Seismology, 2nd Edition, University Science Books. \u21a9 Robertsson, J. O., J. O. Blanch, and W. W. Symes (1994), Viscoelastic finite-difference modeling, Geophysics, 59(9), 1444\u20131456, doi:10.1190/1.1443701. \u21a9 Blanch, J. O., J. O. Robertsson, and W. W. Symes (1994), Modeling of a constant Q: methodology and algorithm for an efficient and optimally inexpensive viscoelastic technique, Geophysics, 60, 176\u2013184, doi:10.1111/j.1365-246X.2004.02300.x. \u21a9","title":"\u7c98\u5f3e\u6027\u4f53"},{"location":"ja/2._Parameters/0205_output/","text":"\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u306e\u8a2d\u5b9a \u00b6 \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f \u00b6 \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u306b\u306f\uff0cFortran\u306eStream I/O\u6a5f\u80fd\u3092\u7528\u3044\u305f\u72ec\u81ea\u5f62\u5f0f\uff08\u4ee5\u4e0bnative\u5f62\u5f0f\uff1b\u65e7\u5f62\u5f0f\u306e\u305f\u3081\u975e\u63a8\u5968\uff09\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3082\u3057\u304f\u306f NetCDF \u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\uff08\u63a8\u5968\uff09\u3092\u9078\u629e\u3067\u304d\u308b\uff0e\u6ce2\u5f62\u51fa\u529b\u306f SAC \u5f62\u5f0f\u3067\u884c\u308f\u308c\u308b\uff0e \u51fa\u529b\u306b\u969b\u3057\u3066\u660e\u793a\u7684\u306a\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u5909\u63db\u306f\u884c\u308f\u306a\u3044\u305f\u3081\uff0c\u751f\u6210\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u306f\u5b9f\u884c\u74b0\u5883\u306e\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u306b\u4f9d\u5b58\u3059\u308b\uff0e \u3057\u304b\u3057\uff0cSAC\u304a\u3088\u3073NetCDF\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u306b\u4f9d\u5b58\u305b\u305a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u305f\u3081\uff0c\u3053\u308c\u3089\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u4f7f\u3063\u3066\u3044\u308b\u9650\u308a\uff0c\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u306b\u3064\u3044\u3066\u610f\u8b58\u3059\u308b\u5fc5\u8981\u306f\u307b\u3068\u3093\u3069\u7121\u3044\uff0e \u72ec\u81ea\u5f62\u5f0f\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306f\uff0c\u958b\u767a\u306e\u90fd\u5408\u3067\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5fae\u7d30\u306a\u5909\u66f4\u304c\u306a\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308b\uff0e \u5f8c\u65b9\u4e92\u63db\u6027\u306f\u78ba\u4fdd\u3055\u308c\u3066\u3044\u308b\u304c\uff0c\u540c\u3058\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30b3\u30fc\u30c9\u306b\u540c\u68b1\u3055\u308c\u3066\u3044\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u7d4c\u7531\u3067\u30c7\u30fc\u30bf\u3092\u8aad\u3080\u306e\u304c\u78ba\u5b9f\u3067\u3042\u308b\uff0e \u6ce2\u5f62\u51fa\u529b\u306eSAC\u30d5\u30a1\u30a4\u30eb\u306b\u306f\uff0cSAC\u3067\u5fc5\u9808\u3068\u3055\u308c\u308b\u6a19\u6e96\u7684\u306a\u30d8\u30c3\u30c0\u306e\u4ed6\uff0c\u4ee5\u4e0b\u306e\u8868\u306e\u30d8\u30c3\u30c0\u304c\u4ed8\u52a0\u3055\u308c\u308b\uff0e \u6ce2\u5f62\u8a18\u9332\u306e\u5358\u4f4d\u306f\uff0c SAC \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u6a19\u6e96\u306b\u5f93\u3044\uff0c\u901f\u5ea6\u306fnm/s, \u5909\u4f4d\u306fnm \u304c\u63a1\u7528\u3055\u308c\u3066\u3044\u308b\uff0e \u306a\u304a\uff0c\u6ce2\u5f62\u30fb\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3068\u3082\u6c34\u5e73\u6210\u5206\u306e\u65b9\u5411\u306f\u8a08\u7b97\u5ea7\u6a19\u7cfb\u306e x , y , z \u306b\u6e96\u305a\u308b\uff0e phi=0 \u3067\u3042\u308c\u3070 x , y \u306f\u305d\u308c\u305e\u308c\u5317\u30fb\u6771\u3067\u3042\u308b\u304c\uff0c\u8a08\u7b97\u5ea7\u6a19\u7cfb\u3092\u56de\u8ee2\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e\u3053\u306e\u5ea7\u6a19\u7cfb\u306e\u56de\u8ee2\u89d2\u306f\u51fa\u529b SAC \u30d5\u30a1\u30a4\u30eb\u30d8\u30c3\u30c0\u306ecmpaz\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u305f\u3081\uff0c SAC \u4e0a\u3067\u5bb9\u6613\u306b\u5317\u30fb\u6771\u3092\u6b63\u306b\u3059\u308b\u65b9\u5411\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u307e\u305f\uff0c\u6ce2\u5f62\u51fa\u529b\u306e\u925b\u76f4\u6210\u5206\u306b\u3064\u3044\u3066\u306f\uff0c\u6163\u4f8b\u306b\u5f93\u3044\u4e0a\u304c\u6b63\u306b\u306a\u308b\u3088\u3046\u306b\u53cd\u8ee2\u3055\u308c\u3066\u3044\u308b\uff0e\u4e00\u65b9\uff0c\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u901f\u5ea6\u51fa\u529b\u306e z \u6210\u5206\u306f\u8a08\u7b97\u5ea7\u6a19\u7cfb\uff08\u925b\u76f4\u4e0b\u65b9\u304c\u6b63\uff09\u306e\u307e\u307e\u3067\u3042\u308b\uff0e \u6ce2\u5f62\u30d5\u30a1\u30a4\u30eb\u306e\u30d8\u30c3\u30c0 \u00b6 header name description kevnm title evlo , evla , evdp \u9707\u6e90\u30ea\u30b9\u30c8\u306e1\u884c\u76ee\u306e\u9707\u6e90\u4f4d\u7f6e\uff0e\u9707\u6e90\u4f4d\u7f6e\u304c\u30c7\u30ab\u30eb\u30c8\u5ea7\u6a19\u7cfb\u3067\u4e0e\u3048\u3089\u308c\u305f\u5834\u5408\u306b\u306f\u30d1\u30e9\u30e1\u30bf clon \u3068 clat \u3092\u3082\u3068\u306b\u7def\u5ea6\u7d4c\u5ea6\u5909\u63db\u3059\u308b\uff0e o \u9707\u6e90\u30ea\u30b9\u30c81\u884c\u76ee\u306e\u9707\u6e90\u7834\u58ca\u958b\u59cb\u6642\u9593\uff0e kzdate , kztime \u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u958b\u59cb\u65e5\u6642 b tbeg delta ntdec_w * dt mag \u9707\u6e90\u30e2\u30fc\u30e1\u30f3\u30c8\u304b\u3089\u63db\u7b97\u3055\u308c\u308b M_W user0 , .., user5 \u9707\u6e90\u30ea\u30b9\u30c81\u884c\u76ee\u306e m_{xx}, m_{yy}, m_{zz}, m_{yz}, m_{xz}, m_{xy} user6 , user7 , user8 clon , clat , phi kstnm stnm stlo , stla , stdp \u89b3\u6e2c\u70b9\u4f4d\u7f6e\uff0e\u89b3\u6e2c\u70b9\u304c xy \u3067\u4e0e\u3048\u3089\u308c\u305f\u5834\u5408\u306b\u306f\u7def\u5ea6\u7d4c\u5ea6\u306b\u5909\u63db\u306e\u4e0a\u51fa\u529b\u3055\u308c\u308b\uff0e kcmpnm \u901f\u5ea6\u306e\u5834\u5408 Vx, Vy, Vz , \u5909\u4f4d\u306e\u5834\u5408 Ux, Uy, Uz cmpinc , cmpaz x, y \u306e\u65b9\u5411\u306b\u5fdc\u3058\u305f\u89b3\u6e2c\u70b9\u6975\u6027\u65b9\u5411 idep SAC\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5f93\u3044\uff0c\u901f\u5ea6\u6ce2\u5f62\u3067\u306f7, \u5909\u4f4d\u3067\u306f6\u304c\u683c\u7d0d\u3055\u308c\u308b Native\u5f62\u5f0f\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u306f\uff0c\u30d8\u30c3\u30c0\u60c5\u5831\uff0c\u69cb\u9020\uff08\u5730\u8868\u3067\u3042\u308c\u3070\u5730\u5f62\uff0c\u65ad\u9762\u3067\u3042\u308c\u3070\u901f\u5ea6\u69cb\u9020\uff09\uff0c\u7a7a\u9593\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u9806\u306b\u30c7\u30fc\u30bf\u304c\u683c\u7d0d\u3055\u308c\u308b\uff0e \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u30d8\u30c3\u30c0 \u00b6 var name type description bintype character(8) \"STREAMIO\" \u306b\u56fa\u5b9a codetype character(8) \u30b3\u30fc\u30c9\u7a2e\u5225\u306b\u3088\u308a \"SWPC_3D\" or \"SWPC_PV\" or \"SWPC_SH\" hdrver integer \u30d8\u30c3\u30c0\u30d0\u30fc\u30b8\u30e7\u30f3\uff0e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u308a\u30d8\u30c3\u30c0\u5185\u5bb9\u304c\u7570\u306a\u308b\u53ef\u80fd\u6027\u3042\u308a\uff0e title character(80) \u5b9f\u884c\u540d\uff0e exedate integer \u5b9f\u884c\u65e5\u6642\uff0ePOSIX TIME\u3067\u4e0e\u3048\u308b\uff0e coordinate character(2) \u65ad\u9762\u6210\u5206\uff0e 'xy' , 'xz' , 'fs' , 'ob' \u306a\u3069\uff0e datatype character(2) \u30c7\u30fc\u30bf\u7a2e\u5225\uff0e 'ps' or 'v2' or 'v3' ns1,ns2 integer \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u5404\u8fba\u306e\u30c7\u30fc\u30bf\u6570 beg1,beg2 real \u5404\u8fba\u306e\u59cb\u70b9\u5ea7\u6a19\u5024 ds1,ds2 real \u30b0\u30ea\u30c3\u30c9\u9593\u9694 dt real \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u6642\u9593\u9593\u9694 na1,na2 real \u5438\u53ce\u5883\u754c\u9818\u57df\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u30b0\u30ea\u30c3\u30c9\u6570 nmed integer \u5a92\u8cea\u30c7\u30fc\u30bf\u306e\u500b\u6570 nsnp integer 1\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u3042\u305f\u308a\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u679a\u6570 clon,clat real \u5ea7\u6a19\u4e2d\u5fc3\u7def\u5ea6\u7d4c\u5ea6 v1,v2,v3 real \u4e88\u5099\uff0e\u672c\u30b3\u30fc\u30c9\u3067\u306f\u5229\u7528\u3057\u306a\u3044\uff0e SAC \u30d8\u30c3\u30c0\u306e\u5909\u66f4 SAC \u30d8\u30c3\u30c0\u306e\u3046\u3061\uff0c evdp \u306f\u5f93\u6765\u306f m \u5358\u4f4d\u3067\u3042\u3063\u305f\u304c\uff0cOpenSWPC Version 5.0 \u4ee5\u964d\u306f km \u306e\u5358\u4f4d\u3092\u53d6\u308b\u3088\u3046\u306b\u5909\u66f4\u3055\u308c\u305f\uff0e \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3068\u3057\u3066 NetCDF \u5f62\u5f0f\u3092\u7528\u3044\u305f\u5834\u5408\u3082\uff0c\u3053\u306e\u8868\u306b\u76f8\u5f53\u3059\u308b global attributes \u304c\u8a2d\u5b9a\u3055\u308c\u308b\uff0e\u305d\u306e\u307b\u304b\u306f NetCDF \u306e COARDS\u898f\u7d04 \u304a\u3088\u3073\u4e00\u90e8 CF\u62e1\u5f35 \u306b\u5f93\u3046\uff0e\u3053\u306e\u898f\u7d04\u306b\u5f93\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u3088\u308a\uff0c OpenSWPC \u306b\u3088\u308a\u51fa\u529b\u3055\u308c\u305f NetCDF \u30d5\u30a1\u30a4\u30eb\u306f\uff0c\u540c\u5f62\u5f0f\u3092\u8aad\u307f\u8fbc\u3081\u308b\u591a\u304f\u306e\u79d1\u5b66\u7684\u53ef\u8996\u5316\u30c4\u30fc\u30eb\uff08\u305f\u3068\u3048\u3070ParaView\uff0cPanoply\u3084GMT\u306a\u3069\uff09\u3067\u305d\u306e\u307e\u307e\u8aad\u307f\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u51fa\u529b \u00b6 3\u6b21\u5143\u7a7a\u9593\u306e\u3046\u3061\uff0c xy , yz , xz \u305d\u308c\u305e\u308c\u306e\u65b9\u5411\u306e\u6c34\u5e73\u65ad\u9762\u3068\u5730\u8868\u9762\uff08 fs \uff09\u30fb\u6d77\u5e95\u9762\uff08 ob \uff09\u306b\u6cbf\u3063\u305f\u9762\u306e\u6ce2\u52d5\u5834\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3092\u51fa\u529b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u51fa\u529b\u53ef\u80fd\u306a\u306e\u306f\u901f\u5ea6\u632f\u5e45\uff08 v \uff09, \u5909\u4f4d\u632f\u5e45\uff08 u \uff09\u304a\u3088\u3073\u901f\u5ea6\u632f\u5e45\u306e\u767a\u6563\u3068\u56de\u8ee2\uff08 ps \uff09\u306e3\u7a2e\u985e\u3067\u3042\u308b\uff0e \u3059\u3079\u3066\u306e\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u306b\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u3059\u308b\u306e\u306f\u30c7\u30fc\u30bf\u5bb9\u91cf\u3068\u5165\u51fa\u529b\u6642\u9593\u304b\u3089\u73fe\u5b9f\u7684\u3067\u306f\u306a\u3044\u305f\u3081\uff0c\u6642\u9593\u3068\u7a7a\u9593\u306e\u4e21\u65b9\u306b\u9593\u5f15\u304d\u8981\u7d20\u3092\u5c0e\u5165\u3057\u3066\u3044\u308b\uff0e \u6642\u9593\u306b\u3064\u3044\u3066\u306f\u7a4d\u5206\u958b\u59cb\u6642\u9593\u3092\u59cb\u70b9\u3068\u3057\u3066\uff0c ntdec_s \u30b9\u30c6\u30c3\u30d7\u6bce\u306b\u51fa\u529b\u3092\u884c\u3046\uff0e\u7a7a\u9593\u306b\u3064\u3044\u3066\u306f\uff0c\u6307\u5b9a\u3055\u308c\u305f x , y , z \u65b9\u5411\u306e\u9593\u5f15\u304d\u9593\u9694 idec , jdec , kdec \u306b\u3088\u308a\u9593\u5f15\u304d\u304c\u884c\u308f\u308c\u308b\uff08\u4e0b\u56f3\uff09 \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u9593\u5f15\u304d\u306e\u6a21\u5f0f\u56f3 \u4e38\u5370\u304c i \u65b9\u5411\u306e\u5ea7\u6a19\u30b0\u30ea\u30c3\u30c9\u3067\uff0c\u70b9\u7dda\u304cMPI\u306e\u30c9\u30e1\u30a4\u30f3\u5883\u754c\u3092\u793a\u3059\uff0e\u9593\u5f15\u304d\u8981\u7d20\u306fidec=3\u306e\u5834\u5408\u3092\u793a\u3057\u3066\u3044\u308b\uff0e\u9752\u8272\u306b\u5857\u308a\u3064\u3076\u3055\u308c\u305f\u30b0\u30ea\u30c3\u30c9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u304c\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b\uff0e \u3053\u306e\u3068\u304d\uff0c\u5404MPI\u30ce\u30fc\u30c9\u5185\u3067\u51fa\u529b\u3055\u308c\u308b\u30b0\u30ea\u30c3\u30c9\u70b9\u6570\u306f\u4e00\u5b9a\u3068\u306f\u9650\u3089\u306a\u3044\uff08\u4e00\u5b9a\u3068\u306a\u308b\u3088\u3046\u306b\u51fa\u529b\u9593\u9694\u3084\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u3092\u8abf\u6574\u3059\u308b\u5fc5\u8981\u306f\u7121\u3044\uff09\uff0e \u30c7\u30fc\u30bf\u306f\u3059\u3079\u3066\u7279\u5b9a\u306e\u30ce\u30fc\u30c9\u306b\u96c6\u7d04\u3055\u308c\u3066\uff0c snp_format \u30d1\u30e9\u30e1\u30bf\u306e\u5024\u306b\u3088\u308a\uff0c\u72ec\u81ea\u5f62\u5f0f\uff08 native \uff09\u3082\u3057\u304f\u306f NetCDF \u5f62\u5f0f\u306e\u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b\uff0e\u30c7\u30fc\u30bf\u51fa\u529b\u306b\u4f34\u3046\u8ca0\u8377\u3092\u5206\u6563\u3059\u308b\u305f\u3081\uff0c\u51fa\u529b\u3092\u884c\u3046\u30ce\u30fc\u30c9\u306f\u6b21\u8868\u306e\u3088\u3046\u306b\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u7a2e\u5225\u6bce\u306b\u7570\u306a\u3063\u3066\u3044\u308b\uff0e section type node yz PS 0 xz PS mod(1, nproc) xy PS mod(2, nproc) fs PS mod(3, nproc) ob PS mod(4, nproc) yz V mod(5, nproc) xz V mod(6, nproc) xy V mod(7, nproc) fs V mod(8, nproc) ob V mod(9, nproc) yz U mod(10, nproc) xz U mod(11, nproc) xy U mod(12, nproc) fs U mod(13, nproc) ob U mod(14, nproc) \u5165\u529b\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u306f\u5404\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u65ad\u9762\u306e\u51fa\u529b\u306e\u6709\u7121\u3084\u9593\u5f15\u304d\u8981\u7d20\u3092\u5236\u5fa1\u3059\u308b\uff0e\u306a\u304a\uff0c2\u6b21\u5143SH\u8a08\u7b97\u3067\u306f1\u6210\u5206\u3057\u304b\u306a\u3044\u305f\u3081P\u6ce2S\u6ce2\u51fa\u529b\u306f\u751f\u6210\u3055\u308c\u306a\u3044\uff0e Parameters snp_format \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff0e \"native\" \uff08Fortran\u72ec\u81ea\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff0c\u975e\u63a8\u5968\uff09\u3082\u3057\u304f\u306f \"netcdf\" \uff08 NetCDF \u5f62\u5f0f\uff0e\u63a8\u5968\uff09\u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3059\u308b\uff0e xy_ps%sw , xz_ps%sw , yz_ps%sw , fs_ps%sw , ob_ps%sw \u5404\u65ad\u9762\u3067\u306ePS\u632f\u5e45\uff08 \\text{div}(\\mathbf{v}) , \\text{rot}(\\mathbf{v}) \uff09\u306e\u51fa\u529b\u30b9\u30a4\u30c3\u30c1\uff0e xy_v3%sw , xz_v3%sw , yz_v3%sw , fs_v3%sw , ob_v3%sw \u5404\u65ad\u9762\u3067\u306e3\u6210\u5206\u901f\u5ea6\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u51fa\u529b\u30b9\u30a4\u30c3\u30c1\uff0e xy_u3%sw , xz_u3%sw , yz_u3%sw , fs_u3%sw , ob_u3%sw \u5404\u65ad\u9762\u3067\u306e3\u6210\u5206\u5909\u4f4d\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u51fa\u529b\u30b9\u30a4\u30c3\u30c1\uff0e z0_xy xy\u65ad\u9762\u3092\u51fa\u529b\u3059\u308b\u6df1\u3055 (km) x0_yz yz\u65ad\u9762\u3092\u51fa\u529b\u3059\u308bx\u5ea7\u6a19\u4f4d\u7f6e (km) y0_xz xz\u65ad\u9762\u3092\u51fa\u529b\u3059\u308by\u5ea7\u6a19\u4f4d\u7f6e (km) ntdec_s \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u51fa\u529b\u306e\u6642\u9593\u9593\u5f15\u304d\u8981\u7d20\uff0e\u8a08\u7b97\u6642\u9593\u30b9\u30c6\u30c3\u30d7 ntdec_s \u56de\u306b1\u5ea6\u51fa\u529b\u3055\u308c\u308b\uff0e idec , jdec , kdec \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u51fa\u529b\u306e x , y , z \u65b9\u5411\u306e\u7a7a\u9593\u9593\u5f15\u304d\u8981\u7d20\uff0e \u5730\u9707\u6ce2\u5f62\u51fa\u529b \u00b6 \u6ce2\u5f62\u51fa\u529b\u30aa\u30d7\u30b7\u30e7\u30f3\u304c sw_wav_v=.true. \u3082\u3057\u304f\u306f sw_wav_u=.true. \u306e\u5834\u5408\uff0c\u89b3\u6e2c\u70b9\u306b\u304a\u3051\u308b\u901f\u5ea6\u3084\u5909\u4f4d\u306e\u6642\u7cfb\u5217\u3092 SAC \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u6ce2\u5f62\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\uff0e \u5909\u4f4d\u8a08\u7b97\u306e\u305f\u3081\u306e\u6642\u9593\u7a4d\u5206\u306f\u51fa\u529b\u6642\u306e\u6642\u9593\u9593\u5f15\u304d\u3092\u884c\u3046\u524d\u306b\u5b9f\u884c\u3055\u308c\u308b\u305f\u3081\uff0c\u6642\u9593\u9593\u5f15\u304d\u5f8c\u306e\u901f\u5ea6\u6ce2\u5f62\u3092\u7a4d\u5206\u3059\u308b\u3088\u308a\u3082\u9ad8\u7cbe\u5ea6\u3067\u3042\u308b\uff0e \u8a08\u7b97\u4e2d\u306f\u5730\u9707\u6ce2\u5f62\u306f\u30e1\u30e2\u30ea\u4e0a\u306b\u4fdd\u6301\u3055\u308c\uff0c\u8a08\u7b97\u7d42\u4e86\u6642\u306b\u307e\u3068\u3081\u3066\u51fa\u529b\u3055\u308c\u308b\uff0e\u8a08\u7b97\u3092\u4e2d\u65ad\u3057\u305f\u5834\u5408\u306b\u306f\u6ce2\u5f62\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\uff0e \u89b3\u6e2c\u70b9\u4f4d\u7f6e\u306f\u8a08\u7b97\u5ea7\u6a19\u7cfb( xy )\u304b\u5730\u7406\u5ea7\u6a19\u7cfb( ll )\u304b\u3044\u305a\u308c\u304b\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff08\u4e0b\u8868\uff09\u3067\u4e0e\u3048\u308b\uff0e Type Format 'xy' x y z name zsw 'll' lon lat z name zsw \u8907\u6570\u306e\u89b3\u6e2c\u70b9\u306b\u304a\u3051\u308b\u51fa\u529b\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\uff0c\u89b3\u6e2c\u70b9\u4f4d\u7f6e\u30d5\u30a1\u30a4\u30eb\u306b\u6539\u884c\u533a\u5207\u308a\u89b3\u6e2c\u70b9\u3092\u52a0\u3048\u3066\u3044\u3051\u3070\u3088\u3044\uff0e\u305f\u3060\u3057\uff0c \u2019xy\u2019 \u3068 \u2019ll\u2019 \u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u6df7\u305c\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\uff0e\u89b3\u6e2c\u70b9\u6570\u306f\u81ea\u52d5\u7684\u306b\u30ab\u30a6\u30f3\u30c8\u3055\u308c\uff0c\u305d\u306e\u3046\u3061\u8a08\u7b97\u30e2\u30c7\u30eb\u5185\u306b\u3042\u308b\u89b3\u6e2c\u70b9\u306e\u307f\u304c\u51fa\u529b\u3055\u308c\u308b\uff0e` \u89b3\u6e2c\u70b9\u306e\u6df1\u3055\u306f\uff0c\u5165\u529b zsw \u306b\u3088\u3063\u3066\u6b21\u306e\u8868\u306e\u3088\u3046\u306b\u5909\u5316\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u5730\u8868\u3084\u6d77\u5e95\u306e\u5f62\u72b6\u306f\u30b0\u30ea\u30c3\u30c9\u306b\u6cbf\u3063\u305f\u968e\u6bb5\u72b6\u306b\u96e2\u6563\u5316\u3055\u308c\u308b\u305f\u3081\uff0c\u89b3\u6e2c\u70b9\u306e\u6df1\u3055\u304b\u3089\u76f4\u63a5\u5909\u63db\u3059\u308b\uff08 zsw=\u2019dep\u2019 \uff09\u3068\uff0c\u89b3\u6e2c\u70b9\u304c\u610f\u56f3\u305b\u305a\u306b\u7a7a\u4e2d\u306b\u98db\u3073\u51fa\u3057\uff0c\u610f\u56f3\u3057\u305f\u7d50\u679c\u304c\u5f97\u3089\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308b\uff0e \u6d77\u5e95\u306e\u89b3\u6e2c\u70b9\u306e\u5834\u5408\u306b\u306f\uff0c\u6ce2\u5f62\u51fa\u529b\u306e\u4f4d\u7f6e\u304c\u6d77\u5e95\u306e\u56fa\u4f53\u5074\u306b\u3042\u308b\u304b\u6d77\u4e2d\u5074\u306b\u3042\u308b\u304b\u306b\u3088\u3063\u3066\uff0c\u305d\u306e\u6c34\u5e73\u52d5\u632f\u5e45\u304c\u5927\u304d\u304f\u7570\u306a\u308b\uff0e \u305d\u3053\u3067\uff0c zsw \u306e\u5024\u306e\u6307\u5b9a\u306b\u3088\u308a\uff0c\u6d77\u9762\u4e0a\u306e\u89b3\u6e2c\u70b9\u3084\u6d77\u5e95\uff0c\u306a\u3089\u3073\u306b\u6d77\u5e95\u306e\u5e95\u306e\u89b3\u6e2c\u70b9\u3092\u305d\u308c\u305e\u308c\u6a21\u64ec\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u7279\u6bb5\u306e\u4e8b\u60c5\u304c\u7121\u3044\u9650\u308a\uff0c zsw = \u2019obb\u2019 \u3068\u3057\u3066\u304a\u304f\u306e\u304c\u826f\u3044\uff0e zsw \u89b3\u6e2c\u70b9\u6df1\u3055 \u2019dep\u2019 \u4e0e\u3048\u3089\u308c\u305fzst\u304b\u3089\u8a08\u7b97 \u2019fsb\u2019 \u5730\u8868\u30fb\u6d77\u9762\u30b0\u30ea\u30c3\u30c9\u306e\u4e00\u3064\u4e0b \u2019obb\u2019 \u5730\u8868\u30fb\u6d77\u5e95\u30b0\u30ea\u30c3\u30c9\u306e\u4e00\u3064\u4e0b \u2019oba\u2019 \u5730\u8868\u30fb\u6d77\u9762\u30b0\u30ea\u30c3\u30c9\u306e\u4e00\u3064\u4e0a \u2019bdi\u2019 (i=0, \\cdots, 9) \u901f\u5ea6\u69cb\u9020\u30e2\u30c7\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u308b i \u756a\u76ee\u306e\u5185\u90e8\u5883\u754c Parameters sw_wav_v , sw_wav_u \u901f\u5ea6(v)\u30fb\u5909\u4f4d(u)\u6ce2\u5f62\u306e\u51fa\u529b\u30b9\u30a4\u30c3\u30c1\uff0e ntdec_w \u6ce2\u5f62\u51fa\u529b\u306e\u6642\u9593\u9593\u5f15\u304d\u9593\u9694\uff0e1\u3067\u5168\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u306e\u8a18\u9332\u3092\u51fa\u529b\u3059\u308b\uff0e st_format \u89b3\u6e2c\u70b9\u4f4d\u7f6e\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff0e'xy'\u306a\u3089\u8a08\u7b97\u5ea7\u6a19\uff0c'll'\u306a\u3089\u5730\u7406\u5ea7\u6a19\u30e2\u30fc\u30c9\uff0e fn_stloc \u89b3\u6e2c\u70b9\u30d5\u30a1\u30a4\u30eb\u540d\uff0e wav_format \u6ce2\u5f62\u30d5\u30a1\u30a4\u30eb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff0e\u901a\u5e38\u306f \u2019sac\u2019 \u3072\u305a\u307f\u30fb\u5fdc\u529b\u6ce2\u5f62\u51fa\u529b \u00b6 \u901f\u5ea6\u3084\u5909\u4f4d\u6ce2\u5f62\u3068\u540c\u69d8\u306b\uff0c sw_wav_strain = .true. \u3068\u3059\u308b\u3053\u3068\u3067\u3072\u305a\u307f\u6ce2\u5f62\u3092\uff0c sw_wav_stress = .true. \u3068\u3059\u308b\u3053\u3068\u3067\u5fdc\u529b\u6ce2\u5f62\u3092\uff0c\u305d\u308c\u305e\u308cSAC\u5f62\u5f0f\u306e\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff08 Experimental; new in version 5.0 )\uff0e\u89b3\u6e2c\u70b9\u4f4d\u7f6e\u306e\u6307\u5b9a\u306f\u901f\u5ea6\u30fb\u5909\u4f4d\u3068\u540c\u3058\u3067\u3042\u308b\uff0e\u51fa\u529b\u5358\u4f4d\u306f\u6b6a\u306f\u7121\u6b21\u5143\uff0c\u5fdc\u529b\u306f[Pa]\u3067\u3042\u308b\uff0e CSF format \u00b6 \u6ce2\u5f62\u51fa\u529b\u306f\u539f\u5247\u3068\u3057\u3066 SAC \u5f62\u5f0f\u3067\u3042\u308b\u304c\uff0c\u30b7\u30b9\u30c6\u30e0\u304c\u3042\u307e\u308a\u306b\u3082\u5927\u91cf\u306e\u6ce2\u5f62\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3059\u308b\u3053\u3068\u306b\u8010\u3048\u3089\u308c\u306a\u3044\u30b1\u30fc\u30b9\u304c\u3042\u308b\uff0e\u307e\u305f\uff0c\u5927\u91cf\u306e\u5c0f\u30b5\u30a4\u30ba\u30d5\u30a1\u30a4\u30eb\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u901a\u3058\u305f\u30c7\u30fc\u30bf\u306e\u8ee2\u9001\u306b\u3082\u4e0d\u5411\u304d\u3067\u3042\u308b\uff0e\u305d\u3053\u3067\uff0cVersion 3.0\u4ee5\u964d\u3067\u306f\u30d1\u30e9\u30e1\u30bf wav_format = \u2019csf\u2019 \u304c\u6307\u5b9a\u3055\u308c\u308b\u3068\uff0c SAC \u30d5\u30a1\u30a4\u30eb\u3092\u8907\u6570\u89b3\u6e2c\u70b9\u30fb\u6210\u5206\u306b\u3064\u3044\u3066\u5358\u4e00\u30d5\u30a1\u30a4\u30eb\u306b\u7d50\u5408\u3057\u305fcsf\u30d5\u30a1\u30a4\u30eb\uff08\u72ec\u81ea\u5f62\u5f0f\uff09\u306e\u51fa\u529b\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\uff0e csf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\uff0cSAC\u5f62\u5f0f\u306e\u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u3092\u5358\u7d14\u7d50\u5408\u3057\u305f\u3082\u306e\u306e\u5148\u982d\u306b3\u3064\u306e4\u30d0\u30a4\u30c8\u5b9f\u6570\u3092\u30d8\u30c3\u30c0\u3068\u3057\u3066\u4ed8\u52a0\u3057\u305f\u3060\u3051\u306e\u5358\u7d14\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3042\u308b\uff0e\u30d8\u30c3\u30c0\u306f\u4ee5\u4e0b\u306e\u69cb\u6210\u8981\u7d20\u304b\u3089\u306a\u308b\uff0e CSF header format identifier 4\u6587\u5b57 'CSFD' ntrace \u30d5\u30a1\u30a4\u30eb\u5185\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u6ce2\u5f62\u306e\u6570 npts \u4e00\u3064\u4e00\u3064\u306e\u6ce2\u5f62\u306e\u6642\u9593\u30b5\u30f3\u30d7\u30eb\u6570 \u30d5\u30a1\u30a4\u30eb\u306b\u542b\u307e\u308c\u308b\u6ce2\u5f62\u306e\u30b5\u30f3\u30d7\u30eb\u6570\u306f\u3059\u3079\u3066\u7b49\u3057\u3044\u3053\u3068\u304c\u4eee\u5b9a\u3055\u308c\u3066\u3044\u308b\uff0ecsf\u51fa\u529b\u304c\u9078\u629e\u3055\u308c\u305f\u5834\u5408\uff0c\u4e26\u5217\u8a08\u7b97\u306e\u30ce\u30fc\u30c9\u6bce\u306b\uff0c\u305d\u306e\u30ce\u30fc\u30c9\u306b\u542b\u307e\u308c\u308b\u89b3\u6e2c\u70b9\u306e\u540c\u3058\u6210\u5206\u306e\u6ce2\u5f62\u304c\u4e00\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u307e\u3068\u3081\u3089\u308c\u3066\u51fa\u529b\u3055\u308c\u308b\uff0e \u5927\u91cf\u306e\u6ce2\u5f62\u51fa\u529b \u5927\u898f\u6a21\u30b9\u30fc\u30d1\u30fc\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b7\u30b9\u30c6\u30e0\u306b\u304a\u3044\u3066\u306f\uff0c\u4e26\u5217\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0lustre\u304c\u63a1\u7528\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u3042\u308b\uff08\u305f\u3068\u3048\u3070\u6771\u4eac\u5927\u5b66Oakforest\u306a\u3069\uff09\uff0eLustre\u306f\u5c0f\u3055\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u591a\u6570\u6271\u3046\u3053\u3068\u3092\u3084\u3084\u82e6\u624b\u306b\u3057\u3066\u304a\u308a\uff0cSAC\u5f62\u5f0f\u3067\u5927\u91cf\u306e\u6ce2\u5f62\u3092\u51fa\u529b\u3059\u308b\u3068\uff0c\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u843d\u3061\u308b\u3053\u3068\u304c\u3042\u308b\uff0e\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u306f\uff0cCSF\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u3088\u3046\u306a\u7d50\u5408\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u4fbf\u5229\u3067\u3042\u308b\uff0e \u8ddd\u96e2\u4fdd\u5b58\u30e2\u30fc\u30c9 \u00b6 OpenSWPC \u306f\u89b3\u6e2c\u70b9\u4f4d\u7f6e\u3092 stlo \uff0c stla \u306eSAC\u30d8\u30c3\u30c0\u3092\u901a\u3058\u3066\u4fdd\u5b58\u3059\u308b\u304c\uff0c xy \u5ea7\u6a19\u7cfb\u3067\u89b3\u6e2c\u70b9\u4f4d\u7f6e\u3092\u4e0e\u3048\u3066\u304b\u3064\u6975\u7aef\u306b\u9577\u8ddd\u96e2\u306e\u6e2c\u7dda\u3067\u306e\u8a08\u7b97\u306e\u5834\u5408\uff0c\u7def\u5ea6\u7d4c\u5ea6\u5909\u63db\uff08\u5730\u56f3\u6295\u5f71\uff09\u306b\u3088\u308b\u8aa4\u5dee\u304c\u7121\u8996\u3067\u304d\u306a\u3044\uff0e\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30bf\u3092\u8a2d\u5b9a\u3059\u308b\u3068\uff0c\u8ddd\u96e2\u3092 SAC \u30d8\u30c3\u30c0\u306e dist \u306b\u4fdd\u5b58\u3057\uff0c\u304b\u3064\u305d\u308c\u3092 SAC \u306b\u4e0a\u66f8\u304d\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u3067\u304d\u308b\uff0e Parameters wav_calc_dist .true. \u306e\u3068\u304d\u9707\u592e\u8ddd\u96e2\u3092SAC\u30c7\u30fc\u30bf\u306b\u4fdd\u5b58\u3059\u308b\uff0e \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d \u00b6 \u8a08\u7b97\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u51fa\u529b\u3055\u308c\u308b\uff0e \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8 \u2006\u2006\u2006 (odir)/(title).(section).(type).(ext) \u6ce2\u5f62(SAC) \u2006\u2006\u2006 (odir)/wav/(title).(stnm).(component).sac \u6ce2\u5f62(CSF) (odir)/wav/(title).(node-ID).(component).csf \u8a08\u7b97\u6642\u9593 \u2006\u2006 (odir)/wav/(title).tim \u3053\u3053\u3067\uff0c (section) \u306f\u51fa\u529b\u65ad\u9762\u3092\u8868\u30592\u6587\u5b57\u3067\uff0c\u7279\u5b9a\u4f4d\u7f6e\u306e\u65ad\u9762\u3067\u3042\u308c\u3070 xy , yz \u306a\u3069\u3068\u8868\u3059\uff0e \u5730\u8868\u9762\u3068\u6d77\u5e95\u306f\u305d\u308c\u305e\u308c fs \uff08Free Surface\uff09\u306a\u3089\u3073\u306b ob \uff08Ocean Bottom\uff09\u3067\u8868\u3055\u308c\u308b\uff0e (type) \u306f\u901f\u5ea6\u632f\u5e45\u304bP\u6ce2\u30fbS\u6ce2\uff08div, rot\uff09\u304b\u306b\u3088\u3063\u3066 v \u3082\u3057\u304f\u306f ps \u3092\u53d6\u308b\uff0e (component) \u306f\u901f\u5ea6\u304b\u5909\u4f4d\u304b\u306b\u5fdc\u3058\u3066 Vx , Vy , Vz \u3042\u308b\u3044\u306f Ux , Uy , Uz \u3092\u53d6\u308b\uff0e \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u62e1\u5f35\u5b50 (ext) \u306fNetCDF\u5f62\u5f0f\u3067 nc \uff0cnative\u5f62\u5f0f\u3067 snp \u3067\u3042\u308b\uff0e","title":"\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u306e\u8a2d\u5b9a"},{"location":"ja/2._Parameters/0205_output/#_1","text":"","title":"\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u306e\u8a2d\u5b9a"},{"location":"ja/2._Parameters/0205_output/#_2","text":"\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u306b\u306f\uff0cFortran\u306eStream I/O\u6a5f\u80fd\u3092\u7528\u3044\u305f\u72ec\u81ea\u5f62\u5f0f\uff08\u4ee5\u4e0bnative\u5f62\u5f0f\uff1b\u65e7\u5f62\u5f0f\u306e\u305f\u3081\u975e\u63a8\u5968\uff09\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3082\u3057\u304f\u306f NetCDF \u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\uff08\u63a8\u5968\uff09\u3092\u9078\u629e\u3067\u304d\u308b\uff0e\u6ce2\u5f62\u51fa\u529b\u306f SAC \u5f62\u5f0f\u3067\u884c\u308f\u308c\u308b\uff0e \u51fa\u529b\u306b\u969b\u3057\u3066\u660e\u793a\u7684\u306a\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u5909\u63db\u306f\u884c\u308f\u306a\u3044\u305f\u3081\uff0c\u751f\u6210\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u306f\u5b9f\u884c\u74b0\u5883\u306e\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u306b\u4f9d\u5b58\u3059\u308b\uff0e \u3057\u304b\u3057\uff0cSAC\u304a\u3088\u3073NetCDF\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u306b\u4f9d\u5b58\u305b\u305a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u305f\u3081\uff0c\u3053\u308c\u3089\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u4f7f\u3063\u3066\u3044\u308b\u9650\u308a\uff0c\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u306b\u3064\u3044\u3066\u610f\u8b58\u3059\u308b\u5fc5\u8981\u306f\u307b\u3068\u3093\u3069\u7121\u3044\uff0e \u72ec\u81ea\u5f62\u5f0f\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306f\uff0c\u958b\u767a\u306e\u90fd\u5408\u3067\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5fae\u7d30\u306a\u5909\u66f4\u304c\u306a\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308b\uff0e \u5f8c\u65b9\u4e92\u63db\u6027\u306f\u78ba\u4fdd\u3055\u308c\u3066\u3044\u308b\u304c\uff0c\u540c\u3058\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30b3\u30fc\u30c9\u306b\u540c\u68b1\u3055\u308c\u3066\u3044\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u7d4c\u7531\u3067\u30c7\u30fc\u30bf\u3092\u8aad\u3080\u306e\u304c\u78ba\u5b9f\u3067\u3042\u308b\uff0e \u6ce2\u5f62\u51fa\u529b\u306eSAC\u30d5\u30a1\u30a4\u30eb\u306b\u306f\uff0cSAC\u3067\u5fc5\u9808\u3068\u3055\u308c\u308b\u6a19\u6e96\u7684\u306a\u30d8\u30c3\u30c0\u306e\u4ed6\uff0c\u4ee5\u4e0b\u306e\u8868\u306e\u30d8\u30c3\u30c0\u304c\u4ed8\u52a0\u3055\u308c\u308b\uff0e \u6ce2\u5f62\u8a18\u9332\u306e\u5358\u4f4d\u306f\uff0c SAC \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u6a19\u6e96\u306b\u5f93\u3044\uff0c\u901f\u5ea6\u306fnm/s, \u5909\u4f4d\u306fnm \u304c\u63a1\u7528\u3055\u308c\u3066\u3044\u308b\uff0e \u306a\u304a\uff0c\u6ce2\u5f62\u30fb\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3068\u3082\u6c34\u5e73\u6210\u5206\u306e\u65b9\u5411\u306f\u8a08\u7b97\u5ea7\u6a19\u7cfb\u306e x , y , z \u306b\u6e96\u305a\u308b\uff0e phi=0 \u3067\u3042\u308c\u3070 x , y \u306f\u305d\u308c\u305e\u308c\u5317\u30fb\u6771\u3067\u3042\u308b\u304c\uff0c\u8a08\u7b97\u5ea7\u6a19\u7cfb\u3092\u56de\u8ee2\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e\u3053\u306e\u5ea7\u6a19\u7cfb\u306e\u56de\u8ee2\u89d2\u306f\u51fa\u529b SAC \u30d5\u30a1\u30a4\u30eb\u30d8\u30c3\u30c0\u306ecmpaz\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u305f\u3081\uff0c SAC \u4e0a\u3067\u5bb9\u6613\u306b\u5317\u30fb\u6771\u3092\u6b63\u306b\u3059\u308b\u65b9\u5411\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u307e\u305f\uff0c\u6ce2\u5f62\u51fa\u529b\u306e\u925b\u76f4\u6210\u5206\u306b\u3064\u3044\u3066\u306f\uff0c\u6163\u4f8b\u306b\u5f93\u3044\u4e0a\u304c\u6b63\u306b\u306a\u308b\u3088\u3046\u306b\u53cd\u8ee2\u3055\u308c\u3066\u3044\u308b\uff0e\u4e00\u65b9\uff0c\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u901f\u5ea6\u51fa\u529b\u306e z \u6210\u5206\u306f\u8a08\u7b97\u5ea7\u6a19\u7cfb\uff08\u925b\u76f4\u4e0b\u65b9\u304c\u6b63\uff09\u306e\u307e\u307e\u3067\u3042\u308b\uff0e","title":"\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f"},{"location":"ja/2._Parameters/0205_output/#_3","text":"header name description kevnm title evlo , evla , evdp \u9707\u6e90\u30ea\u30b9\u30c8\u306e1\u884c\u76ee\u306e\u9707\u6e90\u4f4d\u7f6e\uff0e\u9707\u6e90\u4f4d\u7f6e\u304c\u30c7\u30ab\u30eb\u30c8\u5ea7\u6a19\u7cfb\u3067\u4e0e\u3048\u3089\u308c\u305f\u5834\u5408\u306b\u306f\u30d1\u30e9\u30e1\u30bf clon \u3068 clat \u3092\u3082\u3068\u306b\u7def\u5ea6\u7d4c\u5ea6\u5909\u63db\u3059\u308b\uff0e o \u9707\u6e90\u30ea\u30b9\u30c81\u884c\u76ee\u306e\u9707\u6e90\u7834\u58ca\u958b\u59cb\u6642\u9593\uff0e kzdate , kztime \u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u958b\u59cb\u65e5\u6642 b tbeg delta ntdec_w * dt mag \u9707\u6e90\u30e2\u30fc\u30e1\u30f3\u30c8\u304b\u3089\u63db\u7b97\u3055\u308c\u308b M_W user0 , .., user5 \u9707\u6e90\u30ea\u30b9\u30c81\u884c\u76ee\u306e m_{xx}, m_{yy}, m_{zz}, m_{yz}, m_{xz}, m_{xy} user6 , user7 , user8 clon , clat , phi kstnm stnm stlo , stla , stdp \u89b3\u6e2c\u70b9\u4f4d\u7f6e\uff0e\u89b3\u6e2c\u70b9\u304c xy \u3067\u4e0e\u3048\u3089\u308c\u305f\u5834\u5408\u306b\u306f\u7def\u5ea6\u7d4c\u5ea6\u306b\u5909\u63db\u306e\u4e0a\u51fa\u529b\u3055\u308c\u308b\uff0e kcmpnm \u901f\u5ea6\u306e\u5834\u5408 Vx, Vy, Vz , \u5909\u4f4d\u306e\u5834\u5408 Ux, Uy, Uz cmpinc , cmpaz x, y \u306e\u65b9\u5411\u306b\u5fdc\u3058\u305f\u89b3\u6e2c\u70b9\u6975\u6027\u65b9\u5411 idep SAC\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5f93\u3044\uff0c\u901f\u5ea6\u6ce2\u5f62\u3067\u306f7, \u5909\u4f4d\u3067\u306f6\u304c\u683c\u7d0d\u3055\u308c\u308b Native\u5f62\u5f0f\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u306f\uff0c\u30d8\u30c3\u30c0\u60c5\u5831\uff0c\u69cb\u9020\uff08\u5730\u8868\u3067\u3042\u308c\u3070\u5730\u5f62\uff0c\u65ad\u9762\u3067\u3042\u308c\u3070\u901f\u5ea6\u69cb\u9020\uff09\uff0c\u7a7a\u9593\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u9806\u306b\u30c7\u30fc\u30bf\u304c\u683c\u7d0d\u3055\u308c\u308b\uff0e","title":"\u6ce2\u5f62\u30d5\u30a1\u30a4\u30eb\u306e\u30d8\u30c3\u30c0"},{"location":"ja/2._Parameters/0205_output/#_4","text":"var name type description bintype character(8) \"STREAMIO\" \u306b\u56fa\u5b9a codetype character(8) \u30b3\u30fc\u30c9\u7a2e\u5225\u306b\u3088\u308a \"SWPC_3D\" or \"SWPC_PV\" or \"SWPC_SH\" hdrver integer \u30d8\u30c3\u30c0\u30d0\u30fc\u30b8\u30e7\u30f3\uff0e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u308a\u30d8\u30c3\u30c0\u5185\u5bb9\u304c\u7570\u306a\u308b\u53ef\u80fd\u6027\u3042\u308a\uff0e title character(80) \u5b9f\u884c\u540d\uff0e exedate integer \u5b9f\u884c\u65e5\u6642\uff0ePOSIX TIME\u3067\u4e0e\u3048\u308b\uff0e coordinate character(2) \u65ad\u9762\u6210\u5206\uff0e 'xy' , 'xz' , 'fs' , 'ob' \u306a\u3069\uff0e datatype character(2) \u30c7\u30fc\u30bf\u7a2e\u5225\uff0e 'ps' or 'v2' or 'v3' ns1,ns2 integer \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u5404\u8fba\u306e\u30c7\u30fc\u30bf\u6570 beg1,beg2 real \u5404\u8fba\u306e\u59cb\u70b9\u5ea7\u6a19\u5024 ds1,ds2 real \u30b0\u30ea\u30c3\u30c9\u9593\u9694 dt real \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u6642\u9593\u9593\u9694 na1,na2 real \u5438\u53ce\u5883\u754c\u9818\u57df\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u30b0\u30ea\u30c3\u30c9\u6570 nmed integer \u5a92\u8cea\u30c7\u30fc\u30bf\u306e\u500b\u6570 nsnp integer 1\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u3042\u305f\u308a\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u679a\u6570 clon,clat real \u5ea7\u6a19\u4e2d\u5fc3\u7def\u5ea6\u7d4c\u5ea6 v1,v2,v3 real \u4e88\u5099\uff0e\u672c\u30b3\u30fc\u30c9\u3067\u306f\u5229\u7528\u3057\u306a\u3044\uff0e SAC \u30d8\u30c3\u30c0\u306e\u5909\u66f4 SAC \u30d8\u30c3\u30c0\u306e\u3046\u3061\uff0c evdp \u306f\u5f93\u6765\u306f m \u5358\u4f4d\u3067\u3042\u3063\u305f\u304c\uff0cOpenSWPC Version 5.0 \u4ee5\u964d\u306f km \u306e\u5358\u4f4d\u3092\u53d6\u308b\u3088\u3046\u306b\u5909\u66f4\u3055\u308c\u305f\uff0e \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3068\u3057\u3066 NetCDF \u5f62\u5f0f\u3092\u7528\u3044\u305f\u5834\u5408\u3082\uff0c\u3053\u306e\u8868\u306b\u76f8\u5f53\u3059\u308b global attributes \u304c\u8a2d\u5b9a\u3055\u308c\u308b\uff0e\u305d\u306e\u307b\u304b\u306f NetCDF \u306e COARDS\u898f\u7d04 \u304a\u3088\u3073\u4e00\u90e8 CF\u62e1\u5f35 \u306b\u5f93\u3046\uff0e\u3053\u306e\u898f\u7d04\u306b\u5f93\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u3088\u308a\uff0c OpenSWPC \u306b\u3088\u308a\u51fa\u529b\u3055\u308c\u305f NetCDF \u30d5\u30a1\u30a4\u30eb\u306f\uff0c\u540c\u5f62\u5f0f\u3092\u8aad\u307f\u8fbc\u3081\u308b\u591a\u304f\u306e\u79d1\u5b66\u7684\u53ef\u8996\u5316\u30c4\u30fc\u30eb\uff08\u305f\u3068\u3048\u3070ParaView\uff0cPanoply\u3084GMT\u306a\u3069\uff09\u3067\u305d\u306e\u307e\u307e\u8aad\u307f\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e","title":"\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u30d8\u30c3\u30c0"},{"location":"ja/2._Parameters/0205_output/#_5","text":"3\u6b21\u5143\u7a7a\u9593\u306e\u3046\u3061\uff0c xy , yz , xz \u305d\u308c\u305e\u308c\u306e\u65b9\u5411\u306e\u6c34\u5e73\u65ad\u9762\u3068\u5730\u8868\u9762\uff08 fs \uff09\u30fb\u6d77\u5e95\u9762\uff08 ob \uff09\u306b\u6cbf\u3063\u305f\u9762\u306e\u6ce2\u52d5\u5834\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3092\u51fa\u529b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u51fa\u529b\u53ef\u80fd\u306a\u306e\u306f\u901f\u5ea6\u632f\u5e45\uff08 v \uff09, \u5909\u4f4d\u632f\u5e45\uff08 u \uff09\u304a\u3088\u3073\u901f\u5ea6\u632f\u5e45\u306e\u767a\u6563\u3068\u56de\u8ee2\uff08 ps \uff09\u306e3\u7a2e\u985e\u3067\u3042\u308b\uff0e \u3059\u3079\u3066\u306e\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u306b\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u3059\u308b\u306e\u306f\u30c7\u30fc\u30bf\u5bb9\u91cf\u3068\u5165\u51fa\u529b\u6642\u9593\u304b\u3089\u73fe\u5b9f\u7684\u3067\u306f\u306a\u3044\u305f\u3081\uff0c\u6642\u9593\u3068\u7a7a\u9593\u306e\u4e21\u65b9\u306b\u9593\u5f15\u304d\u8981\u7d20\u3092\u5c0e\u5165\u3057\u3066\u3044\u308b\uff0e \u6642\u9593\u306b\u3064\u3044\u3066\u306f\u7a4d\u5206\u958b\u59cb\u6642\u9593\u3092\u59cb\u70b9\u3068\u3057\u3066\uff0c ntdec_s \u30b9\u30c6\u30c3\u30d7\u6bce\u306b\u51fa\u529b\u3092\u884c\u3046\uff0e\u7a7a\u9593\u306b\u3064\u3044\u3066\u306f\uff0c\u6307\u5b9a\u3055\u308c\u305f x , y , z \u65b9\u5411\u306e\u9593\u5f15\u304d\u9593\u9694 idec , jdec , kdec \u306b\u3088\u308a\u9593\u5f15\u304d\u304c\u884c\u308f\u308c\u308b\uff08\u4e0b\u56f3\uff09 \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u9593\u5f15\u304d\u306e\u6a21\u5f0f\u56f3 \u4e38\u5370\u304c i \u65b9\u5411\u306e\u5ea7\u6a19\u30b0\u30ea\u30c3\u30c9\u3067\uff0c\u70b9\u7dda\u304cMPI\u306e\u30c9\u30e1\u30a4\u30f3\u5883\u754c\u3092\u793a\u3059\uff0e\u9593\u5f15\u304d\u8981\u7d20\u306fidec=3\u306e\u5834\u5408\u3092\u793a\u3057\u3066\u3044\u308b\uff0e\u9752\u8272\u306b\u5857\u308a\u3064\u3076\u3055\u308c\u305f\u30b0\u30ea\u30c3\u30c9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u304c\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b\uff0e \u3053\u306e\u3068\u304d\uff0c\u5404MPI\u30ce\u30fc\u30c9\u5185\u3067\u51fa\u529b\u3055\u308c\u308b\u30b0\u30ea\u30c3\u30c9\u70b9\u6570\u306f\u4e00\u5b9a\u3068\u306f\u9650\u3089\u306a\u3044\uff08\u4e00\u5b9a\u3068\u306a\u308b\u3088\u3046\u306b\u51fa\u529b\u9593\u9694\u3084\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u3092\u8abf\u6574\u3059\u308b\u5fc5\u8981\u306f\u7121\u3044\uff09\uff0e \u30c7\u30fc\u30bf\u306f\u3059\u3079\u3066\u7279\u5b9a\u306e\u30ce\u30fc\u30c9\u306b\u96c6\u7d04\u3055\u308c\u3066\uff0c snp_format \u30d1\u30e9\u30e1\u30bf\u306e\u5024\u306b\u3088\u308a\uff0c\u72ec\u81ea\u5f62\u5f0f\uff08 native \uff09\u3082\u3057\u304f\u306f NetCDF \u5f62\u5f0f\u306e\u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b\uff0e\u30c7\u30fc\u30bf\u51fa\u529b\u306b\u4f34\u3046\u8ca0\u8377\u3092\u5206\u6563\u3059\u308b\u305f\u3081\uff0c\u51fa\u529b\u3092\u884c\u3046\u30ce\u30fc\u30c9\u306f\u6b21\u8868\u306e\u3088\u3046\u306b\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u7a2e\u5225\u6bce\u306b\u7570\u306a\u3063\u3066\u3044\u308b\uff0e section type node yz PS 0 xz PS mod(1, nproc) xy PS mod(2, nproc) fs PS mod(3, nproc) ob PS mod(4, nproc) yz V mod(5, nproc) xz V mod(6, nproc) xy V mod(7, nproc) fs V mod(8, nproc) ob V mod(9, nproc) yz U mod(10, nproc) xz U mod(11, nproc) xy U mod(12, nproc) fs U mod(13, nproc) ob U mod(14, nproc) \u5165\u529b\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u306f\u5404\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u65ad\u9762\u306e\u51fa\u529b\u306e\u6709\u7121\u3084\u9593\u5f15\u304d\u8981\u7d20\u3092\u5236\u5fa1\u3059\u308b\uff0e\u306a\u304a\uff0c2\u6b21\u5143SH\u8a08\u7b97\u3067\u306f1\u6210\u5206\u3057\u304b\u306a\u3044\u305f\u3081P\u6ce2S\u6ce2\u51fa\u529b\u306f\u751f\u6210\u3055\u308c\u306a\u3044\uff0e Parameters snp_format \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff0e \"native\" \uff08Fortran\u72ec\u81ea\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff0c\u975e\u63a8\u5968\uff09\u3082\u3057\u304f\u306f \"netcdf\" \uff08 NetCDF \u5f62\u5f0f\uff0e\u63a8\u5968\uff09\u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3059\u308b\uff0e xy_ps%sw , xz_ps%sw , yz_ps%sw , fs_ps%sw , ob_ps%sw \u5404\u65ad\u9762\u3067\u306ePS\u632f\u5e45\uff08 \\text{div}(\\mathbf{v}) , \\text{rot}(\\mathbf{v}) \uff09\u306e\u51fa\u529b\u30b9\u30a4\u30c3\u30c1\uff0e xy_v3%sw , xz_v3%sw , yz_v3%sw , fs_v3%sw , ob_v3%sw \u5404\u65ad\u9762\u3067\u306e3\u6210\u5206\u901f\u5ea6\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u51fa\u529b\u30b9\u30a4\u30c3\u30c1\uff0e xy_u3%sw , xz_u3%sw , yz_u3%sw , fs_u3%sw , ob_u3%sw \u5404\u65ad\u9762\u3067\u306e3\u6210\u5206\u5909\u4f4d\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u51fa\u529b\u30b9\u30a4\u30c3\u30c1\uff0e z0_xy xy\u65ad\u9762\u3092\u51fa\u529b\u3059\u308b\u6df1\u3055 (km) x0_yz yz\u65ad\u9762\u3092\u51fa\u529b\u3059\u308bx\u5ea7\u6a19\u4f4d\u7f6e (km) y0_xz xz\u65ad\u9762\u3092\u51fa\u529b\u3059\u308by\u5ea7\u6a19\u4f4d\u7f6e (km) ntdec_s \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u51fa\u529b\u306e\u6642\u9593\u9593\u5f15\u304d\u8981\u7d20\uff0e\u8a08\u7b97\u6642\u9593\u30b9\u30c6\u30c3\u30d7 ntdec_s \u56de\u306b1\u5ea6\u51fa\u529b\u3055\u308c\u308b\uff0e idec , jdec , kdec \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u51fa\u529b\u306e x , y , z \u65b9\u5411\u306e\u7a7a\u9593\u9593\u5f15\u304d\u8981\u7d20\uff0e","title":"\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u51fa\u529b"},{"location":"ja/2._Parameters/0205_output/#_6","text":"\u6ce2\u5f62\u51fa\u529b\u30aa\u30d7\u30b7\u30e7\u30f3\u304c sw_wav_v=.true. \u3082\u3057\u304f\u306f sw_wav_u=.true. \u306e\u5834\u5408\uff0c\u89b3\u6e2c\u70b9\u306b\u304a\u3051\u308b\u901f\u5ea6\u3084\u5909\u4f4d\u306e\u6642\u7cfb\u5217\u3092 SAC \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u6ce2\u5f62\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\uff0e \u5909\u4f4d\u8a08\u7b97\u306e\u305f\u3081\u306e\u6642\u9593\u7a4d\u5206\u306f\u51fa\u529b\u6642\u306e\u6642\u9593\u9593\u5f15\u304d\u3092\u884c\u3046\u524d\u306b\u5b9f\u884c\u3055\u308c\u308b\u305f\u3081\uff0c\u6642\u9593\u9593\u5f15\u304d\u5f8c\u306e\u901f\u5ea6\u6ce2\u5f62\u3092\u7a4d\u5206\u3059\u308b\u3088\u308a\u3082\u9ad8\u7cbe\u5ea6\u3067\u3042\u308b\uff0e \u8a08\u7b97\u4e2d\u306f\u5730\u9707\u6ce2\u5f62\u306f\u30e1\u30e2\u30ea\u4e0a\u306b\u4fdd\u6301\u3055\u308c\uff0c\u8a08\u7b97\u7d42\u4e86\u6642\u306b\u307e\u3068\u3081\u3066\u51fa\u529b\u3055\u308c\u308b\uff0e\u8a08\u7b97\u3092\u4e2d\u65ad\u3057\u305f\u5834\u5408\u306b\u306f\u6ce2\u5f62\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\uff0e \u89b3\u6e2c\u70b9\u4f4d\u7f6e\u306f\u8a08\u7b97\u5ea7\u6a19\u7cfb( xy )\u304b\u5730\u7406\u5ea7\u6a19\u7cfb( ll )\u304b\u3044\u305a\u308c\u304b\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff08\u4e0b\u8868\uff09\u3067\u4e0e\u3048\u308b\uff0e Type Format 'xy' x y z name zsw 'll' lon lat z name zsw \u8907\u6570\u306e\u89b3\u6e2c\u70b9\u306b\u304a\u3051\u308b\u51fa\u529b\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\uff0c\u89b3\u6e2c\u70b9\u4f4d\u7f6e\u30d5\u30a1\u30a4\u30eb\u306b\u6539\u884c\u533a\u5207\u308a\u89b3\u6e2c\u70b9\u3092\u52a0\u3048\u3066\u3044\u3051\u3070\u3088\u3044\uff0e\u305f\u3060\u3057\uff0c \u2019xy\u2019 \u3068 \u2019ll\u2019 \u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u6df7\u305c\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\uff0e\u89b3\u6e2c\u70b9\u6570\u306f\u81ea\u52d5\u7684\u306b\u30ab\u30a6\u30f3\u30c8\u3055\u308c\uff0c\u305d\u306e\u3046\u3061\u8a08\u7b97\u30e2\u30c7\u30eb\u5185\u306b\u3042\u308b\u89b3\u6e2c\u70b9\u306e\u307f\u304c\u51fa\u529b\u3055\u308c\u308b\uff0e` \u89b3\u6e2c\u70b9\u306e\u6df1\u3055\u306f\uff0c\u5165\u529b zsw \u306b\u3088\u3063\u3066\u6b21\u306e\u8868\u306e\u3088\u3046\u306b\u5909\u5316\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u5730\u8868\u3084\u6d77\u5e95\u306e\u5f62\u72b6\u306f\u30b0\u30ea\u30c3\u30c9\u306b\u6cbf\u3063\u305f\u968e\u6bb5\u72b6\u306b\u96e2\u6563\u5316\u3055\u308c\u308b\u305f\u3081\uff0c\u89b3\u6e2c\u70b9\u306e\u6df1\u3055\u304b\u3089\u76f4\u63a5\u5909\u63db\u3059\u308b\uff08 zsw=\u2019dep\u2019 \uff09\u3068\uff0c\u89b3\u6e2c\u70b9\u304c\u610f\u56f3\u305b\u305a\u306b\u7a7a\u4e2d\u306b\u98db\u3073\u51fa\u3057\uff0c\u610f\u56f3\u3057\u305f\u7d50\u679c\u304c\u5f97\u3089\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308b\uff0e \u6d77\u5e95\u306e\u89b3\u6e2c\u70b9\u306e\u5834\u5408\u306b\u306f\uff0c\u6ce2\u5f62\u51fa\u529b\u306e\u4f4d\u7f6e\u304c\u6d77\u5e95\u306e\u56fa\u4f53\u5074\u306b\u3042\u308b\u304b\u6d77\u4e2d\u5074\u306b\u3042\u308b\u304b\u306b\u3088\u3063\u3066\uff0c\u305d\u306e\u6c34\u5e73\u52d5\u632f\u5e45\u304c\u5927\u304d\u304f\u7570\u306a\u308b\uff0e \u305d\u3053\u3067\uff0c zsw \u306e\u5024\u306e\u6307\u5b9a\u306b\u3088\u308a\uff0c\u6d77\u9762\u4e0a\u306e\u89b3\u6e2c\u70b9\u3084\u6d77\u5e95\uff0c\u306a\u3089\u3073\u306b\u6d77\u5e95\u306e\u5e95\u306e\u89b3\u6e2c\u70b9\u3092\u305d\u308c\u305e\u308c\u6a21\u64ec\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u7279\u6bb5\u306e\u4e8b\u60c5\u304c\u7121\u3044\u9650\u308a\uff0c zsw = \u2019obb\u2019 \u3068\u3057\u3066\u304a\u304f\u306e\u304c\u826f\u3044\uff0e zsw \u89b3\u6e2c\u70b9\u6df1\u3055 \u2019dep\u2019 \u4e0e\u3048\u3089\u308c\u305fzst\u304b\u3089\u8a08\u7b97 \u2019fsb\u2019 \u5730\u8868\u30fb\u6d77\u9762\u30b0\u30ea\u30c3\u30c9\u306e\u4e00\u3064\u4e0b \u2019obb\u2019 \u5730\u8868\u30fb\u6d77\u5e95\u30b0\u30ea\u30c3\u30c9\u306e\u4e00\u3064\u4e0b \u2019oba\u2019 \u5730\u8868\u30fb\u6d77\u9762\u30b0\u30ea\u30c3\u30c9\u306e\u4e00\u3064\u4e0a \u2019bdi\u2019 (i=0, \\cdots, 9) \u901f\u5ea6\u69cb\u9020\u30e2\u30c7\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u308b i \u756a\u76ee\u306e\u5185\u90e8\u5883\u754c Parameters sw_wav_v , sw_wav_u \u901f\u5ea6(v)\u30fb\u5909\u4f4d(u)\u6ce2\u5f62\u306e\u51fa\u529b\u30b9\u30a4\u30c3\u30c1\uff0e ntdec_w \u6ce2\u5f62\u51fa\u529b\u306e\u6642\u9593\u9593\u5f15\u304d\u9593\u9694\uff0e1\u3067\u5168\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u306e\u8a18\u9332\u3092\u51fa\u529b\u3059\u308b\uff0e st_format \u89b3\u6e2c\u70b9\u4f4d\u7f6e\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff0e'xy'\u306a\u3089\u8a08\u7b97\u5ea7\u6a19\uff0c'll'\u306a\u3089\u5730\u7406\u5ea7\u6a19\u30e2\u30fc\u30c9\uff0e fn_stloc \u89b3\u6e2c\u70b9\u30d5\u30a1\u30a4\u30eb\u540d\uff0e wav_format \u6ce2\u5f62\u30d5\u30a1\u30a4\u30eb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff0e\u901a\u5e38\u306f \u2019sac\u2019","title":"\u5730\u9707\u6ce2\u5f62\u51fa\u529b"},{"location":"ja/2._Parameters/0205_output/#_7","text":"\u901f\u5ea6\u3084\u5909\u4f4d\u6ce2\u5f62\u3068\u540c\u69d8\u306b\uff0c sw_wav_strain = .true. \u3068\u3059\u308b\u3053\u3068\u3067\u3072\u305a\u307f\u6ce2\u5f62\u3092\uff0c sw_wav_stress = .true. \u3068\u3059\u308b\u3053\u3068\u3067\u5fdc\u529b\u6ce2\u5f62\u3092\uff0c\u305d\u308c\u305e\u308cSAC\u5f62\u5f0f\u306e\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff08 Experimental; new in version 5.0 )\uff0e\u89b3\u6e2c\u70b9\u4f4d\u7f6e\u306e\u6307\u5b9a\u306f\u901f\u5ea6\u30fb\u5909\u4f4d\u3068\u540c\u3058\u3067\u3042\u308b\uff0e\u51fa\u529b\u5358\u4f4d\u306f\u6b6a\u306f\u7121\u6b21\u5143\uff0c\u5fdc\u529b\u306f[Pa]\u3067\u3042\u308b\uff0e","title":"\u3072\u305a\u307f\u30fb\u5fdc\u529b\u6ce2\u5f62\u51fa\u529b"},{"location":"ja/2._Parameters/0205_output/#csf-format","text":"\u6ce2\u5f62\u51fa\u529b\u306f\u539f\u5247\u3068\u3057\u3066 SAC \u5f62\u5f0f\u3067\u3042\u308b\u304c\uff0c\u30b7\u30b9\u30c6\u30e0\u304c\u3042\u307e\u308a\u306b\u3082\u5927\u91cf\u306e\u6ce2\u5f62\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3059\u308b\u3053\u3068\u306b\u8010\u3048\u3089\u308c\u306a\u3044\u30b1\u30fc\u30b9\u304c\u3042\u308b\uff0e\u307e\u305f\uff0c\u5927\u91cf\u306e\u5c0f\u30b5\u30a4\u30ba\u30d5\u30a1\u30a4\u30eb\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u901a\u3058\u305f\u30c7\u30fc\u30bf\u306e\u8ee2\u9001\u306b\u3082\u4e0d\u5411\u304d\u3067\u3042\u308b\uff0e\u305d\u3053\u3067\uff0cVersion 3.0\u4ee5\u964d\u3067\u306f\u30d1\u30e9\u30e1\u30bf wav_format = \u2019csf\u2019 \u304c\u6307\u5b9a\u3055\u308c\u308b\u3068\uff0c SAC \u30d5\u30a1\u30a4\u30eb\u3092\u8907\u6570\u89b3\u6e2c\u70b9\u30fb\u6210\u5206\u306b\u3064\u3044\u3066\u5358\u4e00\u30d5\u30a1\u30a4\u30eb\u306b\u7d50\u5408\u3057\u305fcsf\u30d5\u30a1\u30a4\u30eb\uff08\u72ec\u81ea\u5f62\u5f0f\uff09\u306e\u51fa\u529b\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\uff0e csf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\uff0cSAC\u5f62\u5f0f\u306e\u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u3092\u5358\u7d14\u7d50\u5408\u3057\u305f\u3082\u306e\u306e\u5148\u982d\u306b3\u3064\u306e4\u30d0\u30a4\u30c8\u5b9f\u6570\u3092\u30d8\u30c3\u30c0\u3068\u3057\u3066\u4ed8\u52a0\u3057\u305f\u3060\u3051\u306e\u5358\u7d14\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3042\u308b\uff0e\u30d8\u30c3\u30c0\u306f\u4ee5\u4e0b\u306e\u69cb\u6210\u8981\u7d20\u304b\u3089\u306a\u308b\uff0e CSF header format identifier 4\u6587\u5b57 'CSFD' ntrace \u30d5\u30a1\u30a4\u30eb\u5185\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u6ce2\u5f62\u306e\u6570 npts \u4e00\u3064\u4e00\u3064\u306e\u6ce2\u5f62\u306e\u6642\u9593\u30b5\u30f3\u30d7\u30eb\u6570 \u30d5\u30a1\u30a4\u30eb\u306b\u542b\u307e\u308c\u308b\u6ce2\u5f62\u306e\u30b5\u30f3\u30d7\u30eb\u6570\u306f\u3059\u3079\u3066\u7b49\u3057\u3044\u3053\u3068\u304c\u4eee\u5b9a\u3055\u308c\u3066\u3044\u308b\uff0ecsf\u51fa\u529b\u304c\u9078\u629e\u3055\u308c\u305f\u5834\u5408\uff0c\u4e26\u5217\u8a08\u7b97\u306e\u30ce\u30fc\u30c9\u6bce\u306b\uff0c\u305d\u306e\u30ce\u30fc\u30c9\u306b\u542b\u307e\u308c\u308b\u89b3\u6e2c\u70b9\u306e\u540c\u3058\u6210\u5206\u306e\u6ce2\u5f62\u304c\u4e00\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u307e\u3068\u3081\u3089\u308c\u3066\u51fa\u529b\u3055\u308c\u308b\uff0e \u5927\u91cf\u306e\u6ce2\u5f62\u51fa\u529b \u5927\u898f\u6a21\u30b9\u30fc\u30d1\u30fc\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b7\u30b9\u30c6\u30e0\u306b\u304a\u3044\u3066\u306f\uff0c\u4e26\u5217\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0lustre\u304c\u63a1\u7528\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u3042\u308b\uff08\u305f\u3068\u3048\u3070\u6771\u4eac\u5927\u5b66Oakforest\u306a\u3069\uff09\uff0eLustre\u306f\u5c0f\u3055\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u591a\u6570\u6271\u3046\u3053\u3068\u3092\u3084\u3084\u82e6\u624b\u306b\u3057\u3066\u304a\u308a\uff0cSAC\u5f62\u5f0f\u3067\u5927\u91cf\u306e\u6ce2\u5f62\u3092\u51fa\u529b\u3059\u308b\u3068\uff0c\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u843d\u3061\u308b\u3053\u3068\u304c\u3042\u308b\uff0e\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u306f\uff0cCSF\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u3088\u3046\u306a\u7d50\u5408\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u4fbf\u5229\u3067\u3042\u308b\uff0e","title":"CSF format"},{"location":"ja/2._Parameters/0205_output/#_8","text":"OpenSWPC \u306f\u89b3\u6e2c\u70b9\u4f4d\u7f6e\u3092 stlo \uff0c stla \u306eSAC\u30d8\u30c3\u30c0\u3092\u901a\u3058\u3066\u4fdd\u5b58\u3059\u308b\u304c\uff0c xy \u5ea7\u6a19\u7cfb\u3067\u89b3\u6e2c\u70b9\u4f4d\u7f6e\u3092\u4e0e\u3048\u3066\u304b\u3064\u6975\u7aef\u306b\u9577\u8ddd\u96e2\u306e\u6e2c\u7dda\u3067\u306e\u8a08\u7b97\u306e\u5834\u5408\uff0c\u7def\u5ea6\u7d4c\u5ea6\u5909\u63db\uff08\u5730\u56f3\u6295\u5f71\uff09\u306b\u3088\u308b\u8aa4\u5dee\u304c\u7121\u8996\u3067\u304d\u306a\u3044\uff0e\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30bf\u3092\u8a2d\u5b9a\u3059\u308b\u3068\uff0c\u8ddd\u96e2\u3092 SAC \u30d8\u30c3\u30c0\u306e dist \u306b\u4fdd\u5b58\u3057\uff0c\u304b\u3064\u305d\u308c\u3092 SAC \u306b\u4e0a\u66f8\u304d\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u3067\u304d\u308b\uff0e Parameters wav_calc_dist .true. \u306e\u3068\u304d\u9707\u592e\u8ddd\u96e2\u3092SAC\u30c7\u30fc\u30bf\u306b\u4fdd\u5b58\u3059\u308b\uff0e","title":"\u8ddd\u96e2\u4fdd\u5b58\u30e2\u30fc\u30c9"},{"location":"ja/2._Parameters/0205_output/#_9","text":"\u8a08\u7b97\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u51fa\u529b\u3055\u308c\u308b\uff0e \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8 \u2006\u2006\u2006 (odir)/(title).(section).(type).(ext) \u6ce2\u5f62(SAC) \u2006\u2006\u2006 (odir)/wav/(title).(stnm).(component).sac \u6ce2\u5f62(CSF) (odir)/wav/(title).(node-ID).(component).csf \u8a08\u7b97\u6642\u9593 \u2006\u2006 (odir)/wav/(title).tim \u3053\u3053\u3067\uff0c (section) \u306f\u51fa\u529b\u65ad\u9762\u3092\u8868\u30592\u6587\u5b57\u3067\uff0c\u7279\u5b9a\u4f4d\u7f6e\u306e\u65ad\u9762\u3067\u3042\u308c\u3070 xy , yz \u306a\u3069\u3068\u8868\u3059\uff0e \u5730\u8868\u9762\u3068\u6d77\u5e95\u306f\u305d\u308c\u305e\u308c fs \uff08Free Surface\uff09\u306a\u3089\u3073\u306b ob \uff08Ocean Bottom\uff09\u3067\u8868\u3055\u308c\u308b\uff0e (type) \u306f\u901f\u5ea6\u632f\u5e45\u304bP\u6ce2\u30fbS\u6ce2\uff08div, rot\uff09\u304b\u306b\u3088\u3063\u3066 v \u3082\u3057\u304f\u306f ps \u3092\u53d6\u308b\uff0e (component) \u306f\u901f\u5ea6\u304b\u5909\u4f4d\u304b\u306b\u5fdc\u3058\u3066 Vx , Vy , Vz \u3042\u308b\u3044\u306f Ux , Uy , Uz \u3092\u53d6\u308b\uff0e \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u62e1\u5f35\u5b50 (ext) \u306fNetCDF\u5f62\u5f0f\u3067 nc \uff0cnative\u5f62\u5f0f\u3067 snp \u3067\u3042\u308b\uff0e","title":"\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d"},{"location":"ja/2._Parameters/0206_vmodel/","text":"\u901f\u5ea6\u69cb\u9020\u306e\u6307\u5b9a \u00b6 \u69cb\u9020\u30e2\u30c7\u30eb\u306e\u9078\u629e \u00b6 OpenSWPC \u306e\u5165\u529b\u901f\u5ea6\u69cb\u9020\u306f\u5c64\u69cb\u9020\u30e2\u30c7\u30eb\u3092\u57fa\u672c\u3068\u3057\u3066\u3044\u308b\uff0e\u4e00\u3064\u4e00\u3064\u306e\u5c64\u306f\uff0c\u6df1\u3055\uff08\u3082\u3057\u304f\u306f\u9ad8\u3055\uff09\u306e\u5909\u5316\u3092\u6301\u3064 x -- y \uff08\u3082\u3057\u304f\u306f\u7def\u5ea6\u7d4c\u5ea6\uff09\u306e\u9762\u3067\u3042\u308a\uff0c\u3053\u308c\u3092\u5730\u9707\u6ce2\u901f\u5ea6\u30fb\u5bc6\u5ea6\u306a\u3089\u3073\u306b\u5185\u90e8\u6e1b\u8870\u306e\u7b49\u5024\u9762\u3068\u3057\u3066\u53d6\u308a\u6271\u3046\uff0e \u5909\u6570 vmodel_type \u306e\u8a2d\u5b9a\u306b\u3088\u3063\u3066\u4e00\u69d8\u69cb\u9020\uff0c\u6c34\u5e73\u6210\u5c64\u69cb\u9020\uff0c\u3042\u308b\u3044\u306f NetCDF \u30d0\u30a4\u30ca\u30ea\u5165\u529b\u7a2e\u5225\u3092\u9078\u629e\u3067\u304d\u308b\uff0e c Parameters vmodel_type \u901f\u5ea6\u69cb\u9020\u30e2\u30c7\u30eb\u30bf\u30a4\u30d7\u306e\u6307\u5b9a\uff0e\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u3092\u9078\u629e\u3059\u308b\uff0e \u2019uni\u2019 \u4e00\u69d8\u5747\u8cea\u69cb\u9020\uff0e\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30bf\u3082\u6307\u5b9a\u3059\u308b\u3053\u3068\uff0e vp0 : \u4e00\u69d8\u69cb\u9020\u306eP\u6ce2\u901f\u5ea6 vs0 : \u4e00\u69d8\u69cb\u9020\u306eS\u6ce2\u901f\u5ea6 rho0 : \u4e00\u69d8\u69cb\u9020\u306e\u8cea\u91cf\u5bc6\u5ea6 qp0 : \u4e00\u69d8\u69cb\u9020\u306e QP qs0 : \u4e00\u69d8\u69cb\u9020\u306e QS topo0 : \u4e00\u69d8\u69cb\u9020\u306e\u5730\u8868\u9762\u6df1\u3055\uff0e 0 \u4ee5\u4e0a\u306e\u5834\u5408\u306b\u306f z=0 \u304b\u3089 topo0 \u307e\u3067\u6d77\u6c34\u3067\u6e80\u305f\u3055\u308c\u308b\uff0e \u2019lhm\u2019 \u6c34\u5e73\u6210\u5c64\u69cb\u9020\uff08Layered Homogeneous Medium)\uff0e\u5883\u754c\u9762\u6df1\u3055\u3068\u7269\u6027\u5024\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u5225\u9014\u6307\u5b9a\u3059\u308b\uff0e fn_lhm : \u6210\u5c64\u69cb\u9020\u6307\u5b9a\u30d5\u30a1\u30a4\u30eb\uff0e1\u884c\u306b\u5c64\u306e\u6df1\u3055\u30fb\u5bc6\u5ea6\u30fbP\u6ce2\u901f\u5ea6\u30fbS\u6ce2\u901f\u5ea6\u30fbQP\u30fbQS\u3092\u7a7a\u767d\u533a\u5207\u308a\u3067\u8a18\u5165\u3059\u308b\uff0e # \u306f\u30b3\u30e1\u30f3\u30c8\u884c\u3068\u3057\u3066\u6271\u308f\u308c\u308b\uff0e\u6307\u5b9a\u3055\u308c\u305f\u6df1\u3055\u4ee5\u6df1\u306e\u69cb\u9020\u304c\u305d\u306e\u884c\u306e\u7269\u6027\u5024\u3067\u6e80\u305f\u3055\u308c\u308b\uff0e\u4ee5\u4e0b\u306e\u4f8b\u3092\u53c2\u7167\u306e\u3053\u3068\uff0e 1 2 3 4 5 6 7 8 9 10 # depth rho(g/cm^3) vp(km/s) vs(km/s) Qp Qs # ------------------------------------------------------- 0 2.300 5.50 3.14 600 300 3 2.400 6.00 3.55 600 300 18 2.800 6.70 3.83 600 300 33 3.200 7.80 4.46 600 300 100 3.300 8.00 4.57 600 300 225 3.400 8.40 4.80 600 300 325 3.500 8.60 4.91 600 300 425 3.700 9.30 5.31 600 300 \u2019grd\u2019 NetCDF \u30d5\u30a1\u30a4\u30eb\u7fa4\u3088\u308b\u69cb\u9020\u5165\u529b\uff0e\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u30aa\u30d7\u30b7\u30e7\u30f3 -D_NETCDF \u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30bf\u3082\u6307\u5b9a\u3059\u308b\u3053\u3068\uff0e dir_grd : grd\u30d5\u30a1\u30a4\u30eb\u683c\u7d0d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff0e fn_grdslt : grd\u30d5\u30a1\u30a4\u30eb\u540d\u3068\u7269\u6027\u5024\u306e\u30ea\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\uff0e\u4ee5\u4e0b\u306e\u4f8b\u3092\u53c2\u7167\uff0e\u5404\u5c64\u6bce\u306b\uff0c\u7269\u6027\u5024\uff08\u5bc6\u5ea6\u30fb\u5730\u9707\u6ce2\u901f\u5ea6\u30fbQ\u5024\uff09\u3092\u6307\u5b9a\u3059\u308b\uff0e\u307e\u305f\uff0c sw \u3067\u7279\u5b9a\u306e\u5883\u754c\u9762\u306egrd\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u3053\u306e sw \u9707\u6e90\u306e\u6df1\u3055\u3092\u30d7\u30ec\u30fc\u30c8\u5883\u754c\u306b\u4e00\u81f4\u3055\u305b\u308b\uff08\u30aa\u30d7\u30b7\u30e7\u30f3 sdep_fit \uff09\u969b\u306b\u7528\u3044\u3089\u308c\u308b\uff0e\u6700\u4e0a\u9762\u306f\u5730\u8868\u9762\u3068\u3057\u3066\u53d6\u308a\u6271\u308f\u308c\u308b\uff0e\u305d\u308c\u3088\u308a\u4e0a\u5c64\u306b\u3064\u3044\u3066\u306f\uff0c z\\le 0 \u306f\u6d77\u6c34\u5c64\uff0c\u305d\u308c\u4ee5\u5916\u306f\u7a7a\u6c17\u3068\u3057\u3066\u6271\u308f\u308c\u308b\uff0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # grd filename rho vp vs QP QS sw # ------------------------------------------------------- ' eJIVSM_01_TAB_ . grd ' 1.80 1.70 0.35 119 70 0 ' eJIVSM_02_BSM_ . grd ' 1.95 1.80 0.50 170 100 0 ' eJIVSM_03_BSM_ . grd ' 2.00 2.00 0.60 204 120 0 ' eJIVSM_04_BSM_ . grd ' 2.05 2.10 0.70 238 140 0 ' eJIVSM_05_BSM_ . grd ' 2.07 2.20 0.80 272 160 0 ' eJIVSM_06_BSM_ . grd ' 2.10 2.30 0.90 306 180 0 ' eJIVSM_07_BSM_ . grd ' 2.15 2.40 1.00 340 200 0 ' eJIVSM_08_BSM_ . grd ' 2.20 2.70 1.30 442 260 0 ' eJIVSM_09_BSM_ . grd ' 2.25 3.00 1.50 510 300 0 ' eJIVSM_10_BSM_ . grd ' 2.30 3.20 1.70 578 340 0 ' eJIVSM_11_BSM_ . grd ' 2.35 3.50 2.00 680 400 0 ' eJIVSM_12_BSM_ . grd ' 2.45 4.20 2.40 680 400 0 ' eJIVSM_13_BSM_ . grd ' 2.60 5.00 2.90 680 400 0 ' eJIVSM_14_BSM_ . grd ' 2.65 5.50 3.20 680 400 0 ' eJIVSM_15_UPC_ . grd ' 2.70 5.80 3.40 680 400 0 ' eJIVSM_16_LWC_ . grd ' 2.80 6.40 3.80 680 400 0 ' eJIVSM_17_CTM_ . grd ' 3.20 7.50 4.50 850 500 0 ' eJIVSM_18_PH2_ . grd ' 2.40 5.00 2.90 340 200 1 ' eJIVSM_19_PH3_ . grd ' 2.90 6.80 4.00 510 300 0 ' eJIVSM_20_PHM_ . grd ' 3.20 8.00 4.70 850 500 0 ' eJIVSM_21_PA2_ . grd ' 2.60 5.40 2.80 340 200 2 ' eJIVSM_22_PA3_ . grd ' 2.80 6.50 3.50 510 300 0 ' eJIVSM_23_PAM_ . grd ' 3.40 8.10 4.60 850 500 0 node_grd : \u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u62c5\u5f53\u30ce\u30fc\u30c9\uff0e\u3059\u3079\u3066\u306e\u5c64\u69cb\u9020\u30d5\u30a1\u30a4\u30eb\u306f\u3053\u3053\u3067\u6307\u5b9a\u3055\u308c\u305f\u30ce\u30fc\u30c9\u304b\u3089\u8aad\u307f\u8fbc\u307e\u308c\uff0cMPI\u306b\u3088\u3063\u3066\u5168\u30ce\u30fc\u30c9\u306b\u30c7\u30fc\u30bf\u8ee2\u9001\u3055\u308c\u308b\uff0e is_ocean : \u6d77\u6c34\u30e2\u30fc\u30c9\uff0e .true. \uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09\u306e\u5834\u5408 z=0 \u3088\u308a\u5730\u8868\u9762\u307e\u3067\u306f\u6d77\u6c34\u3067\u6e80\u305f\u3055\u308c\u308b\uff0e .false. \u306e\u5834\u5408\u306b\u306f\u6d77\u5e95\u9762\u306e\u4e0a\u306f\u3059\u3079\u3066\u7a7a\u6c17\u3068\u306a\u308a\uff0c\u6d77\u5e95\u304c\u81ea\u7531\u8868\u9762\u3068\u3057\u3066\u53d6\u308a\u6271\u308f\u308c\u308b\uff0e topo_flatten : \u5730\u5f62\u5909\u5316\u3092\u5f37\u5236\u7684\u306b\u5e73\u5766\u306b\u3059\u308b\uff0e\u305d\u306e\u5206\u5730\u4e0b\u69cb\u9020\u3082\u30aa\u30d5\u30bb\u30c3\u30c8\u3055\u308c\u308b\uff0e topo_flatten \u540d\u79f0\u5909\u66f4\u306e\u6ce8\u610f \u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306fVersion 5.1\u307e\u3067\u306f is_flatten \u3067\u3042\u3063\u305f\u304c\uff0cVersion 5.2\u3067\u5b9f\u88c5\u3055\u308c\u305f earth_flattening \u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u306e\u6df7\u540c\u3092\u907f\u3051\u308b\u305f\u3081\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u305f\uff0e \u2019user\u2019 src/swpc_*/m_vmodel_user.F90 \u5185\u306e\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u3067\u30e6\u30fc\u30b6\u30fc\u304c\u5b9a\u7fa9\u3059\u308b\u901f\u5ea6\u69cb\u9020\u304c\u8aad\u307f\u8fbc\u307e\u308c\u308b\uff0e\u3053\u306eF90\u30d5\u30a1\u30a4\u30eb\u3092 \u5909\u66f4\u3057\u305f\u5834\u5408\u306b\u306f\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u5fc5\u8981 \u3068\u306a\u308b\uff0e\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u306e\u5f15\u6570\u306b\u3064\u3044\u3066\u306f\u30d5\u30a1\u30a4\u30eb\u5185\u30b3\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u306e\u3053\u3068\uff0e vcut \u30ab\u30c3\u30c8\u30aa\u30d5\u901f\u5ea6\uff0e \u2019lhm\u2019 \u306a\u3089\u3073\u306b \u2019grd\u2019 \u69cb\u9020\u3067\uff0c\u3053\u306e\u5024\u3088\u308a\u3082\u5c0f\u3055\u306a\u901f\u5ea6\u5024\u304c\u4e0e\u3048\u3089\u308c\u305f\u5834\u5408\u306b\u306f\uff0c\u305d\u308c\u3092\u5f37\u5236\u7684\u306b vcut \u306b\u7f6e\u304d\u63db\u3048\u308b\uff0e\u4f4e\u901f\u5ea6\u57df\u3092\u6392\u9664\u3057\u3066\u6ce2\u9577\u3068\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u306e\u6bd4\u3092\u4e00\u5b9a\u4ee5\u4e0a\u306b\u4fdd\u3064\u305f\u3081\u306b\u7528\u3044\u3089\u308c\u308b\uff0e\u3053\u306e\u5024\u304c0\u306e\u5834\u5408\u306b\u306f\u7f6e\u304d\u63db\u3048\u306f\u5b9f\u65bd\u3055\u308c\u306a\u3044\uff0e\u307e\u305f\uff0c\u6d77\u6c34\u5c64\uff08 \\mu=0 \uff09\u306e\u901f\u5ea6\u306b\u306f\u9069\u7528\u3055\u308c\u306a\u3044\uff0e munk_profile (new in version 5.2) .true. \u306e\u3068\u304d\uff0c\u6d77\u6c34\u5c64\u4e2d\u306b\u6975\u5c0f\u5024\u3092\u6301\u3064Munk's profile\u304c\u9069\u7528\u3055\u308c\u308b\uff0e .false. \u3067\u3042\u308c\u3070\u4e00\u5b9a\u5024\u304c\u7528\u3044\u3089\u308c\u308b\uff0e\u6b21\u7bc0\u306e\u8aac\u660e\u3092\u53c2\u7167\u306e\u3053\u3068\uff0e earth_flattening (new in version 5.2) .true. \u306e\u3068\u304dEarth-flattening tranformation (e.g., Aki and Richards, Box 9.2) \u306b\u3088\u308a\uff0c\u30c7\u30ab\u30eb\u30c8\u5ea7\u6a19\u7cfb\u3092\u7403\u6bbb\u69cb\u9020\u306b\u5bfe\u5fdc\u3059\u308b\u6df1\u3055\u3068\u901f\u5ea6\u306e\u975e\u7dda\u5f62\u5909\u63db\u3092\u884c\u3046\uff0e\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u9577\u8ddd\u96e2\uff08~500 km\u4ee5\u4e0a\uff09\u3084\u6df1\u767a\u5730\u9707\u306e\u5230\u9054\u6642\u523b\u306e\u6b63\u78ba\u306a\u518d\u73fe\u306b\u7279\u306b\u6709\u7528\u3067\u3042\u308b\uff0e\u305f\u3060\u3057\uff0cP-SV\u30683D\u69cb\u9020\u3067\u306f\u3053\u306e\u5909\u63db\u306f \u53b3\u5bc6\u3067\u306f\u306a\u3044 \u3053\u3068\u306b\u6ce8\u610f\uff0e Warning Version 5.2\u306b\u304a\u3051\u308b earth_flattening \u30e2\u30fc\u30c9\u306e\u5b9f\u88c5\u306f\u307e\u3060\u8a66\u9a13\u6bb5\u968e\u3067\u3042\u308b\uff0e\u5229\u7528\u306b\u306f\u5341\u5206\u6ce8\u610f\u3059\u308b\u3053\u3068\uff0e \u7a7a\u6c17\u304a\u3088\u3073\u6d77\u6c34\u5c64\u306e\u53d6\u308a\u6271\u3044 \u00b6 OpenSWPC \u3067\u306f\uff0c\u7a7a\u6c17\u5c64\u306f\u5bc6\u5ea6 \\rho=0.001 [g/cm {}^3 ]\uff0c\u5730\u9707\u6ce2\u901f\u5ea6 V_P=V_S=0 [km/s]\uff0c\u5185\u90e8\u6e1b\u8870 Q_P = Q_S = 10^{10} \u3092\u305d\u308c\u305e\u308c\u4eee\u5b9a\u3057\u3066\u3044\u308b\uff0e \u7a7a\u6c17\u5c64\u306f\u4e8b\u5b9f\u4e0a\u771f\u7a7a\u3068\u3057\u3066\u6271\u3048\u308b\u307b\u3069\u306b\u5c0f\u3055\u306a\u5bc6\u5ea6\u3092\u6301\u3061\uff0c\u304b\u3064\u5730\u9707\u6ce2\u901f\u5ea6\u304c0\u3067\u3042\u308b\u305f\u3081\uff0c\u7a7a\u4e2d\u97f3\u6ce2\u306f\u4f1d\u64ad\u3057\u306a\u3044\uff0e \u5f93\u3063\u3066\uff0c\u7a7a\u6c17\u5c64\u4e2d\u306e Q \u5024\u306f\u7d50\u679c\u306b\u5f71\u97ff\u3057\u306a\u3044\uff0e \u305f\u3060\u3057\uff0c\u8a08\u7b97\u30b3\u30fc\u30c9\u4e2d\u306b\u5bc6\u5ea6\u306e\u9006\u6570\u3092\u6c42\u3081\u308b\u6f14\u7b97\u304c\u3042\u308b\u305f\u3081\uff0c \u7a7a\u6c17\u5c64\u306e\u5bc6\u5ea6\u306f\u30bc\u30ed\u306b\u3057\u3066\u306f\u306a\u3089\u306a\u3044 \uff0e \u6d77\u6c34\u5c64\u3067\u306f \\rho=1.0 [g/cm {}^3 ], V_S=0.0 [km/s], Q_P = Q_S = 10^6 \u3092\u7528\u3044\u3066\u3044\u308b\uff0e \u6d77\u4e2d\u97f3\u6ce2\u306e\u6e1b\u8870\u306f\u975e\u5e38\u306b\u5c0f\u3055\u3044\u3053\u3068\u304c\u77e5\u3089\u308c\u3066\u304a\u308a\uff0c\u4e8b\u5b9f\u4e0a\u7121\u6e1b\u8870\u306b\u306a\u308b\u3088\u3046\u306aQ\u5024\u3092\u5c0e\u5165\u3057\u3066\u3044\u308b\uff0e \u307e\u305f\uff0cP\u6ce2\u901f\u5ea6\u306f V_P=1.5 [km/s] \u3067\u3042\u308b\u304c\uff0cVersion 5.2 \u4ee5\u964d\u3067\u306f munk_profile = .true. \u306b\u3059\u308b\u3053\u3068\u306b\u3088\u308a\uff0c\u4ee5\u4e0b\u306e\u5f0f\u3067\u5b9a\u307e\u308b Munk's profile \u3092\u7528\u3044\u308b\u3053\u3068\u3082\u3067\u304d\u308b\uff0e \\begin{align*} &V_P(z) = 1.5 \\times \\left[ 1.0 + 0.00737 \\left( z_b - 1 + e^{-zb} \\right) \\right] \\text{[m/s]}\\\\ &z_b = 2(z-1.3) /1.3 \\end{align*} \u305f\u3060\u3057 z \u306e\u5358\u4f4d\u306f[km]\u3067\u3042\u308b\uff0e\u3053\u306e\u69cb\u9020\u306f\u6c34\u6df11,300 m\u306bSOFAR\u30c1\u30e3\u30cd\u30eb\u306b\u8a72\u5f53\u3059\u308b\u6975\u5c0f\u3092\u6301\u3064\uff0e\u3053\u306e\u30d1\u30e9\u30e1\u30bf\u304c .false. \u306e\u5834\u5408\u306b\u306f V_P = 1.5 [km/s]\u306e\u4e00\u69d8\u306a\u5024\u304c\u7528\u3044\u3089\u308c\u308b\uff0e \u5730\u8868\u306a\u3089\u3073\u306b\u6d77\u5e95\u9762\u3067\u306f\uff0c\u5dee\u5206\u5f0f\u30922\u6b21\u7cbe\u5ea6\u5909\u66f4\u3059\u308b\u5883\u754c\u6761\u4ef6\u304c\u9069\u7528\u3055\u308c\u308b\uff08e.g., Okamoto and Takenaka, 2005 1 ; Maeda and Furumura, 2003 2 \uff09\uff0e\u6d77\u5e95\u306a\u3089\u3073\u306b\u5730\u8868\u306e\u5883\u754c\u306f\uff0c \\mu \u3068 \\lambda \u304c\u6709\u9650\u306e\u5024\u304b\u30890\u306b\u306a\u308b\uff0c\u3068\u3044\u3046\u6761\u4ef6\u3092\u7528\u3044\u3066\u81ea\u52d5\u7684\u306b\u62bd\u51fa\u3055\u308c\u308b\uff0e \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306e\u91cd\u7573 \u00b6 \u901f\u5ea6\u69cb\u9020 \u2019uni\u2019 , \u2019lhm\u2019 , \u2019grd\u2019 \u305d\u308c\u305e\u308c\u306b\u5bfe\u3057\u3066\uff0c\u5e73\u5747\u901f\u5ea6\u3092\u6210\u5c64\u69cb\u9020\u3067\u3042\u305f\u3048\uff0c\u305d\u308c\u306b\u5225\u9014\u751f\u6210\u3057\u305f\u30e9\u30f3\u30c0\u30e0\u306a\u77ed\u6ce2\u9577\u901f\u5ea6\u3086\u3089\u304e\u3092\u91cd\u7573\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u30e9\u30f3\u30c0\u30e0\u306a\u901f\u5ea6\u3086\u3089\u304e \\xi \u3092\u4e8b\u524d\u306b\u751f\u6210\u3057\u3066\u304a\u304d\uff0c\u5225\u9014\u5b9a\u7fa9\u3055\u308c\u308b\u5e73\u5747\u7684\u901f\u5ea6\u69cb\u9020 V_{P0} , V_{S0} , \\rho_0 \u306b\u5bfe\u3057\u3066\uff0c \\begin{align} V_P = V_{P0} \\left( 1 + \\xi \\right) , \\, V_S = V_{S0} \\left( 1 + \\xi \\right) , \\, \\rho = \\rho_0 \\left( 1 + \\nu \\xi \\right) \\end{align} \u306e\u3088\u3046\u306b\u3086\u3089\u304e\u3092\u4e0e\u3048\u308b\uff0e\u305f\u3060\u3057\uff0c\u3053\u3053\u3067\u306f \\nu=0.8 \u3068\u3059\u308bBirch\u5247\u3092\u63a1\u7528\u3057\u3066\u3044\u308b\uff08Sato et al., 2012 3 \uff09. \u901f\u5ea6\u69cb\u9020\u306e\u6307\u5b9a\u6cd5\u306f\uff0c\u80cc\u666f\u3068\u306a\u308b\u5e73\u5747\u901f\u5ea6\u30e2\u30c7\u30eb\u306b\u5fdc\u3058\u3066\uff0c vmodel_type=\u2019uni_rmed\u2019 , \u2019lhm_rmed\u2019 , \u2019grd_rmed\u2019 \u306e3\u7a2e\u985e\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\uff0e\u307e\u305f\uff0c\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306e\u751f\u6210\u306e\u305f\u3081\u306b \u5225\u30c4\u30fc\u30eb \u304c\u63d0\u4f9b\u3055\u308c\u308b\uff0e \u4ee5\u4e0b\u3067\u89e3\u8aac\u3059\u308b3\u30e2\u30c7\u30eb\u306b\u5171\u901a\u306e\u30d1\u30e9\u30e1\u30bf\u3068\u3057\u3066\uff0c\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30bf\u3092\u7528\u3044\u308b\uff0e Parameters dir_rmed \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30c7\u30fc\u30bf\u683c\u7d0d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306f3\u6b21\u5143\u3082\u3057\u304f\u306f2\u6b21\u5143\u306e NetCDF \u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\uff0c\u30b0\u30ea\u30c3\u30c9\u6bce\u306e\u901f\u5ea6\u3086\u3089\u304e\u7387 \\xi(I,J,K) \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\uff0e\u4e26\u5217\u8a08\u7b97\u306e\u305f\u3081\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u5206\u5272\u3059\u308b\u5fc5\u8981\u306f\u7121\u304f\uff0c\u8a08\u7b97\u306e\u5404\u30ce\u30fc\u30c9\u304c\uff0c\u81ea\u30ce\u30fc\u30c9\u306e\u8a08\u7b97\u62c5\u5f53\u9818\u57df\u306e (i,j,k) \u7bc4\u56f2\u306b\u76f8\u5f53\u3059\u308b\u30c7\u30fc\u30bf\u3092\u81ea\u52d5\u7684\u306b\u62bd\u51fa\u3059\u308b\uff0e\u8a08\u7b97\u30b5\u30a4\u30ba Nx,Ny,Nz \u304c\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30d5\u30a1\u30a4\u30eb\u306e\u6b21\u5143\u9577\u3088\u308a\u3082\u5927\u304d\u3044\u5834\u5408\u306b\u306f\uff0c\u5468\u671f\u7684\u5883\u754c\u6761\u4ef6\u306b\u3088\u3063\u3066\u540c\u3058\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3092\u7e70\u308a\u8fd4\u3057\u3066\u30e2\u30c7\u30eb\u9818\u57df\u5168\u4f53\u3092\u57cb\u3081\u308b\uff0e\u5b9f\u884c\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\uff0c\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306e\u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u3068\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u304c\u4e00\u81f4\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3057\u306a\u3044\uff0e\u8a08\u7b97\u306e\u7a7a\u9593\u683c\u5b50\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3057\u305f\u5834\u5408\uff0c\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3082\u4f5c\u6210\u3057\u76f4\u3059\u5fc5\u8981\u304c\u3042\u308b\uff0e \u306a\u304a\uff0c2\u6b21\u5143\u8a08\u7b97\u306e\u30b3\u30fc\u30c9\u306b3\u6b21\u5143\u306e\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30d0\u30a4\u30ca\u30ea\u3092\u7528\u3044\u308b\u3053\u3068\u306f\u53ef\u80fd\u3067\u3042\u308b\uff08\u305d\u306e\u5834\u5408 k=1 \u306e\u65ad\u9762\u304c\u5229\u7528\u3055\u308c\u308b\uff09\u304c\uff0c\u305d\u306e\u9006\u306f\u8a31\u3055\u308c\u306a\u3044\uff0e \u4e00\u69d8\u5747\u8cea\uff0b\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea \u00b6 vmodel=uni_rmed \u3092\u7528\u3044\u308b\uff0e vmodel=\u2019uni\u2019 \u306e\u30d1\u30e9\u30e1\u30bf\u306b\u52a0\u3048\u3066\uff0c\u4ee5\u4e0b\u304c\u5fc5\u8981\u3068\u306a\u308b\uff0e Parameters fn_rmed0 \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30d5\u30a1\u30a4\u30eb\u540d \u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f\uff0c\u5e73\u5747\u901f\u5ea6\u306b fn_rmed0 \u3067\u4e0e\u3048\u3089\u308c\u305f\u3086\u3089\u304e\u3092\u91cd\u7573\u3055\u305b\u308b\uff0e\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306b\u306f\u3086\u3089\u304e\u304c0\u3067\u3042\u308b\u3068\u898b\u306a\u3059\uff0e \u6c34\u5e73\u6210\u5c64\uff0b\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea \u00b6 vmodel=lhm_rmed \u3067\u306f\uff0c vmodel=\u2019lhm\u2019 \u306e\u6210\u5c64\u69cb\u9020\u306e\u5404\u5c64\u306b\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3092\u91cd\u7573\u3055\u305b\u308b\uff0e\u305d\u306e\u969b\uff0c\u5404\u5c64\u306b\u7570\u306a\u308b\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3092\u91cd\u7573\u3055\u305b\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308b\uff0e\u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f\uff0c fn_lhm \u306e\u304b\u308f\u308a\u306b\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30bf\u3092\u7528\u3044\u308b\uff1a Parameters fn_lhm_rmed \u69cb\u9020\u30ea\u30b9\u30c8 \u69cb\u9020\u30ea\u30b9\u30c8\u306f fn_lhm \u306b\u6e96\u3058\u305f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u53d6\u308b\u304c\uff0c\u305d\u306e\u6700\u53f3\u6b04\u306b\uff0c\u4ee5\u4e0b\u306e\u4f8b\u306e\u3088\u3046\u306b\u5404\u5c64\u306e\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8a18\u8f09\u3059\u308b\uff0e 1 2 3 4 5 6 7 8 9 10 # depth rho(g/cm^3) vp(km/s) vs(km/s) Qp Qs fn_rmed # ---------------------------------------------------------------------- 0 2.300 5.50 3.14 600 300 rmedia1 . nc 3 2.400 6.00 3.55 600 300 rmedia1 . nc 18 2.800 6.70 3.83 600 300 rmedia2 . nc 33 3.200 7.80 4.46 600 300 rmedia2 . nc 100 3.300 8.00 4.57 600 300 - 225 3.400 8.40 4.80 600 300 - 325 3.500 8.60 4.91 600 300 - 425 3.700 9.30 5.31 600 300 - \u3053\u306e\u4f8b\u3067\u306f\uff0c0 km\u30683 km\u306e\u5c64\u306b rmedia1.nc , 18 km\u306833 km\u306e\u5c64\u306b rmedia2.nc \u3092\u914d\u7f6e\u3059\u308b\uff0e\u305d\u308c\u3088\u308a\u6df1\u3044\u90e8\u5206\u306b\u3064\u3044\u3066\u306f\u30c0\u30df\u30fc\u6587\u5b57 \"-\" \u304c\u66f8\u304b\u308c\u3066\u3044\u308b\uff0e\u8a72\u5f53\u3059\u308b\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3051\u308c\u3070\uff0c\u3053\u308c\u3089\u306e\u9818\u57df\u306b\u306f\u901f\u5ea6\u3086\u3089\u304e\u306f\u91cd\u7573\u3055\u308c\u306a\u3044\uff0e \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30d5\u30a1\u30a4\u30eb\u306f dir_rmed \u304b\u3089\u63a2\u3055\u308c\u308b\uff0e \u30d1\u30e9\u30e1\u30bf dir_rmed \u3092\u7528\u3044\u305a\u306b fn_lhm \u306e\u6b04\u306b\u76f4\u63a5\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u3092\u66f8\u3044\u3066\u3082\u304b\u307e\u308f\u306a\u3044\u304c\uff0c\u305d\u306e\u5834\u5408\u306f\u304b\u306a\u3089\u305a\u30d5\u30a1\u30a4\u30eb\u540d\u5168\u4f53\u3092\u30af\u30a9\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u62ec\u308b\u3053\u3068\uff0e \u3086\u3089\u304e\u4e0e\u3048\u306a\u3044\u5834\u5408\u306b\u3082\uff0c\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30d5\u30a1\u30a4\u30eb\u306e\u6b04\u306b\u306f\u4f55\u3089\u304b\u306e\u6587\u5b57\u304c\u66f8\u304b\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff0e\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u6b04\u304c\u7a7a\u767d\u3060\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\uff0e 3\u6b21\u5143\u30e9\u30f3\u30c0\u30e0\u4e0d\u5747\u8cea\u69cb\u9020 \u00b6 vmodel=grd_rmed \u3067\u306f\uff0c vmodel=\u2019grd\u2019 \u306e\u6210\u5c64\u69cb\u9020\u306e\u5404\u5c64\u306b\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3092\u91cd\u7573\u3055\u305b\u308b\uff0e\u5404\u5c64\u306b\u7570\u306a\u308b\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3092\u91cd\u7573\u3055\u305b\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308a\uff0c\u304b\u3064\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306e k \uff08\u925b\u76f4\uff09\u65b9\u5411\u306e\u57fa\u6e96\u4f4d\u7f6e\u3092\u4efb\u610f\u306e\u5c64\u5883\u754c\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\uff0e \u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f\uff0c fn_grd \u306e\u304b\u308f\u308a\u306b\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30bf\u3092\u7528\u3044\u308b\uff0e Parameters fn_grdlst_rmed \u69cb\u9020\u30ea\u30b9\u30c8 \u69cb\u9020\u30ea\u30b9\u30c8\u306f fn_grdlst \u306b\u6e96\u3058\u305f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u53d6\u308b\u304c\uff0c\u4ee5\u4e0b\u306e\u4f8b\u306e\u3088\u3046\u306b\uff0c\u53f3\u6b04\u306b\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30d5\u30a1\u30a4\u30eb\u540d\u3068\u57fa\u6e96\u5c64\u306e\u756a\u53f7\u3092\u8a18\u8ff0\u3059\u308b\uff0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # grd filename rho vp vs QP QS sw fn_rmed ref # ----------------------------------------------------------------------- ' eJIVSM_01_TAB_ . grd ' 1.80 1.70 0.35 119 70 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_02_BSM_ . grd ' 1.95 1.80 0.50 170 100 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_03_BSM_ . grd ' 2.00 2.00 0.60 204 120 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_04_BSM_ . grd ' 2.05 2.10 0.70 238 140 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_05_BSM_ . grd ' 2.07 2.20 0.80 272 160 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_06_BSM_ . grd ' 2.10 2.30 0.90 306 180 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_07_BSM_ . grd ' 2.15 2.40 1.00 340 200 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_08_BSM_ . grd ' 2.20 2.70 1.30 442 260 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_09_BSM_ . grd ' 2.25 3.00 1.50 510 300 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_10_BSM_ . grd ' 2.30 3.20 1.70 578 340 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_11_BSM_ . grd ' 2.35 3.50 2.00 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_12_BSM_ . grd ' 2.45 4.20 2.40 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_13_BSM_ . grd ' 2.60 5.00 2.90 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_14_BSM_ . grd ' 2.65 5.50 3.20 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_15_UPC_ . grd ' 2.70 5.80 3.40 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_16_LWC_ . grd ' 2.80 6.40 3.80 680 400 0 ' rmed3d_3 . nc ' 0 ' eJIVSM_17_CTM_ . grd ' 3.20 7.50 4.50 850 500 0 ' rmed3d_3 . nc ' 0 ' eJIVSM_18_PH2_ . grd ' 2.40 5.00 2.90 340 200 1 ' rmed3d_2 . nc ' 18 ' eJIVSM_19_PH3_ . grd ' 2.90 6.80 4.00 510 300 0 ' rmed3d_2 . nc ' 18 ' eJIVSM_20_PHM_ . grd ' 3.20 8.00 4.70 850 500 0 ' rmed3d_3 . nc ' 18 ' eJIVSM_21_PA2_ . grd ' 2.60 5.40 2.80 340 200 2 ' rmed3d_2 . nc ' 21 ' eJIVSM_22_PA3_ . grd ' 2.80 6.50 3.50 510 300 0 ' rmed3d_2 . nc ' 21 ' eJIVSM_23_PAM_ . grd ' 3.40 8.10 4.60 850 500 0 ' rmed3d_3 . nc ' 21 \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u8a18\u8f09\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f lhm_rmed \u306e\u5834\u5408\u3068\u540c\u69d8\u3067\u3042\u308b\uff0e \u6700\u53f3\u6b04\u306e\u6570\u5b57\u3067\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u5c64\u306e\u925b\u76f4\u65b9\u5411\u306e\u57fa\u6e96\u3068\u306a\u308b\u9762\u3092\u6307\u5b9a\u3059\u308b\uff0e \u3053\u306e\u5024\u304c0\u3067\u3042\u308c\u3070\uff0c uni_rmed \u3084 lhm_rmed \u306a\u3069\u3068\u540c\u69d8\u306b\u30e2\u30c7\u30eb\u306e\u925b\u76f4\u65b9\u5411\u306e\u30b0\u30ea\u30c3\u30c9\u4f4d\u7f6e\u306e\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u304c\u305d\u306e\u307e\u307e\u7528\u3044\u3089\u308c\u308b\uff0e\u3053\u3053\u306b\u975e\u30bc\u30ed\u306e\u5024 NR \u304c\u6307\u5b9a\u3055\u308c\u308b\u3068\uff0c NR \u756a\u76ee\u306e\u5c64\u306e\u4e0a\u9762\u4f4d\u7f6e\u304b\u3089\u306e\u76f8\u5bfe\u30b0\u30ea\u30c3\u30c9\u4f4d\u7f6e\u306e\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u304c\u7528\u3044\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u308b\uff0e\u305f\u3068\u3048\u3070\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\uff0c\u7b2c18\u5c64\u304b\u308920\u5c64\u307e\u3067\u306f18\u5c64\u76ee\u304c\uff0c21\u304b\u308923\u5c64\u306f21\u5c64\u306e\u305d\u308c\u305e\u308c\u30d7\u30ec\u30fc\u30c8\u4e0a\u9762\u304c\u57fa\u6e96\u5024\u306b\u306a\u3063\u3066\u3044\u308b\uff0e\u3053\u308c\u306b\u3088\u308a\uff0c\u30d7\u30ec\u30fc\u30c8\u5185\u306e\u4e0d\u5747\u8cea\u69cb\u9020\u306f\u6c34\u5e73\u9762\u3067\u306f\u306a\u304f\uff0c\u30d7\u30ec\u30fc\u30c8\u6b63\u9762\u306b\u6cbf\u3063\u305f\u659c\u3081\u306e\u3086\u3089\u304e\u69cb\u9020\u3092\u5c0e\u5165\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u901f\u5ea6\u3086\u3089\u304e\u306e\u6253\u3061\u5207\u308a \u00b6 \u901f\u5ea6\u3086\u3089\u304e\u306e\u30d1\u30e9\u30e1\u30bf \\epsilon \u304c\u5927\u304d\u304f\u306a\u308b\u3068\uff0c\u5c40\u6240\u7684\u306b\u975e\u5e38\u306b\u5730\u9707\u6ce2\u901f\u5ea6\u304c\u5927\u304d\u304f\u3042\u308b\u3044\u306f\u5c0f\u3055\u304f\u306a\u308a\uff0c\u4ee5\u4e0b\u306e3\u30b1\u30fc\u30b9\u3067\u8a08\u7b97\u304c\u4e0d\u53ef\u80fd\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u308b\uff0e \\xi>0 \u306e\u5834\u5408\u306b V=(1+\\xi)V_0 \u304c\u5dee\u5206\u6cd5\u306e\u5b89\u5b9a\u6761\u4ef6\u304b\u3089\u8a31\u5bb9\u3055\u308c\u308b\u6700\u5927\u901f\u5ea6\u3092\u8d85\u3048\u308b\uff0e \\xi<-1.0 \u306e\u5834\u5408\uff0c\u5730\u9707\u6ce2\u901f\u5ea6\u304c\u7269\u7406\u7684\u306b\u3042\u308a\u3048\u306a\u3044\u8ca0\u306e\u5024\u3092\u53d6\u308b\uff0e \\xi<-1.25 \u306e\u5834\u5408\uff0c\u5bc6\u5ea6\u304c\u7269\u7406\u7684\u306b\u3042\u308a\u3048\u306a\u3044\u8ca0\u306e\u5024\u3092\u53d6\u308b\uff0e \u305d\u3053\u3067\uff0c OpenSWPC \u3067\u306f\uff0c\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3092\u9802\u4e0a\u3055\u305b\u305f\u7d50\u679c\u306e\u901f\u5ea6\u3092 vcut \\le v \\le 0.95 \\times v_\\text{max} \u306b\u5236\u9650\u3059\u308b\uff0e\u3053\u3053\u3067 vcut \u306f\u4f4e\u901f\u5ea6\u6253\u3061\u5207\u308a\u306e\u305f\u3081\u306e\u5165\u529b\u30d1\u30e9\u30e1\u30bf\uff0c v_\\text{max} \u306f\u5b89\u5b9a\u6761\u4ef6\u304b\u3089\u8a31\u5bb9\u3055\u308c\u308b\u6700\u5927\u901f\u5ea6\uff08\u81ea\u52d5\u7684\u306b\u8a08\u7b97\uff09\u3067\u3042\u308b\uff0e\u3055\u3089\u306b\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30bf\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\uff0c\u5bc6\u5ea6\u304c\u8ca0\u306b\u306a\u308b\u3053\u3068\u3092\u9632\u6b62\u3057\u3066\u3044\u308b\uff0e Parameters rhomin \u6700\u4f4e\u5bc6\u5ea6\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u306f1.0 g/cm {}^3 \uff09 Okamoto, T., and H. Takenaka (2005). Fluid-solid boundary implementation in the velocity-stress finite- difference method, Zisin 2 , 57 , 355\u2013364, doi:10.4294/zisin1948.57.3_355. (in Japanese with English Abstract) (article link) \u21a9 Maeda, T., and T. Furumura (2013), FDM simulation of seismic waves, ocean acoustic waves, and tsunamis based on tsunami-coupled equations of motion, Pure Appl. Geophys. , 170 (1-2), 109\u2013127, doi:10.1007/s00024-011-0430-z. (article link) \u21a9 Sato, H., M. C. Fehler, and T. Maeda (2012), Seismic Wave Propagation and Scattering in the Heterogeneous Earth: Second Edition , Springer Berlin Heidelberg, Berlin, Heidelberg, doi:10.1007/978-3-642-23029-5. \u21a9","title":"\u901f\u5ea6\u69cb\u9020\u306e\u6307\u5b9a"},{"location":"ja/2._Parameters/0206_vmodel/#_1","text":"","title":"\u901f\u5ea6\u69cb\u9020\u306e\u6307\u5b9a"},{"location":"ja/2._Parameters/0206_vmodel/#_2","text":"OpenSWPC \u306e\u5165\u529b\u901f\u5ea6\u69cb\u9020\u306f\u5c64\u69cb\u9020\u30e2\u30c7\u30eb\u3092\u57fa\u672c\u3068\u3057\u3066\u3044\u308b\uff0e\u4e00\u3064\u4e00\u3064\u306e\u5c64\u306f\uff0c\u6df1\u3055\uff08\u3082\u3057\u304f\u306f\u9ad8\u3055\uff09\u306e\u5909\u5316\u3092\u6301\u3064 x -- y \uff08\u3082\u3057\u304f\u306f\u7def\u5ea6\u7d4c\u5ea6\uff09\u306e\u9762\u3067\u3042\u308a\uff0c\u3053\u308c\u3092\u5730\u9707\u6ce2\u901f\u5ea6\u30fb\u5bc6\u5ea6\u306a\u3089\u3073\u306b\u5185\u90e8\u6e1b\u8870\u306e\u7b49\u5024\u9762\u3068\u3057\u3066\u53d6\u308a\u6271\u3046\uff0e \u5909\u6570 vmodel_type \u306e\u8a2d\u5b9a\u306b\u3088\u3063\u3066\u4e00\u69d8\u69cb\u9020\uff0c\u6c34\u5e73\u6210\u5c64\u69cb\u9020\uff0c\u3042\u308b\u3044\u306f NetCDF \u30d0\u30a4\u30ca\u30ea\u5165\u529b\u7a2e\u5225\u3092\u9078\u629e\u3067\u304d\u308b\uff0e c Parameters vmodel_type \u901f\u5ea6\u69cb\u9020\u30e2\u30c7\u30eb\u30bf\u30a4\u30d7\u306e\u6307\u5b9a\uff0e\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u3092\u9078\u629e\u3059\u308b\uff0e \u2019uni\u2019 \u4e00\u69d8\u5747\u8cea\u69cb\u9020\uff0e\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30bf\u3082\u6307\u5b9a\u3059\u308b\u3053\u3068\uff0e vp0 : \u4e00\u69d8\u69cb\u9020\u306eP\u6ce2\u901f\u5ea6 vs0 : \u4e00\u69d8\u69cb\u9020\u306eS\u6ce2\u901f\u5ea6 rho0 : \u4e00\u69d8\u69cb\u9020\u306e\u8cea\u91cf\u5bc6\u5ea6 qp0 : \u4e00\u69d8\u69cb\u9020\u306e QP qs0 : \u4e00\u69d8\u69cb\u9020\u306e QS topo0 : \u4e00\u69d8\u69cb\u9020\u306e\u5730\u8868\u9762\u6df1\u3055\uff0e 0 \u4ee5\u4e0a\u306e\u5834\u5408\u306b\u306f z=0 \u304b\u3089 topo0 \u307e\u3067\u6d77\u6c34\u3067\u6e80\u305f\u3055\u308c\u308b\uff0e \u2019lhm\u2019 \u6c34\u5e73\u6210\u5c64\u69cb\u9020\uff08Layered Homogeneous Medium)\uff0e\u5883\u754c\u9762\u6df1\u3055\u3068\u7269\u6027\u5024\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u5225\u9014\u6307\u5b9a\u3059\u308b\uff0e fn_lhm : \u6210\u5c64\u69cb\u9020\u6307\u5b9a\u30d5\u30a1\u30a4\u30eb\uff0e1\u884c\u306b\u5c64\u306e\u6df1\u3055\u30fb\u5bc6\u5ea6\u30fbP\u6ce2\u901f\u5ea6\u30fbS\u6ce2\u901f\u5ea6\u30fbQP\u30fbQS\u3092\u7a7a\u767d\u533a\u5207\u308a\u3067\u8a18\u5165\u3059\u308b\uff0e # \u306f\u30b3\u30e1\u30f3\u30c8\u884c\u3068\u3057\u3066\u6271\u308f\u308c\u308b\uff0e\u6307\u5b9a\u3055\u308c\u305f\u6df1\u3055\u4ee5\u6df1\u306e\u69cb\u9020\u304c\u305d\u306e\u884c\u306e\u7269\u6027\u5024\u3067\u6e80\u305f\u3055\u308c\u308b\uff0e\u4ee5\u4e0b\u306e\u4f8b\u3092\u53c2\u7167\u306e\u3053\u3068\uff0e 1 2 3 4 5 6 7 8 9 10 # depth rho(g/cm^3) vp(km/s) vs(km/s) Qp Qs # ------------------------------------------------------- 0 2.300 5.50 3.14 600 300 3 2.400 6.00 3.55 600 300 18 2.800 6.70 3.83 600 300 33 3.200 7.80 4.46 600 300 100 3.300 8.00 4.57 600 300 225 3.400 8.40 4.80 600 300 325 3.500 8.60 4.91 600 300 425 3.700 9.30 5.31 600 300 \u2019grd\u2019 NetCDF \u30d5\u30a1\u30a4\u30eb\u7fa4\u3088\u308b\u69cb\u9020\u5165\u529b\uff0e\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u30aa\u30d7\u30b7\u30e7\u30f3 -D_NETCDF \u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30bf\u3082\u6307\u5b9a\u3059\u308b\u3053\u3068\uff0e dir_grd : grd\u30d5\u30a1\u30a4\u30eb\u683c\u7d0d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff0e fn_grdslt : grd\u30d5\u30a1\u30a4\u30eb\u540d\u3068\u7269\u6027\u5024\u306e\u30ea\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\uff0e\u4ee5\u4e0b\u306e\u4f8b\u3092\u53c2\u7167\uff0e\u5404\u5c64\u6bce\u306b\uff0c\u7269\u6027\u5024\uff08\u5bc6\u5ea6\u30fb\u5730\u9707\u6ce2\u901f\u5ea6\u30fbQ\u5024\uff09\u3092\u6307\u5b9a\u3059\u308b\uff0e\u307e\u305f\uff0c sw \u3067\u7279\u5b9a\u306e\u5883\u754c\u9762\u306egrd\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u3053\u306e sw \u9707\u6e90\u306e\u6df1\u3055\u3092\u30d7\u30ec\u30fc\u30c8\u5883\u754c\u306b\u4e00\u81f4\u3055\u305b\u308b\uff08\u30aa\u30d7\u30b7\u30e7\u30f3 sdep_fit \uff09\u969b\u306b\u7528\u3044\u3089\u308c\u308b\uff0e\u6700\u4e0a\u9762\u306f\u5730\u8868\u9762\u3068\u3057\u3066\u53d6\u308a\u6271\u308f\u308c\u308b\uff0e\u305d\u308c\u3088\u308a\u4e0a\u5c64\u306b\u3064\u3044\u3066\u306f\uff0c z\\le 0 \u306f\u6d77\u6c34\u5c64\uff0c\u305d\u308c\u4ee5\u5916\u306f\u7a7a\u6c17\u3068\u3057\u3066\u6271\u308f\u308c\u308b\uff0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # grd filename rho vp vs QP QS sw # ------------------------------------------------------- ' eJIVSM_01_TAB_ . grd ' 1.80 1.70 0.35 119 70 0 ' eJIVSM_02_BSM_ . grd ' 1.95 1.80 0.50 170 100 0 ' eJIVSM_03_BSM_ . grd ' 2.00 2.00 0.60 204 120 0 ' eJIVSM_04_BSM_ . grd ' 2.05 2.10 0.70 238 140 0 ' eJIVSM_05_BSM_ . grd ' 2.07 2.20 0.80 272 160 0 ' eJIVSM_06_BSM_ . grd ' 2.10 2.30 0.90 306 180 0 ' eJIVSM_07_BSM_ . grd ' 2.15 2.40 1.00 340 200 0 ' eJIVSM_08_BSM_ . grd ' 2.20 2.70 1.30 442 260 0 ' eJIVSM_09_BSM_ . grd ' 2.25 3.00 1.50 510 300 0 ' eJIVSM_10_BSM_ . grd ' 2.30 3.20 1.70 578 340 0 ' eJIVSM_11_BSM_ . grd ' 2.35 3.50 2.00 680 400 0 ' eJIVSM_12_BSM_ . grd ' 2.45 4.20 2.40 680 400 0 ' eJIVSM_13_BSM_ . grd ' 2.60 5.00 2.90 680 400 0 ' eJIVSM_14_BSM_ . grd ' 2.65 5.50 3.20 680 400 0 ' eJIVSM_15_UPC_ . grd ' 2.70 5.80 3.40 680 400 0 ' eJIVSM_16_LWC_ . grd ' 2.80 6.40 3.80 680 400 0 ' eJIVSM_17_CTM_ . grd ' 3.20 7.50 4.50 850 500 0 ' eJIVSM_18_PH2_ . grd ' 2.40 5.00 2.90 340 200 1 ' eJIVSM_19_PH3_ . grd ' 2.90 6.80 4.00 510 300 0 ' eJIVSM_20_PHM_ . grd ' 3.20 8.00 4.70 850 500 0 ' eJIVSM_21_PA2_ . grd ' 2.60 5.40 2.80 340 200 2 ' eJIVSM_22_PA3_ . grd ' 2.80 6.50 3.50 510 300 0 ' eJIVSM_23_PAM_ . grd ' 3.40 8.10 4.60 850 500 0 node_grd : \u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u62c5\u5f53\u30ce\u30fc\u30c9\uff0e\u3059\u3079\u3066\u306e\u5c64\u69cb\u9020\u30d5\u30a1\u30a4\u30eb\u306f\u3053\u3053\u3067\u6307\u5b9a\u3055\u308c\u305f\u30ce\u30fc\u30c9\u304b\u3089\u8aad\u307f\u8fbc\u307e\u308c\uff0cMPI\u306b\u3088\u3063\u3066\u5168\u30ce\u30fc\u30c9\u306b\u30c7\u30fc\u30bf\u8ee2\u9001\u3055\u308c\u308b\uff0e is_ocean : \u6d77\u6c34\u30e2\u30fc\u30c9\uff0e .true. \uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09\u306e\u5834\u5408 z=0 \u3088\u308a\u5730\u8868\u9762\u307e\u3067\u306f\u6d77\u6c34\u3067\u6e80\u305f\u3055\u308c\u308b\uff0e .false. \u306e\u5834\u5408\u306b\u306f\u6d77\u5e95\u9762\u306e\u4e0a\u306f\u3059\u3079\u3066\u7a7a\u6c17\u3068\u306a\u308a\uff0c\u6d77\u5e95\u304c\u81ea\u7531\u8868\u9762\u3068\u3057\u3066\u53d6\u308a\u6271\u308f\u308c\u308b\uff0e topo_flatten : \u5730\u5f62\u5909\u5316\u3092\u5f37\u5236\u7684\u306b\u5e73\u5766\u306b\u3059\u308b\uff0e\u305d\u306e\u5206\u5730\u4e0b\u69cb\u9020\u3082\u30aa\u30d5\u30bb\u30c3\u30c8\u3055\u308c\u308b\uff0e topo_flatten \u540d\u79f0\u5909\u66f4\u306e\u6ce8\u610f \u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306fVersion 5.1\u307e\u3067\u306f is_flatten \u3067\u3042\u3063\u305f\u304c\uff0cVersion 5.2\u3067\u5b9f\u88c5\u3055\u308c\u305f earth_flattening \u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u306e\u6df7\u540c\u3092\u907f\u3051\u308b\u305f\u3081\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u305f\uff0e \u2019user\u2019 src/swpc_*/m_vmodel_user.F90 \u5185\u306e\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u3067\u30e6\u30fc\u30b6\u30fc\u304c\u5b9a\u7fa9\u3059\u308b\u901f\u5ea6\u69cb\u9020\u304c\u8aad\u307f\u8fbc\u307e\u308c\u308b\uff0e\u3053\u306eF90\u30d5\u30a1\u30a4\u30eb\u3092 \u5909\u66f4\u3057\u305f\u5834\u5408\u306b\u306f\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u5fc5\u8981 \u3068\u306a\u308b\uff0e\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u306e\u5f15\u6570\u306b\u3064\u3044\u3066\u306f\u30d5\u30a1\u30a4\u30eb\u5185\u30b3\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u306e\u3053\u3068\uff0e vcut \u30ab\u30c3\u30c8\u30aa\u30d5\u901f\u5ea6\uff0e \u2019lhm\u2019 \u306a\u3089\u3073\u306b \u2019grd\u2019 \u69cb\u9020\u3067\uff0c\u3053\u306e\u5024\u3088\u308a\u3082\u5c0f\u3055\u306a\u901f\u5ea6\u5024\u304c\u4e0e\u3048\u3089\u308c\u305f\u5834\u5408\u306b\u306f\uff0c\u305d\u308c\u3092\u5f37\u5236\u7684\u306b vcut \u306b\u7f6e\u304d\u63db\u3048\u308b\uff0e\u4f4e\u901f\u5ea6\u57df\u3092\u6392\u9664\u3057\u3066\u6ce2\u9577\u3068\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u306e\u6bd4\u3092\u4e00\u5b9a\u4ee5\u4e0a\u306b\u4fdd\u3064\u305f\u3081\u306b\u7528\u3044\u3089\u308c\u308b\uff0e\u3053\u306e\u5024\u304c0\u306e\u5834\u5408\u306b\u306f\u7f6e\u304d\u63db\u3048\u306f\u5b9f\u65bd\u3055\u308c\u306a\u3044\uff0e\u307e\u305f\uff0c\u6d77\u6c34\u5c64\uff08 \\mu=0 \uff09\u306e\u901f\u5ea6\u306b\u306f\u9069\u7528\u3055\u308c\u306a\u3044\uff0e munk_profile (new in version 5.2) .true. \u306e\u3068\u304d\uff0c\u6d77\u6c34\u5c64\u4e2d\u306b\u6975\u5c0f\u5024\u3092\u6301\u3064Munk's profile\u304c\u9069\u7528\u3055\u308c\u308b\uff0e .false. \u3067\u3042\u308c\u3070\u4e00\u5b9a\u5024\u304c\u7528\u3044\u3089\u308c\u308b\uff0e\u6b21\u7bc0\u306e\u8aac\u660e\u3092\u53c2\u7167\u306e\u3053\u3068\uff0e earth_flattening (new in version 5.2) .true. \u306e\u3068\u304dEarth-flattening tranformation (e.g., Aki and Richards, Box 9.2) \u306b\u3088\u308a\uff0c\u30c7\u30ab\u30eb\u30c8\u5ea7\u6a19\u7cfb\u3092\u7403\u6bbb\u69cb\u9020\u306b\u5bfe\u5fdc\u3059\u308b\u6df1\u3055\u3068\u901f\u5ea6\u306e\u975e\u7dda\u5f62\u5909\u63db\u3092\u884c\u3046\uff0e\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u9577\u8ddd\u96e2\uff08~500 km\u4ee5\u4e0a\uff09\u3084\u6df1\u767a\u5730\u9707\u306e\u5230\u9054\u6642\u523b\u306e\u6b63\u78ba\u306a\u518d\u73fe\u306b\u7279\u306b\u6709\u7528\u3067\u3042\u308b\uff0e\u305f\u3060\u3057\uff0cP-SV\u30683D\u69cb\u9020\u3067\u306f\u3053\u306e\u5909\u63db\u306f \u53b3\u5bc6\u3067\u306f\u306a\u3044 \u3053\u3068\u306b\u6ce8\u610f\uff0e Warning Version 5.2\u306b\u304a\u3051\u308b earth_flattening \u30e2\u30fc\u30c9\u306e\u5b9f\u88c5\u306f\u307e\u3060\u8a66\u9a13\u6bb5\u968e\u3067\u3042\u308b\uff0e\u5229\u7528\u306b\u306f\u5341\u5206\u6ce8\u610f\u3059\u308b\u3053\u3068\uff0e","title":"\u69cb\u9020\u30e2\u30c7\u30eb\u306e\u9078\u629e"},{"location":"ja/2._Parameters/0206_vmodel/#_3","text":"OpenSWPC \u3067\u306f\uff0c\u7a7a\u6c17\u5c64\u306f\u5bc6\u5ea6 \\rho=0.001 [g/cm {}^3 ]\uff0c\u5730\u9707\u6ce2\u901f\u5ea6 V_P=V_S=0 [km/s]\uff0c\u5185\u90e8\u6e1b\u8870 Q_P = Q_S = 10^{10} \u3092\u305d\u308c\u305e\u308c\u4eee\u5b9a\u3057\u3066\u3044\u308b\uff0e \u7a7a\u6c17\u5c64\u306f\u4e8b\u5b9f\u4e0a\u771f\u7a7a\u3068\u3057\u3066\u6271\u3048\u308b\u307b\u3069\u306b\u5c0f\u3055\u306a\u5bc6\u5ea6\u3092\u6301\u3061\uff0c\u304b\u3064\u5730\u9707\u6ce2\u901f\u5ea6\u304c0\u3067\u3042\u308b\u305f\u3081\uff0c\u7a7a\u4e2d\u97f3\u6ce2\u306f\u4f1d\u64ad\u3057\u306a\u3044\uff0e \u5f93\u3063\u3066\uff0c\u7a7a\u6c17\u5c64\u4e2d\u306e Q \u5024\u306f\u7d50\u679c\u306b\u5f71\u97ff\u3057\u306a\u3044\uff0e \u305f\u3060\u3057\uff0c\u8a08\u7b97\u30b3\u30fc\u30c9\u4e2d\u306b\u5bc6\u5ea6\u306e\u9006\u6570\u3092\u6c42\u3081\u308b\u6f14\u7b97\u304c\u3042\u308b\u305f\u3081\uff0c \u7a7a\u6c17\u5c64\u306e\u5bc6\u5ea6\u306f\u30bc\u30ed\u306b\u3057\u3066\u306f\u306a\u3089\u306a\u3044 \uff0e \u6d77\u6c34\u5c64\u3067\u306f \\rho=1.0 [g/cm {}^3 ], V_S=0.0 [km/s], Q_P = Q_S = 10^6 \u3092\u7528\u3044\u3066\u3044\u308b\uff0e \u6d77\u4e2d\u97f3\u6ce2\u306e\u6e1b\u8870\u306f\u975e\u5e38\u306b\u5c0f\u3055\u3044\u3053\u3068\u304c\u77e5\u3089\u308c\u3066\u304a\u308a\uff0c\u4e8b\u5b9f\u4e0a\u7121\u6e1b\u8870\u306b\u306a\u308b\u3088\u3046\u306aQ\u5024\u3092\u5c0e\u5165\u3057\u3066\u3044\u308b\uff0e \u307e\u305f\uff0cP\u6ce2\u901f\u5ea6\u306f V_P=1.5 [km/s] \u3067\u3042\u308b\u304c\uff0cVersion 5.2 \u4ee5\u964d\u3067\u306f munk_profile = .true. \u306b\u3059\u308b\u3053\u3068\u306b\u3088\u308a\uff0c\u4ee5\u4e0b\u306e\u5f0f\u3067\u5b9a\u307e\u308b Munk's profile \u3092\u7528\u3044\u308b\u3053\u3068\u3082\u3067\u304d\u308b\uff0e \\begin{align*} &V_P(z) = 1.5 \\times \\left[ 1.0 + 0.00737 \\left( z_b - 1 + e^{-zb} \\right) \\right] \\text{[m/s]}\\\\ &z_b = 2(z-1.3) /1.3 \\end{align*} \u305f\u3060\u3057 z \u306e\u5358\u4f4d\u306f[km]\u3067\u3042\u308b\uff0e\u3053\u306e\u69cb\u9020\u306f\u6c34\u6df11,300 m\u306bSOFAR\u30c1\u30e3\u30cd\u30eb\u306b\u8a72\u5f53\u3059\u308b\u6975\u5c0f\u3092\u6301\u3064\uff0e\u3053\u306e\u30d1\u30e9\u30e1\u30bf\u304c .false. \u306e\u5834\u5408\u306b\u306f V_P = 1.5 [km/s]\u306e\u4e00\u69d8\u306a\u5024\u304c\u7528\u3044\u3089\u308c\u308b\uff0e \u5730\u8868\u306a\u3089\u3073\u306b\u6d77\u5e95\u9762\u3067\u306f\uff0c\u5dee\u5206\u5f0f\u30922\u6b21\u7cbe\u5ea6\u5909\u66f4\u3059\u308b\u5883\u754c\u6761\u4ef6\u304c\u9069\u7528\u3055\u308c\u308b\uff08e.g., Okamoto and Takenaka, 2005 1 ; Maeda and Furumura, 2003 2 \uff09\uff0e\u6d77\u5e95\u306a\u3089\u3073\u306b\u5730\u8868\u306e\u5883\u754c\u306f\uff0c \\mu \u3068 \\lambda \u304c\u6709\u9650\u306e\u5024\u304b\u30890\u306b\u306a\u308b\uff0c\u3068\u3044\u3046\u6761\u4ef6\u3092\u7528\u3044\u3066\u81ea\u52d5\u7684\u306b\u62bd\u51fa\u3055\u308c\u308b\uff0e","title":"\u7a7a\u6c17\u304a\u3088\u3073\u6d77\u6c34\u5c64\u306e\u53d6\u308a\u6271\u3044"},{"location":"ja/2._Parameters/0206_vmodel/#_4","text":"\u901f\u5ea6\u69cb\u9020 \u2019uni\u2019 , \u2019lhm\u2019 , \u2019grd\u2019 \u305d\u308c\u305e\u308c\u306b\u5bfe\u3057\u3066\uff0c\u5e73\u5747\u901f\u5ea6\u3092\u6210\u5c64\u69cb\u9020\u3067\u3042\u305f\u3048\uff0c\u305d\u308c\u306b\u5225\u9014\u751f\u6210\u3057\u305f\u30e9\u30f3\u30c0\u30e0\u306a\u77ed\u6ce2\u9577\u901f\u5ea6\u3086\u3089\u304e\u3092\u91cd\u7573\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u30e9\u30f3\u30c0\u30e0\u306a\u901f\u5ea6\u3086\u3089\u304e \\xi \u3092\u4e8b\u524d\u306b\u751f\u6210\u3057\u3066\u304a\u304d\uff0c\u5225\u9014\u5b9a\u7fa9\u3055\u308c\u308b\u5e73\u5747\u7684\u901f\u5ea6\u69cb\u9020 V_{P0} , V_{S0} , \\rho_0 \u306b\u5bfe\u3057\u3066\uff0c \\begin{align} V_P = V_{P0} \\left( 1 + \\xi \\right) , \\, V_S = V_{S0} \\left( 1 + \\xi \\right) , \\, \\rho = \\rho_0 \\left( 1 + \\nu \\xi \\right) \\end{align} \u306e\u3088\u3046\u306b\u3086\u3089\u304e\u3092\u4e0e\u3048\u308b\uff0e\u305f\u3060\u3057\uff0c\u3053\u3053\u3067\u306f \\nu=0.8 \u3068\u3059\u308bBirch\u5247\u3092\u63a1\u7528\u3057\u3066\u3044\u308b\uff08Sato et al., 2012 3 \uff09. \u901f\u5ea6\u69cb\u9020\u306e\u6307\u5b9a\u6cd5\u306f\uff0c\u80cc\u666f\u3068\u306a\u308b\u5e73\u5747\u901f\u5ea6\u30e2\u30c7\u30eb\u306b\u5fdc\u3058\u3066\uff0c vmodel_type=\u2019uni_rmed\u2019 , \u2019lhm_rmed\u2019 , \u2019grd_rmed\u2019 \u306e3\u7a2e\u985e\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\uff0e\u307e\u305f\uff0c\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306e\u751f\u6210\u306e\u305f\u3081\u306b \u5225\u30c4\u30fc\u30eb \u304c\u63d0\u4f9b\u3055\u308c\u308b\uff0e \u4ee5\u4e0b\u3067\u89e3\u8aac\u3059\u308b3\u30e2\u30c7\u30eb\u306b\u5171\u901a\u306e\u30d1\u30e9\u30e1\u30bf\u3068\u3057\u3066\uff0c\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30bf\u3092\u7528\u3044\u308b\uff0e Parameters dir_rmed \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30c7\u30fc\u30bf\u683c\u7d0d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306f3\u6b21\u5143\u3082\u3057\u304f\u306f2\u6b21\u5143\u306e NetCDF \u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\uff0c\u30b0\u30ea\u30c3\u30c9\u6bce\u306e\u901f\u5ea6\u3086\u3089\u304e\u7387 \\xi(I,J,K) \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\uff0e\u4e26\u5217\u8a08\u7b97\u306e\u305f\u3081\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u5206\u5272\u3059\u308b\u5fc5\u8981\u306f\u7121\u304f\uff0c\u8a08\u7b97\u306e\u5404\u30ce\u30fc\u30c9\u304c\uff0c\u81ea\u30ce\u30fc\u30c9\u306e\u8a08\u7b97\u62c5\u5f53\u9818\u57df\u306e (i,j,k) \u7bc4\u56f2\u306b\u76f8\u5f53\u3059\u308b\u30c7\u30fc\u30bf\u3092\u81ea\u52d5\u7684\u306b\u62bd\u51fa\u3059\u308b\uff0e\u8a08\u7b97\u30b5\u30a4\u30ba Nx,Ny,Nz \u304c\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30d5\u30a1\u30a4\u30eb\u306e\u6b21\u5143\u9577\u3088\u308a\u3082\u5927\u304d\u3044\u5834\u5408\u306b\u306f\uff0c\u5468\u671f\u7684\u5883\u754c\u6761\u4ef6\u306b\u3088\u3063\u3066\u540c\u3058\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3092\u7e70\u308a\u8fd4\u3057\u3066\u30e2\u30c7\u30eb\u9818\u57df\u5168\u4f53\u3092\u57cb\u3081\u308b\uff0e\u5b9f\u884c\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\uff0c\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306e\u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u3068\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\u304c\u4e00\u81f4\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3057\u306a\u3044\uff0e\u8a08\u7b97\u306e\u7a7a\u9593\u683c\u5b50\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3057\u305f\u5834\u5408\uff0c\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3082\u4f5c\u6210\u3057\u76f4\u3059\u5fc5\u8981\u304c\u3042\u308b\uff0e \u306a\u304a\uff0c2\u6b21\u5143\u8a08\u7b97\u306e\u30b3\u30fc\u30c9\u306b3\u6b21\u5143\u306e\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30d0\u30a4\u30ca\u30ea\u3092\u7528\u3044\u308b\u3053\u3068\u306f\u53ef\u80fd\u3067\u3042\u308b\uff08\u305d\u306e\u5834\u5408 k=1 \u306e\u65ad\u9762\u304c\u5229\u7528\u3055\u308c\u308b\uff09\u304c\uff0c\u305d\u306e\u9006\u306f\u8a31\u3055\u308c\u306a\u3044\uff0e","title":"\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306e\u91cd\u7573"},{"location":"ja/2._Parameters/0206_vmodel/#_5","text":"vmodel=uni_rmed \u3092\u7528\u3044\u308b\uff0e vmodel=\u2019uni\u2019 \u306e\u30d1\u30e9\u30e1\u30bf\u306b\u52a0\u3048\u3066\uff0c\u4ee5\u4e0b\u304c\u5fc5\u8981\u3068\u306a\u308b\uff0e Parameters fn_rmed0 \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30d5\u30a1\u30a4\u30eb\u540d \u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f\uff0c\u5e73\u5747\u901f\u5ea6\u306b fn_rmed0 \u3067\u4e0e\u3048\u3089\u308c\u305f\u3086\u3089\u304e\u3092\u91cd\u7573\u3055\u305b\u308b\uff0e\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306b\u306f\u3086\u3089\u304e\u304c0\u3067\u3042\u308b\u3068\u898b\u306a\u3059\uff0e","title":"\u4e00\u69d8\u5747\u8cea\uff0b\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea"},{"location":"ja/2._Parameters/0206_vmodel/#_6","text":"vmodel=lhm_rmed \u3067\u306f\uff0c vmodel=\u2019lhm\u2019 \u306e\u6210\u5c64\u69cb\u9020\u306e\u5404\u5c64\u306b\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3092\u91cd\u7573\u3055\u305b\u308b\uff0e\u305d\u306e\u969b\uff0c\u5404\u5c64\u306b\u7570\u306a\u308b\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3092\u91cd\u7573\u3055\u305b\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308b\uff0e\u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f\uff0c fn_lhm \u306e\u304b\u308f\u308a\u306b\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30bf\u3092\u7528\u3044\u308b\uff1a Parameters fn_lhm_rmed \u69cb\u9020\u30ea\u30b9\u30c8 \u69cb\u9020\u30ea\u30b9\u30c8\u306f fn_lhm \u306b\u6e96\u3058\u305f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u53d6\u308b\u304c\uff0c\u305d\u306e\u6700\u53f3\u6b04\u306b\uff0c\u4ee5\u4e0b\u306e\u4f8b\u306e\u3088\u3046\u306b\u5404\u5c64\u306e\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8a18\u8f09\u3059\u308b\uff0e 1 2 3 4 5 6 7 8 9 10 # depth rho(g/cm^3) vp(km/s) vs(km/s) Qp Qs fn_rmed # ---------------------------------------------------------------------- 0 2.300 5.50 3.14 600 300 rmedia1 . nc 3 2.400 6.00 3.55 600 300 rmedia1 . nc 18 2.800 6.70 3.83 600 300 rmedia2 . nc 33 3.200 7.80 4.46 600 300 rmedia2 . nc 100 3.300 8.00 4.57 600 300 - 225 3.400 8.40 4.80 600 300 - 325 3.500 8.60 4.91 600 300 - 425 3.700 9.30 5.31 600 300 - \u3053\u306e\u4f8b\u3067\u306f\uff0c0 km\u30683 km\u306e\u5c64\u306b rmedia1.nc , 18 km\u306833 km\u306e\u5c64\u306b rmedia2.nc \u3092\u914d\u7f6e\u3059\u308b\uff0e\u305d\u308c\u3088\u308a\u6df1\u3044\u90e8\u5206\u306b\u3064\u3044\u3066\u306f\u30c0\u30df\u30fc\u6587\u5b57 \"-\" \u304c\u66f8\u304b\u308c\u3066\u3044\u308b\uff0e\u8a72\u5f53\u3059\u308b\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3051\u308c\u3070\uff0c\u3053\u308c\u3089\u306e\u9818\u57df\u306b\u306f\u901f\u5ea6\u3086\u3089\u304e\u306f\u91cd\u7573\u3055\u308c\u306a\u3044\uff0e \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30d5\u30a1\u30a4\u30eb\u306f dir_rmed \u304b\u3089\u63a2\u3055\u308c\u308b\uff0e \u30d1\u30e9\u30e1\u30bf dir_rmed \u3092\u7528\u3044\u305a\u306b fn_lhm \u306e\u6b04\u306b\u76f4\u63a5\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u3092\u66f8\u3044\u3066\u3082\u304b\u307e\u308f\u306a\u3044\u304c\uff0c\u305d\u306e\u5834\u5408\u306f\u304b\u306a\u3089\u305a\u30d5\u30a1\u30a4\u30eb\u540d\u5168\u4f53\u3092\u30af\u30a9\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u62ec\u308b\u3053\u3068\uff0e \u3086\u3089\u304e\u4e0e\u3048\u306a\u3044\u5834\u5408\u306b\u3082\uff0c\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30d5\u30a1\u30a4\u30eb\u306e\u6b04\u306b\u306f\u4f55\u3089\u304b\u306e\u6587\u5b57\u304c\u66f8\u304b\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff0e\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u6b04\u304c\u7a7a\u767d\u3060\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\uff0e","title":"\u6c34\u5e73\u6210\u5c64\uff0b\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea"},{"location":"ja/2._Parameters/0206_vmodel/#3","text":"vmodel=grd_rmed \u3067\u306f\uff0c vmodel=\u2019grd\u2019 \u306e\u6210\u5c64\u69cb\u9020\u306e\u5404\u5c64\u306b\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3092\u91cd\u7573\u3055\u305b\u308b\uff0e\u5404\u5c64\u306b\u7570\u306a\u308b\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3092\u91cd\u7573\u3055\u305b\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308a\uff0c\u304b\u3064\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306e k \uff08\u925b\u76f4\uff09\u65b9\u5411\u306e\u57fa\u6e96\u4f4d\u7f6e\u3092\u4efb\u610f\u306e\u5c64\u5883\u754c\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\uff0e \u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f\uff0c fn_grd \u306e\u304b\u308f\u308a\u306b\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30bf\u3092\u7528\u3044\u308b\uff0e Parameters fn_grdlst_rmed \u69cb\u9020\u30ea\u30b9\u30c8 \u69cb\u9020\u30ea\u30b9\u30c8\u306f fn_grdlst \u306b\u6e96\u3058\u305f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u53d6\u308b\u304c\uff0c\u4ee5\u4e0b\u306e\u4f8b\u306e\u3088\u3046\u306b\uff0c\u53f3\u6b04\u306b\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30d5\u30a1\u30a4\u30eb\u540d\u3068\u57fa\u6e96\u5c64\u306e\u756a\u53f7\u3092\u8a18\u8ff0\u3059\u308b\uff0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # grd filename rho vp vs QP QS sw fn_rmed ref # ----------------------------------------------------------------------- ' eJIVSM_01_TAB_ . grd ' 1.80 1.70 0.35 119 70 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_02_BSM_ . grd ' 1.95 1.80 0.50 170 100 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_03_BSM_ . grd ' 2.00 2.00 0.60 204 120 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_04_BSM_ . grd ' 2.05 2.10 0.70 238 140 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_05_BSM_ . grd ' 2.07 2.20 0.80 272 160 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_06_BSM_ . grd ' 2.10 2.30 0.90 306 180 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_07_BSM_ . grd ' 2.15 2.40 1.00 340 200 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_08_BSM_ . grd ' 2.20 2.70 1.30 442 260 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_09_BSM_ . grd ' 2.25 3.00 1.50 510 300 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_10_BSM_ . grd ' 2.30 3.20 1.70 578 340 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_11_BSM_ . grd ' 2.35 3.50 2.00 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_12_BSM_ . grd ' 2.45 4.20 2.40 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_13_BSM_ . grd ' 2.60 5.00 2.90 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_14_BSM_ . grd ' 2.65 5.50 3.20 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_15_UPC_ . grd ' 2.70 5.80 3.40 680 400 0 ' rmed3d_1 . nc ' 0 ' eJIVSM_16_LWC_ . grd ' 2.80 6.40 3.80 680 400 0 ' rmed3d_3 . nc ' 0 ' eJIVSM_17_CTM_ . grd ' 3.20 7.50 4.50 850 500 0 ' rmed3d_3 . nc ' 0 ' eJIVSM_18_PH2_ . grd ' 2.40 5.00 2.90 340 200 1 ' rmed3d_2 . nc ' 18 ' eJIVSM_19_PH3_ . grd ' 2.90 6.80 4.00 510 300 0 ' rmed3d_2 . nc ' 18 ' eJIVSM_20_PHM_ . grd ' 3.20 8.00 4.70 850 500 0 ' rmed3d_3 . nc ' 18 ' eJIVSM_21_PA2_ . grd ' 2.60 5.40 2.80 340 200 2 ' rmed3d_2 . nc ' 21 ' eJIVSM_22_PA3_ . grd ' 2.80 6.50 3.50 510 300 0 ' rmed3d_2 . nc ' 21 ' eJIVSM_23_PAM_ . grd ' 3.40 8.10 4.60 850 500 0 ' rmed3d_3 . nc ' 21 \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u8a18\u8f09\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f lhm_rmed \u306e\u5834\u5408\u3068\u540c\u69d8\u3067\u3042\u308b\uff0e \u6700\u53f3\u6b04\u306e\u6570\u5b57\u3067\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u5c64\u306e\u925b\u76f4\u65b9\u5411\u306e\u57fa\u6e96\u3068\u306a\u308b\u9762\u3092\u6307\u5b9a\u3059\u308b\uff0e \u3053\u306e\u5024\u304c0\u3067\u3042\u308c\u3070\uff0c uni_rmed \u3084 lhm_rmed \u306a\u3069\u3068\u540c\u69d8\u306b\u30e2\u30c7\u30eb\u306e\u925b\u76f4\u65b9\u5411\u306e\u30b0\u30ea\u30c3\u30c9\u4f4d\u7f6e\u306e\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u304c\u305d\u306e\u307e\u307e\u7528\u3044\u3089\u308c\u308b\uff0e\u3053\u3053\u306b\u975e\u30bc\u30ed\u306e\u5024 NR \u304c\u6307\u5b9a\u3055\u308c\u308b\u3068\uff0c NR \u756a\u76ee\u306e\u5c64\u306e\u4e0a\u9762\u4f4d\u7f6e\u304b\u3089\u306e\u76f8\u5bfe\u30b0\u30ea\u30c3\u30c9\u4f4d\u7f6e\u306e\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u304c\u7528\u3044\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u308b\uff0e\u305f\u3068\u3048\u3070\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\uff0c\u7b2c18\u5c64\u304b\u308920\u5c64\u307e\u3067\u306f18\u5c64\u76ee\u304c\uff0c21\u304b\u308923\u5c64\u306f21\u5c64\u306e\u305d\u308c\u305e\u308c\u30d7\u30ec\u30fc\u30c8\u4e0a\u9762\u304c\u57fa\u6e96\u5024\u306b\u306a\u3063\u3066\u3044\u308b\uff0e\u3053\u308c\u306b\u3088\u308a\uff0c\u30d7\u30ec\u30fc\u30c8\u5185\u306e\u4e0d\u5747\u8cea\u69cb\u9020\u306f\u6c34\u5e73\u9762\u3067\u306f\u306a\u304f\uff0c\u30d7\u30ec\u30fc\u30c8\u6b63\u9762\u306b\u6cbf\u3063\u305f\u659c\u3081\u306e\u3086\u3089\u304e\u69cb\u9020\u3092\u5c0e\u5165\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e","title":"3\u6b21\u5143\u30e9\u30f3\u30c0\u30e0\u4e0d\u5747\u8cea\u69cb\u9020"},{"location":"ja/2._Parameters/0206_vmodel/#_7","text":"\u901f\u5ea6\u3086\u3089\u304e\u306e\u30d1\u30e9\u30e1\u30bf \\epsilon \u304c\u5927\u304d\u304f\u306a\u308b\u3068\uff0c\u5c40\u6240\u7684\u306b\u975e\u5e38\u306b\u5730\u9707\u6ce2\u901f\u5ea6\u304c\u5927\u304d\u304f\u3042\u308b\u3044\u306f\u5c0f\u3055\u304f\u306a\u308a\uff0c\u4ee5\u4e0b\u306e3\u30b1\u30fc\u30b9\u3067\u8a08\u7b97\u304c\u4e0d\u53ef\u80fd\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u308b\uff0e \\xi>0 \u306e\u5834\u5408\u306b V=(1+\\xi)V_0 \u304c\u5dee\u5206\u6cd5\u306e\u5b89\u5b9a\u6761\u4ef6\u304b\u3089\u8a31\u5bb9\u3055\u308c\u308b\u6700\u5927\u901f\u5ea6\u3092\u8d85\u3048\u308b\uff0e \\xi<-1.0 \u306e\u5834\u5408\uff0c\u5730\u9707\u6ce2\u901f\u5ea6\u304c\u7269\u7406\u7684\u306b\u3042\u308a\u3048\u306a\u3044\u8ca0\u306e\u5024\u3092\u53d6\u308b\uff0e \\xi<-1.25 \u306e\u5834\u5408\uff0c\u5bc6\u5ea6\u304c\u7269\u7406\u7684\u306b\u3042\u308a\u3048\u306a\u3044\u8ca0\u306e\u5024\u3092\u53d6\u308b\uff0e \u305d\u3053\u3067\uff0c OpenSWPC \u3067\u306f\uff0c\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3092\u9802\u4e0a\u3055\u305b\u305f\u7d50\u679c\u306e\u901f\u5ea6\u3092 vcut \\le v \\le 0.95 \\times v_\\text{max} \u306b\u5236\u9650\u3059\u308b\uff0e\u3053\u3053\u3067 vcut \u306f\u4f4e\u901f\u5ea6\u6253\u3061\u5207\u308a\u306e\u305f\u3081\u306e\u5165\u529b\u30d1\u30e9\u30e1\u30bf\uff0c v_\\text{max} \u306f\u5b89\u5b9a\u6761\u4ef6\u304b\u3089\u8a31\u5bb9\u3055\u308c\u308b\u6700\u5927\u901f\u5ea6\uff08\u81ea\u52d5\u7684\u306b\u8a08\u7b97\uff09\u3067\u3042\u308b\uff0e\u3055\u3089\u306b\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30bf\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\uff0c\u5bc6\u5ea6\u304c\u8ca0\u306b\u306a\u308b\u3053\u3068\u3092\u9632\u6b62\u3057\u3066\u3044\u308b\uff0e Parameters rhomin \u6700\u4f4e\u5bc6\u5ea6\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u306f1.0 g/cm {}^3 \uff09 Okamoto, T., and H. Takenaka (2005). Fluid-solid boundary implementation in the velocity-stress finite- difference method, Zisin 2 , 57 , 355\u2013364, doi:10.4294/zisin1948.57.3_355. (in Japanese with English Abstract) (article link) \u21a9 Maeda, T., and T. Furumura (2013), FDM simulation of seismic waves, ocean acoustic waves, and tsunamis based on tsunami-coupled equations of motion, Pure Appl. Geophys. , 170 (1-2), 109\u2013127, doi:10.1007/s00024-011-0430-z. (article link) \u21a9 Sato, H., M. C. Fehler, and T. Maeda (2012), Seismic Wave Propagation and Scattering in the Heterogeneous Earth: Second Edition , Springer Berlin Heidelberg, Berlin, Heidelberg, doi:10.1007/978-3-642-23029-5. \u21a9","title":"\u901f\u5ea6\u3086\u3089\u304e\u306e\u6253\u3061\u5207\u308a"},{"location":"ja/2._Parameters/0207_source/","text":"\u9707\u6e90\u306e\u6307\u5b9a \u00b6 \u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570 \u00b6 \u3053\u3053\u3067\u306f\u672c\u30b3\u30fc\u30c9\u3067\u5229\u7528\u53ef\u80fd\u306a\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\uff08\u9707\u6e90\u6642\u9593\u95a2\u6570\uff09 \\dot{M}(t) \u3068\u305d\u306e\u30b9\u30da\u30af\u30c8\u30eb\u3092\u6574\u7406\u3059\u308b\uff0e\u4ee5\u4e0b\u306e\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\u306f\uff0c\u3059\u3079\u3066\u7d99\u7d9a\u6642\u9593\uff08\u3082\u3057\u304f\u306f\u7279\u5fb4\u7684\u6642\u9593\uff09 T_R \u3092\u3082\u3061\uff0c\u7dcf\u30e2\u30fc\u30e1\u30f3\u30c8\u304c 1 \u306b\u898f\u683c\u5316\u3055\u308c\u3066\u3044\u308b\uff0e OpenSWPC \u3067\u306f\uff0c\u30d1\u30e9\u30e1\u30bf stftype \u306e\u9078\u629e\u306b\u3088\u308a\uff0c\u4ee5\u4e0b\u306e\u9707\u6e90\u6642\u9593\u95a2\u6570\u304c\u9078\u629e\u3067\u304d\u308b\uff0e Box-car function ( boxcar ) \\begin{align} \\dot{m}^ R \\left(t\\right) &= \\frac{1}{T_R} & \\begin{array}{r} ( 0 \\le t \\le T_R) \\\\ \\end{array} \\end{align} Triangle function ( triangle ) \\begin{align} \\dot{m}^ T \\left(t\\right) = \\begin{cases} 4t/T_R^2 & ( 0 \\le t \\le T_R/2 ) \\\\ -4(t-T_R)/T_R^2 & ( T_R/2 < t \\le T_R ) \\end{cases} \\end{align} Herrmann function ( herrmann ) \\begin{align} \\dot{m}^ H \\left(t\\right) = \\begin{cases} 16 t^2 / T_R^3 & ( 0 \\le t \\le T_R/4 ) \\\\ -2 ( 8 t^2 - 8 t T_R + T_R^2 ) / T_R^3 & ( T_R/4 < t \\le 3T_R/4 ) \\\\ 16 \\left( t - T_R \\right)^2 / T_R^3 & (3T_R/4 < t \\le T_R ) \\end{cases} \\end{align} Cosine function ( cosine ) \\begin{align} \\dot{m}^ C \\left(t\\right) = \\frac{1}{T_R} \\left[ 1 - \\cos \\left(\\frac{2 \\pi t}{T_R} \\right) \\right] \\quad ( 0 \\le t \\le T_R) \\end{align} K\u00fcpper wavelet ( kupper ) \\begin{align} \\dot{m}^K \\left( t \\right ) &= \\frac{3 \\pi}{4 T_R} \\sin^3\\left( \\frac{\\pi t}{T_R} \\right) \\quad ( 0 \\le t \\le T_R) \\end{align} t-exp type function ( texp ) \\begin{align} \\dot{m}^{E} \\left( t \\right) &= \\frac{(2 \\pi)^2 t}{T_R^2} \\exp\\left[ - \\frac{ 2 \\pi t}{T_R}\\right] \\quad ( 0 \\le t ) \\end{align} \u305d\u308c\u305e\u308c\u306e\u9707\u6e90\u6642\u9593\u95a2\u6570\u5f62\u72b6\u3068\u305d\u306e\u632f\u5e45\u30b9\u30da\u30af\u30c8\u30eb\u3092\u4e0b\u56f3\u306b\u793a\u3059\uff0e \u9707\u6e90\u6642\u9593\u95a2\u6570 \u9707\u6e90\u6642\u9593\u95a2\u6570 \\dot{m}(t) \uff08\u5de6\uff09\u3068\u305d\u306e\u632f\u5e45\u30b9\u30da\u30af\u30c8\u30eb\uff08\u53f3\uff09\uff0e \u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\u306e\u30b9\u30da\u30af\u30c8\u30eb\u306f\uff0c f\\gg 1/T_R \u306e\u6761\u4ef6\u4e0b\u3067\uff0c\u305d\u308c\u305e\u308c f^{-1} \u304b\u3089 f^{-4} \u306e\u30ed\u30fc\u30eb\u30aa\u30d5\u3092\u6301\u3064\uff0e \u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u6570\u5024\u5206\u6563\u3092\u8d77\u3053\u3055\u306a\u3044\u305f\u3081\u306b\u306f\uff0c\u5bfe\u8c61\u5468\u6ce2\u6570\u5e2f\u306e\u4e0a\u9650\u3067\u5145\u5206\u306b\u9707\u6e90\u306e\u30b9\u30da\u30af\u30c8\u30eb\u304c\u5c0f\u3055\u304f\u306a\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e \u305d\u306e\u3088\u3046\u306a\u6761\u4ef6\u3092\u6e80\u305f\u3059\u6700\u5927\u5468\u6ce2\u6570\u3068\u3057\u3066\uff0c\u3053\u3053\u3067\u306f f_\\text{max}=2/T_R \uff08\u56f3\u4e2d\u8d64\u70b9\u7dda\uff09\u3092\u63a1\u7528\u3059\u308b\uff0e \u3053\u306e f_\\text{max} \u4ee5\u4e0b\u306e\u5468\u6ce2\u6570\u3067\u306f\u5206\u6563\u3092\u8d77\u3053\u3055\u306a\u3044\u3088\u3046\u306b\u30e2\u30c7\u30eb\u30d1\u30e9\u30e1\u30bf\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308c\u3070\u3088\u3044\uff0e \u4e00\u65b9\uff0c\u30b9\u30da\u30af\u30c8\u30eb\u306e\u5fdc\u7b54\u304c\u307b\u307c\u4e00\u5b9a\u306b\u306a\u308b\uff0c\u3064\u307e\u308a\u9707\u6e90\u6642\u9593\u95a2\u6570\u304c\u30c7\u30eb\u30bf\u95a2\u6570\u3068\u898b\u306a\u305b\u308b\u306e\u306f\u6982\u306d f \\le 1/(2 T_R) \uff08\u56f3\u4e2d\u9752\u70b9\u7dda\uff09\u3067\u3042\u308b\uff0e \u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u9707\u6e90 \u00b6 \u9707\u6e90\u30e1\u30ab\u30cb\u30ba\u30e0\u306f6\u6210\u5206\u306e\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\uff0c\u3082\u3057\u304f\u306f\u30c0\u30d6\u30eb\u30ab\u30c3\u30d7\u30eb\u9707\u6e90\u3092\u7279\u5fb4\u4ed8\u3051\u308b strike , dip , rake \u306e3\u3064\u306e\u89d2\u5ea6\u3067\u4e0e\u3048\u3089\u308c\u308b\uff0e\u307e\u305f\uff0c\u9707\u6e90\u4f4d\u7f6e\u3092\u8a08\u7b97\u5ea7\u6a19\u7cfb\u3082\u3057\u304f\u306f\u5730\u7406\u5ea7\u6a19\u7cfb\u3067\u3082\u4e0e\u3048\u3089\u308c\u308b\uff0e\u3055\u3089\u306b\uff0c\u9707\u6e90\u306e\u5927\u304d\u3055\u3092\u8868\u3059\u65b9\u6cd5\u306b\u5730\u9707\u30e2\u30fc\u30e1\u30f3\u30c8 M_0 \uff0c\u30e2\u30fc\u30e1\u30f3\u30c8\u30de\u30b0\u30cb\u30c1\u30e5\u30fc\u30c9 M_W \uff0c\u3059\u3079\u308a\u91cf D \u3068\u65ad\u5c64\u9762\u7a4d S \u306e3\u901a\u308a\u304c\u3042\u308b\uff0e\u3053\u308c\u3089\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u3088\u308a\uff0c\u3042\u308f\u305b\u306610\u7a2e\u985e\u306e\u9707\u6e90\u30e1\u30ab\u30cb\u30ba\u30e0\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u3042\u308b\uff0e \u9707\u6e90\u306f\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\u3092\u7528\u3044\u3066\u5fdc\u529b\u964d\u4e0b\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u308b\uff0e\u8981\u7d20\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\u306f\u4e0a\u8ff0\u306e6\u7a2e\u985e\u304b\u3089\u9078\u3073\uff0c\u95a2\u6570\u540d\u3092\u30d1\u30e9\u30e1\u30bf\u3068\u3057\u3066\u4e0e\u3048\u308b\uff0e\u3069\u306e\u95a2\u6570\u3067\u3042\u3063\u3066\u3082\uff0c\u9707\u6e90\u306e\u7834\u58ca\u958b\u59cb\u6642\u9593 T_0 \u3068\u7d99\u7d9a\u6642\u9593 T_R \uff0c\u306a\u3089\u3073\u306b\u5168\u30e2\u30fc\u30e1\u30f3\u30c8\uff08\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\u306e\u6642\u9593\u7a4d\u5206\u5024\uff09 M_0 \u304c\u30d1\u30e9\u30e1\u30bf\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u308b\uff0e OpenSWPC \u306f\u8907\u6570\u306e\u70b9\u9707\u6e90\u3092\u7528\u3044\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u9707\u6e90\u30d5\u30a1\u30a4\u30eb\u306b\u8907\u6570\u884c\u306e\u9707\u6e90\u8981\u7d20\u304c\u3042\u308c\u3070\uff0c\u305d\u308c\u3089\u3059\u3079\u3066\u306e\u8981\u7d20\uff08\u306e\u3046\u3061\u8a08\u7b97\u30e2\u30c7\u30eb\u9818\u57df\u5185\u306b\u3042\u308b\u70b9\uff09\u304b\u3089\u5730\u9707\u52d5\u3092\u653e\u5c04\u3055\u305b\u308b\uff0e\u9707\u6e90\u4f4d\u7f6e\u3068\u7834\u58ca\u958b\u59cb\u6642\u523b\u7b49\u3092\u5c11\u3057\u305a\u3064\u305a\u3089\u3059\u3053\u3068\u306b\u3088\u308a\uff0c\u64ec\u4f3c\u7684\u306b\u6709\u9650\u65ad\u5c64\u9762\u304b\u3089\u306e\u7834\u58ca\u3092\u518d\u73fe\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308b\uff0e \u306a\u304a\uff0c\u9707\u6e90\u30d5\u30a1\u30a4\u30eb\u306f\uff0c\u305d\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u95a2\u308f\u3089\u305a\u3059\u3079\u3066 # \u304b\u3089\u59cb\u307e\u308b\u884c\u306f\u30b3\u30e1\u30f3\u30c8\u884c\u3068\u898b\u306a\u3055\u308c\u308b\uff0e \u7279\u6b8a\u306a\u6761\u4ef6\u3068\u3057\u3066\uff0c\u30d1\u30e9\u30e1\u30bf sdep_fit \u306b\u3088\u308a\uff0c\u9707\u6e90\u4f4d\u7f6e\u3092\u901f\u5ea6\u69cb\u9020\u30e2\u30c7\u30eb\u306e\u30d7\u30ec\u30fc\u30c8\u5883\u754c\u4e0a\u306b\u7f6e\u304f\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\uff0e\u3053\u306e\u5834\u5408\u306f\uff0c\u9707\u6e90\u30d5\u30a1\u30a4\u30eb\u306e\u6df1\u3055\u6307\u5b9a\u306f\u7121\u8996\u3055\u308c\u308b\uff0e\u3053\u306e\u5834\u5408\uff0c\u69cb\u9020\u30e2\u30c7\u30eb\u306e\u6307\u5b9a\u3067\u8a72\u5f53\u3059\u308b\u756a\u53f7\u306e\u5c64\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e Parameters stf_format \u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u306e\u8868\u73fe\u306e\u7a2e\u5225\uff0e\u4ee5\u4e0b10\u7a2e\u985e\u304b\u3089\u9078\u3076\uff0e 'xym0ij' : x , y , z , T_0 , T_R , M_0 , m_{xx} , m_{yy} , m_{zz} , m_{yz} , m_{xz} , m_{xy} 'xym0dc' : x , y , z , T_0 , T_R , M_0 , strike, dip, rake 'llm0ij' : lon, lat, z , T_0 , T_R , M_0 , m_{xx} , m_{yy} , m_{zz} , m_{yz} , m_{xz} , m_{xy} 'llm0dc' : lon, lat, z , T_0 , T_R , M_0 , strike, dip, rake 'xymwij' : x , y , z , T_0 , T_R , M_W , m_{xx} , m_{yy} , m_{zz} , m_{yz} , m_{xz} , m_{xy} 'xymwdc' : x , y , z , T_0 , T_R , M_W , strike, dip, rake 'llmwij' : lon, lat, z , T_0 , T_R , M_W , m_{xx} , m_{yy} , m_{zz} , m_{yz} , m_{xz} , m_{xy} 'llmwdc' : lon, lat, z , T_0 , T_R , M_W , strike, dip, rake 'lldsdc' : lon, lat, z , T_0 , T_R , D , S , strike, dip, rake 'xydsdc' : x , y , z , T_0 , T_R , D , S , strike, dip, rake 'psmeca' : lon, lat, z , M_{rr} , M_{tt} , M_{ff} , M_{rt} , M_{rf} , M_{tf} , iexp (new in v5.2) \u305d\u308c\u305e\u308c\u306e\u91cf\u306e\u5358\u4f4d\u306f\uff0c x , y , z \u306f[km]\uff0c M_0 \u3068 m_{ij} \u306f [Nm], T_0 , T_R \u306f [s], \u89d2\u5ea6\u5909\u6570\u306f\u3059\u3079\u3066 [degree]\uff0c\u3059\u3079\u308a\u91cf D \u306f [m]\uff0c\u9762\u7a4d S \u306f[m {}^2 ]\u304c\u305d\u308c\u305e\u308c\u4eee\u5b9a\u3055\u308c\u3066\u3044\u308b\uff0e stftype \u8981\u7d20\u9707\u6e90\u6642\u9593\u95a2\u6570\uff08\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\uff09\u306e\u7a2e\u985e\uff0e 'boxcar' \uff08\u7bb1\u5f62\u95a2\u6570\uff09, 'triangle' \uff08\u4e09\u89d2\u5f62\uff09, 'herrmann' \uff08Herrmann\u95a2\u6570\uff09, 'kupper' \uff08Kupper wavelet\uff09, 'cosine' \uff08 \\cos \u95a2\u6570\uff09, 'texp' \uff08 t \\exp \u95a2\u6570\uff09\u304b\u3089\u9078\u629e\u3059\u308b\uff0e fn_stf \u9707\u6e90\u60c5\u5831\u30d5\u30a1\u30a4\u30eb\uff0e\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u4e2d\u306b stf_format \u3067\u6307\u5b9a\u3055\u308c\u305f\u66f8\u5f0f\u3067\u9707\u6e90\u60c5\u5831\u3092\u8a18\u8f09\u3059\u308b\uff0e sdep_fit \u9707\u6e90\u306e\u6df1\u3055\u3092\u5f37\u5236\u7684\u306b\u5883\u754c\u306b\u5408\u308f\u305b\u308b\u304b\u3069\u3046\u304b\u306e\u6307\u5b9a\uff0e 'asis' : \u306a\u306b\u3082\u3057\u306a\u3044\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09 'bd{i}' (i=1,2, \\cdots 9): i \u756a\u76ee\u306e\u5883\u754c\u306b\u5408\u308f\u305b\u308b\uff0e \u5730\u9707\u306e\u5927\u304d\u3055\u306e\u6307\u5b9a \u00b6 \u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u6210\u5206\u3092\u76f4\u63a5\u4e0e\u3048\u308b\u5834\u5408\u306b\u306f\uff0c\u5730\u9707\u30e2\u30fc\u30e1\u30f3\u30c8 M_0 \u3042\u308b\u3044\u306f\u30e2\u30fc\u30e1\u30f3\u30c8\u30de\u30b0\u30cb\u30c1\u30e5\u30fc\u30c9 M_W \u306e\u6307\u5b9a\u3068\uff0c\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u6210\u5206\u306e\u3042\u3044\u3060\u306b\uff0c\u5927\u304d\u3055\u306b\u95a2\u3059\u308b\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u304c\u3042\u308b\uff0e\u305f\u3068\u3048\u3070\uff0c\u4ee5\u4e0b\u306e2\u3064\u306e\u6307\u5b9a\u306f\u5b8c\u5168\u306b\u7b49\u4fa1\u3067\u3042\u308b\uff1a M_0 m_{xx} m_{yy} m_{zz} m_{yz} m_{xz} m_{xy} 1e15 1.0 1.0 1.0 0.0 0.0 0.0 1.0 1e15 1e15 1e15 0.0 0.0 0.0 \u5165\u529b\u3055\u308c\u305f\u30d1\u30e9\u30e1\u30bf\u306b\u57fa\u3065\u304d\uff0c\u6700\u7d42\u7684\u306a\u5730\u9707\u30e2\u30fc\u30e1\u30f3\u30c8 \\overline{M}_0 \u306f\uff0c \\overline{M}_0 =\\times \\frac{ M_0 }{\\sqrt{2}} \\sqrt{m_{xx}^2 +m_{yy}^2 +m_{zz}^2 + 2(m_{yz}^2+m_{xz}^2+m_{xy}^2)} \u306b\u3088\u308a\u5b9a\u307e\u308b\uff0e\u3082\u3057\u8907\u6570\u306e\u70b9\u9707\u6e90\u304c\u6307\u5b9a\u3055\u308c\u308b\u5834\u5408\u306b\u306f\u4e0a\u5f0f\u306e\u3059\u3079\u3066\u306e\u5929\u9707\u6e90\u8981\u7d20\u306b\u3064\u3044\u3066\u306e\u548c\u304c\u5168\u5730\u9707\u30e2\u30fc\u30e1\u30f3\u30c8\u3068\u306a\u308b\uff0e2\u6b21\u5143P-SV, SH\u8a08\u7b97\u306e\u5834\u5408\u306b\u306f\uff0c\u305d\u308c\u305e\u308c\u306e\u65ad\u9762\u3067\u6709\u52b9\u306a\u6210\u5206\u306e\u307f\u304c\u8a55\u4fa1\u3055\u308c\u308b\uff0e\u3053\u306e\u3088\u3046\u306b\u5927\u304d\u3055\u304c\u5206\u96e2\u3067\u304d\u308b\u8a18\u6cd5\u3092\u63a1\u7528\u3057\u3066\u3044\u308b\u305f\u3081\uff0c\u901a\u5e38\u306f\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u6210\u5206\u306f \\sqrt{m_{xx}^2 +m_{yy}^2 +m_{zz}^2 + 2(m_{yz}^2+m_{xz}^2+m_{xy}^2)} = 1 \u3068\u898f\u683c\u5316\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u6697\u306b\u671f\u5f85\u3055\u308c\u3066\u3044\u308b\uff0e\u304b\u306a\u3089\u305a\u3057\u3082\u305d\u3046\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u304c\uff0c\u3053\u306e\u898f\u683c\u5316\u304c\u3055\u308c\u3066\u3044\u306a\u3044\u3068\uff0c\u30d1\u30e9\u30e1\u30bf\u3068\u3057\u3066\u5165\u529b\u3057\u305f M_W \u3084 M_0 \u3068\u5b9f\u969b\u306b\u8a08\u7b97\u3055\u308c\u308b\u5730\u9707\u306e\u5927\u304d\u3055\u304c\u7570\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\uff0e psmeca \u6307\u5b9a \u00b6 GMT \u306e psmeca -Sm \u3084 globalcmt \u3067\u6a19\u6e96\u7684\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u9707\u6e90\u3092\u6307\u5b9a\u3059\u308b\uff0e\u6307\u5b9a\u3055\u308c\u308b\u306e\u306f\u9707\u6e90\u306e\u7def\u5ea6\u7d4c\u5ea6\u6df1\u3055\u306a\u3089\u3073\u306b\u6975\u5ea7\u6a19\u7cfb\u306b\u304a\u3051\u308b\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\uff08 M_{rr} , M_{tt} , M_{ff} , M_{rt} , M_{rf} , M_{tf} \u306e\u9806\uff09\u3068\u5730\u9707\u30e2\u30fc\u30e1\u30f3\u30c8\u306e\u6307\u6570\u90e8\uff08\u6574\u6570\uff09\u3067\u3042\u308b\uff0e\u6307\u6570\u90e8\u306f\u6163\u4f8b\u306b\u5f93\u3044 dyn-cm \u5358\u4f4d\u3067\u4e0e\u3048\u3089\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f\u3055\u308c\u305f\u3044\uff0e\u3053\u308c\u3089\u306e\u30d1\u30e9\u30e1\u30bf\u304cOpenSWPC\u5185\u90e8\u3067\u76f4\u4ea4\u5ea7\u6a19\u7cfb\u306b\u304a\u3051\u308b\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u306b\u5909\u63db\u3055\u308c\u3066\u8a08\u7b97\u306b\u7528\u3044\u3089\u308c\u308b\uff0e\u9707\u6e90\u306b\u304a\u3051\u308b\u7834\u58ca\u958b\u59cb\u6642\u9593 T_0 \u306f 0 \uff0c\u30e9\u30a4\u30ba\u30bf\u30a4\u30e0 T_R \u306f Ekstr\u00f6m et al. (2012)[^Ekstr\u00f6m2012] \u306b\u57fa\u3065\u304d\uff0c\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0 T_R = 2 \\times 1.05 \\times 10^{-8} \\times M_0^{1/3} \u306b\u3088\u3063\u3066\u5b9a\u3081\u308b\uff0e\u305f\u3060\u3057\u3053\u3053\u3067\u3082 M_0 \u306fdyn-cm\u5358\u4f4d\u306e\u5024\u3067\u3042\u308b\uff0e \u306a\u304a\uff0c\u672c\u6307\u5b9a\u306f version 5.2 \u304b\u3089\u6709\u52b9\u3068\u306a\u308b\uff0e \u6c34\u5e73\u56de\u8ee2\u306b\u95a2\u3059\u308b\u6ce8\u610f Version 5.2 \u73fe\u5728\uff0c\u30d1\u30e9\u30e1\u30bf phi \\neq0 \u306e\u3068\u304d\uff0c\u9707\u6e90\u30e1\u30ab\u30cb\u30ba\u30e0\u3092 strike, dip, rake \u3067\u4e0e\u3048\u305f\u3068\u304d\u3068\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u3067\u4e0e\u3048\u305f\u3068\u304d\u3067\uff0c\u30e1\u30ab\u30cb\u30ba\u30e0\u306e\u56de\u8ee2\u306e\u6319\u52d5\u304c\u7570\u306a\u308b\uff0e \u524d\u8005 strike, dip, rake \u3067\u4e0e\u3048\u305f\u3068\u304d\u306b\u306f\uff0c phi \u306e\u5024\u306b\u95a2\u308f\u3089\u305a strike \u306f\u5317\u304b\u3089\u6e2c\u3063\u305f\u3082\u306e\u3068\u3057\u3066\u8a08\u7b97\u3055\u308c\u308b\uff0e\u4e00\u65b9\uff0c\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u306f\u3042\u304f\u307e\u3067\u3082\u56de\u8ee2\u5f8c\u306e x , y \u5ea7\u6a19\u306b\u5bfe\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u4eee\u5b9a\u3055\u308c\u308b\uff0e\u3064\u307e\u308a\uff0c\u30ab\u30bf\u30ed\u30b0\u304b\u3089\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u6210\u5206\u3092\u5229\u7528\u3057\uff0c\u304b\u3064\u5ea7\u6a19\u7cfb\u3092\u6c34\u5e73\u56de\u8ee2\u3057\u3066\u8a08\u7b97\u3059\u308b\u3068\u304d\u306b\u306f\uff0c\u30e6\u30fc\u30b6\u30fc\u304c\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u306e\u56de\u8ee2\u8a08\u7b97\u3092\u81ea\u3089\u884c\u3063\u3066\u30d1\u30e9\u30e1\u30bf\u3068\u3057\u3066\u4e0e\u3048\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff0e \u3053\u308c\u3089\u306e\u6319\u52d5\u304c\u7cfb\u7d71\u7684\u3067\u306a\u3044\u3053\u3068\u306f\u958b\u767a\u8005\u3082\u8a8d\u8b58\u3057\u3066\u304a\u308a\uff0c\u5c06\u6765\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u6319\u52d5\u304c\u5909\u66f4\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\uff0e \u5b9f\u4f53\u529b\u30e2\u30fc\u30c9 \u00b6 \u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u9707\u6e90\u306b\u4ee3\u308f\u308a\uff0c\u5b9f\u4f53\u529b\u3092\u9707\u6e90\u3068\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\uff0e \u3053\u306e\u5834\u5408\uff0c m_{ij} \u306e\u304b\u308f\u308a\u306b f_x , f_y , f_z \u306e\u529b\u6e90\u3092\u76f4\u63a5\u6307\u5b9a\u3059\u308b\uff0e \u5b9f\u4f53\u529b\u306f\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u9707\u6e90\u3068\u540c\u69d8\u306e\u30d9\u30eb\u578b\u306e\u9707\u6e90\u6642\u9593\u95a2\u6570\u3092\u7528\u3044\u3066\u8a08\u7b97\u3055\u308c\u308b\uff0e \u4efb\u610f\u500b\u306e\u70b9\u9707\u6e90\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304c\uff0c \u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u306b\u3088\u308b\u9707\u6e90\u3068\u5b9f\u4f53\u529b\u306b\u3088\u308b\u9707\u6e90\u304b\u3089\u306e\u540c\u6642\u8f3b\u5c04\u306f\uff0c\u4e00\u5ea6\u306e\u5b9f\u884c\u3067\u306f\u8a08\u7b97\u3067\u304d\u306a\u3044\uff0e Parameters bf_mode \u5b9f\u4f53\u6ce2\u30e2\u30fc\u30c9\u306eON/OFF\u3092\u8a2d\u5b9a\u3059\u308b\uff0e .true. \u3067ON\u306b\u306a\u308b\uff0e stf_format \u9707\u6e90\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff08\u4e0b\u8a18\u53c2\u7167\uff09\uff0e\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u9707\u6e90\u3068\u306f\u8a18\u6cd5\u304c\u7570\u306a\u308b\u306e\u3067\u6ce8\u610f\uff0e 'xy' : x, y, z, T_0 , T_R , f_x , f_y , f_z 'll' : lon, lat , z, T_0 , T_R , f_x , f_y , f_z stftype \u8981\u7d20\u9707\u6e90\u6642\u9593\u95a2\u6570\uff08\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\uff09\u306e\u7a2e\u985e\uff0e\u6307\u5b9a\u6cd5\u306f\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u9707\u6e90\u306b\u540c\u3058\uff0e fn_stf \u9707\u6e90\u60c5\u5831\u30d5\u30a1\u30a4\u30eb\uff0e\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u3068\u306f\u8a18\u6cd5\u304c\u7570\u306a\u308b\u306e\u3067\u6ce8\u610f\uff0e sdep_fit \u9707\u6e90\u306e\u6df1\u3055\u3092\u5f37\u5236\u7684\u306b\u5883\u754c\u306b\u5408\u308f\u305b\u308b\u304b\u3069\u3046\u304b\u306e\u6307\u5b9a\uff0e 'asis' : \u306a\u306b\u3082\u3057\u306a\u3044\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09 'bd{i}' (i=1,2, \\cdots 9): i \u756a\u76ee\u306e\u5883\u754c\u306b\u5408\u308f\u305b\u308b\uff0e \u5e73\u9762\u6ce2\u30e2\u30fc\u30c9 \u00b6 \u9707\u6e90\u304b\u3089\u306e\u8f3b\u5c04\u306e\u4ee3\u308f\u308a\u306b\uff0c\u4e0b\u65b9\u304b\u3089\u5e73\u9762\u6ce2\u3092\u5165\u5c04\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u5e73\u9762\u6ce2\u5165\u5c04\u306f\uff0c\u30e2\u30c7\u30eb\u6df1\u90e8\u306b\u3042\u3089\u304b\u3058\u3081\u4e0a\u65b9\u306b\u5411\u304b\u3046\u6ce2\u52d5\u65b9\u7a0b\u5f0f\u306e\u89e3\u3092\u521d\u671f\u6761\u4ef6\u3068\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3059\u308b\uff0e \u521d\u671f\u6761\u4ef6\u306f\u5ea7\u6a19\u539f\u70b9\u306b\u304a\u3051\u308b\u521d\u671f\u6df1\u3055\uff08 pw_ztop \uff09\uff0c\u5e73\u9762\u6ce2\u521d\u671f\u6761\u4ef6\u306e\u7279\u5fb4\u7684\u9577\u3055\uff08 pw_zlen \uff09\u3068\uff0c\u521d\u671f\u6761\u4ef6\u306e\u6700\u4e0a\u7aef\u306e\u5e73\u9762\u5f62\u72b6\u3092\u6307\u5b9a\u3059\u308b\u89d2\u5ea6\u30d1\u30e9\u30e1\u30bf\uff08 pw_strike, pw_dip \uff09\u304a\u3088\u3073\uff0cS\u6ce2\u306e\u5834\u5408\u306b\u306f\u5e73\u9762\u5185\u306e\u632f\u52d5\u6975\u6027\u65b9\u5411\u30d1\u30e9\u30e1\u30bf\uff08 pw_rake \uff09\u3092\u8981\u3059\u308b\uff0e\u3053\u308c\u3089\u306e\u89d2\u5ea6\u30d1\u30e9\u30e1\u30bf\u306f\uff0cAki and Richards (2002 1 )\u306b\u3088\u308b\u65ad\u5c64\u9762\u6307\u5b9a\u306estrike, dip, rake\u306e\u89d2\u5ea6\u5b9a\u7fa9\u306b\u6e96\u305a\u308b\uff0e3\u6b21\u5143\u306e\u5834\u5408\uff0c pw_strike=0 \u3067 y \u8ef8\uff08\u901a\u5e38\u306f\u6771\uff09\u306b\u89d2\u5ea6 pw_dip \u3067\u50be\u304d\u4e0b\u304c\u308b\u3088\u3046\u306a\u5e73\u9762\u3068\u306a\u308b\uff0e pw_rake=0 {}^\\circ \u3082\u3057\u304f\u306f pw_rake=180 {}^\\circ \u306e\u5834\u5408\uff0cS\u6ce2\u306e\u632f\u52d5\u6975\u6027\u306e\u65b9\u5411\u304c\u6c34\u5e73\u9762\u3068\u4e00\u81f4\u3059\u308bSH\u6ce2\u306b\u306a\u308b\uff0e \u539f\u70b9\u306b\u304a\u3051\u308b\u6df1\u3055 z= pw_ztop \u306e\u4f4d\u7f6e\u304b\u3089\uff0c\u5e45 pw_zlen (km)\u306e\u533a\u9593\u306b\uff0c\u5e73\u9762\u6ce2\u5f62\u72b6\u95a2\u6570\u3068\u3057\u3066\uff0c\u30d1\u30e9\u30e1\u30bf stftype \u3067\u5b9a\u3081\u305f\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\u306e\u5f62\u72b6\u3092\u5229\u7528\u3059\u308b\uff0e\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\u306e\u5b9a\u7fa9\u306b\u3088\u308a\uff0c\u305d\u306e\u4f1d\u64ad\u65b9\u5411\u306b\u6cbf\u3063\u305f\u7a7a\u9593\u7a4d\u5206\u304c1\u306b\u306a\u308b\u3088\u3046\u306b\u898f\u683c\u5316\u3055\u308c\u3066\u3044\u308b\uff0e \u5e73\u9762\u6ce2\u306e\u30b8\u30aa\u30e1\u30c8\u30ea \u5e73\u9762\u6ce2\u30e2\u30fc\u30c9\u306e\u5ea7\u6a19\u7cfb\u6307\u5b9a\uff0e\uff08\u5de6\uff09\u5e73\u9762\u6ce2\u6700\u4e0a\u9762\u4f4d\u7f6e\u306e\u6307\u5b9a\uff0e\uff08\u53f3\uff09\u6df1\u3055\u65ad\u9762\u306b\u304a\u3051\u308b\u521d\u671f\u6761\u4ef6\u6307\u5b9a\uff0e Parameters pw_mode \u5e73\u9762\u6ce2\u30e2\u30fc\u30c9ON/OFF\u3092\u5b9a\u3081\u308b\uff0e .true. \u306e\u3068\u304d\u306b\u306f\u5e73\u9762\u6ce2\u30e2\u30fc\u30c9\u3068\u306a\u308a\uff0c\u70b9\u9707\u6e90\u306e\u30ea\u30b9\u30c8\u306f\u7121\u8996\u3055\u308c\u308b\uff0e pw_ztop \u521d\u671f\u6761\u4ef6\u306e\u539f\u70b9 x=y=0 \u306b\u304a\u3051\u308b\u5e73\u9762\u6ce2\u4e0a\u7aef\u306e z \u5ea7\u6a19\u5024 pw_zlen \u521d\u671f\u6761\u4ef6\u306e\u5e73\u9762\u6ce2\u6ce2\u9577\u30b9\u30b1\u30fc\u30eb\uff0e\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\u306e\u5e45\uff08\u30e9\u30a4\u30ba\u30bf\u30a4\u30e0\uff09\u306b\u76f8\u5f53\u3059\u308b\uff0e pw_ps \u5e73\u9762\u6ce2\u7a2e\u5225\uff0e'p'\u3082\u3057\u304f\u306f's'\uff0e pw_strike \u5e73\u9762\u6ce2\u521d\u671f\u6761\u4ef6\u306e\u65b9\u4f4d\u89d2\uff0e x \u8ef8\u304b\u3089\u6642\u8a08\u56de\u308a\u306b\u89d2\u5ea6\u5358\u4f4d\u3067\u4e0e\u3048\u308b\uff0e pw_dip \u5e73\u9762\u6ce2\u521d\u671f\u6761\u4ef6\u306e\u50be\u659c\u89d2\uff08\u5ea6\uff09\uff0e0\u5ea6\u3067\u6c34\u5e73\u5165\u5c04\u3067\u3042\u308b\uff0e pw_rake S\u6ce2\u306e\u5834\u5408\u306e\u5e73\u9762\u5185\u632f\u52d5\u65b9\u5411\uff08\u5ea6\uff09\uff0e\u6c34\u5e73\u9762\u65b9\u5411\u304b\u3089\u53cd\u6642\u8a08\u56de\u308a\u306b\u6e2c\u3063\u305f\u89d2\u5ea6\u3067\u8a18\u8ff0\u3059\u308b\uff0e stftype \u8981\u7d20\u9707\u6e90\u6642\u9593\u95a2\u6570\uff08\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\uff09\u306e\u7a2e\u985e\uff0e\u6307\u5b9a\u6cd5\u306f\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u9707\u6e90\u306b\u540c\u3058\uff0e \u306a\u304a\uff0c\u5e73\u9762\u6ce2\u30e2\u30fc\u30c9\u306e\u5834\u5408\u306b\u306f\uff0c\u5438\u53ce\u5883\u754c\u6761\u4ef6\u3068\u3057\u3066\u304b\u306a\u3089\u305a abc_type='pml' \u3092\u7528\u3044\u308b\u3079\u304d\u3067\u3042\u308b\uff0e \u7c21\u6613\u7248\u306e\u5883\u754c\u6761\u4ef6 abc_type='cerjan' \u3067\u306f\uff0c\u6c34\u5e73\u65b9\u5411\u306e\u7aef\u304b\u3089\u975e\u5e38\u306b\u5f37\u3044\u4eba\u5de5\u53cd\u5c04\u6ce2\u304c\u751f\u3058\u3066\u3057\u307e\u3046\uff0e \u5e73\u9762\u6ce2\u5165\u5c04\u3068\u5438\u53ce\u5883\u754c\u6761\u4ef6 S\u6ce2\u5e73\u9762\u6ce2\u5165\u5c04\u6df1\u3055\u65ad\u9762\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u4f8b\uff0e\u7dd1\u8272\u304cS\u6ce2(rot)\uff0c\u8d64\u8272\u304cP\u6ce2(div)\u632f\u5e45\u3092\u305d\u308c\u305e\u308c\u8868\u3059\uff0e\u5883\u754c\u6761\u4ef6\u304c(a) Cerjan\u306e\u5834\u5408\u3068(b) PML\u306e\u5834\u5408\uff0e \u307e\u305f\uff0cPML\u3092\u7528\u3044\u305f\u3068\u3057\u3066\u3082\uff0c\u50be\u659c\u89d2\u304c\u30bc\u30ed\u3067\u306f\u306a\u3044\u5e73\u9762\u6ce2\u5165\u5c04\u306f\uff0c\u304b\u306a\u3089\u305a\u5883\u754c\u304b\u3089\u306e\u6c5a\u67d3\u3092\u4f34\u3046\uff0e\u4eba\u5de5\u53cd\u5c04\u6ce2\u306e\u632f\u5e45\u304c\u5c0f\u3055\u304f\u306a\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u304b\uff0c\u6c5a\u67d3\u3092\u3055\u3051\u308b\u305f\u3081\u9818\u57df\u3092\u5145\u5206\u5e83\u304f\u53d6\u308b\u306a\u3069\u306e\u5bfe\u7b56\u304c\u5fc5\u8981\u3068\u306a\u308b\uff0e Aki, K., and P. G. Richards (2002), Quantitative Seismology: Theory and Methods , 2nd eidtion ed., University Science Books. \u21a9","title":"\u9707\u6e90\u306e\u6307\u5b9a"},{"location":"ja/2._Parameters/0207_source/#_1","text":"","title":"\u9707\u6e90\u306e\u6307\u5b9a"},{"location":"ja/2._Parameters/0207_source/#_2","text":"\u3053\u3053\u3067\u306f\u672c\u30b3\u30fc\u30c9\u3067\u5229\u7528\u53ef\u80fd\u306a\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\uff08\u9707\u6e90\u6642\u9593\u95a2\u6570\uff09 \\dot{M}(t) \u3068\u305d\u306e\u30b9\u30da\u30af\u30c8\u30eb\u3092\u6574\u7406\u3059\u308b\uff0e\u4ee5\u4e0b\u306e\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\u306f\uff0c\u3059\u3079\u3066\u7d99\u7d9a\u6642\u9593\uff08\u3082\u3057\u304f\u306f\u7279\u5fb4\u7684\u6642\u9593\uff09 T_R \u3092\u3082\u3061\uff0c\u7dcf\u30e2\u30fc\u30e1\u30f3\u30c8\u304c 1 \u306b\u898f\u683c\u5316\u3055\u308c\u3066\u3044\u308b\uff0e OpenSWPC \u3067\u306f\uff0c\u30d1\u30e9\u30e1\u30bf stftype \u306e\u9078\u629e\u306b\u3088\u308a\uff0c\u4ee5\u4e0b\u306e\u9707\u6e90\u6642\u9593\u95a2\u6570\u304c\u9078\u629e\u3067\u304d\u308b\uff0e Box-car function ( boxcar ) \\begin{align} \\dot{m}^ R \\left(t\\right) &= \\frac{1}{T_R} & \\begin{array}{r} ( 0 \\le t \\le T_R) \\\\ \\end{array} \\end{align} Triangle function ( triangle ) \\begin{align} \\dot{m}^ T \\left(t\\right) = \\begin{cases} 4t/T_R^2 & ( 0 \\le t \\le T_R/2 ) \\\\ -4(t-T_R)/T_R^2 & ( T_R/2 < t \\le T_R ) \\end{cases} \\end{align} Herrmann function ( herrmann ) \\begin{align} \\dot{m}^ H \\left(t\\right) = \\begin{cases} 16 t^2 / T_R^3 & ( 0 \\le t \\le T_R/4 ) \\\\ -2 ( 8 t^2 - 8 t T_R + T_R^2 ) / T_R^3 & ( T_R/4 < t \\le 3T_R/4 ) \\\\ 16 \\left( t - T_R \\right)^2 / T_R^3 & (3T_R/4 < t \\le T_R ) \\end{cases} \\end{align} Cosine function ( cosine ) \\begin{align} \\dot{m}^ C \\left(t\\right) = \\frac{1}{T_R} \\left[ 1 - \\cos \\left(\\frac{2 \\pi t}{T_R} \\right) \\right] \\quad ( 0 \\le t \\le T_R) \\end{align} K\u00fcpper wavelet ( kupper ) \\begin{align} \\dot{m}^K \\left( t \\right ) &= \\frac{3 \\pi}{4 T_R} \\sin^3\\left( \\frac{\\pi t}{T_R} \\right) \\quad ( 0 \\le t \\le T_R) \\end{align} t-exp type function ( texp ) \\begin{align} \\dot{m}^{E} \\left( t \\right) &= \\frac{(2 \\pi)^2 t}{T_R^2} \\exp\\left[ - \\frac{ 2 \\pi t}{T_R}\\right] \\quad ( 0 \\le t ) \\end{align} \u305d\u308c\u305e\u308c\u306e\u9707\u6e90\u6642\u9593\u95a2\u6570\u5f62\u72b6\u3068\u305d\u306e\u632f\u5e45\u30b9\u30da\u30af\u30c8\u30eb\u3092\u4e0b\u56f3\u306b\u793a\u3059\uff0e \u9707\u6e90\u6642\u9593\u95a2\u6570 \u9707\u6e90\u6642\u9593\u95a2\u6570 \\dot{m}(t) \uff08\u5de6\uff09\u3068\u305d\u306e\u632f\u5e45\u30b9\u30da\u30af\u30c8\u30eb\uff08\u53f3\uff09\uff0e \u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\u306e\u30b9\u30da\u30af\u30c8\u30eb\u306f\uff0c f\\gg 1/T_R \u306e\u6761\u4ef6\u4e0b\u3067\uff0c\u305d\u308c\u305e\u308c f^{-1} \u304b\u3089 f^{-4} \u306e\u30ed\u30fc\u30eb\u30aa\u30d5\u3092\u6301\u3064\uff0e \u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u6570\u5024\u5206\u6563\u3092\u8d77\u3053\u3055\u306a\u3044\u305f\u3081\u306b\u306f\uff0c\u5bfe\u8c61\u5468\u6ce2\u6570\u5e2f\u306e\u4e0a\u9650\u3067\u5145\u5206\u306b\u9707\u6e90\u306e\u30b9\u30da\u30af\u30c8\u30eb\u304c\u5c0f\u3055\u304f\u306a\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e \u305d\u306e\u3088\u3046\u306a\u6761\u4ef6\u3092\u6e80\u305f\u3059\u6700\u5927\u5468\u6ce2\u6570\u3068\u3057\u3066\uff0c\u3053\u3053\u3067\u306f f_\\text{max}=2/T_R \uff08\u56f3\u4e2d\u8d64\u70b9\u7dda\uff09\u3092\u63a1\u7528\u3059\u308b\uff0e \u3053\u306e f_\\text{max} \u4ee5\u4e0b\u306e\u5468\u6ce2\u6570\u3067\u306f\u5206\u6563\u3092\u8d77\u3053\u3055\u306a\u3044\u3088\u3046\u306b\u30e2\u30c7\u30eb\u30d1\u30e9\u30e1\u30bf\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308c\u3070\u3088\u3044\uff0e \u4e00\u65b9\uff0c\u30b9\u30da\u30af\u30c8\u30eb\u306e\u5fdc\u7b54\u304c\u307b\u307c\u4e00\u5b9a\u306b\u306a\u308b\uff0c\u3064\u307e\u308a\u9707\u6e90\u6642\u9593\u95a2\u6570\u304c\u30c7\u30eb\u30bf\u95a2\u6570\u3068\u898b\u306a\u305b\u308b\u306e\u306f\u6982\u306d f \\le 1/(2 T_R) \uff08\u56f3\u4e2d\u9752\u70b9\u7dda\uff09\u3067\u3042\u308b\uff0e","title":"\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570"},{"location":"ja/2._Parameters/0207_source/#_3","text":"\u9707\u6e90\u30e1\u30ab\u30cb\u30ba\u30e0\u306f6\u6210\u5206\u306e\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\uff0c\u3082\u3057\u304f\u306f\u30c0\u30d6\u30eb\u30ab\u30c3\u30d7\u30eb\u9707\u6e90\u3092\u7279\u5fb4\u4ed8\u3051\u308b strike , dip , rake \u306e3\u3064\u306e\u89d2\u5ea6\u3067\u4e0e\u3048\u3089\u308c\u308b\uff0e\u307e\u305f\uff0c\u9707\u6e90\u4f4d\u7f6e\u3092\u8a08\u7b97\u5ea7\u6a19\u7cfb\u3082\u3057\u304f\u306f\u5730\u7406\u5ea7\u6a19\u7cfb\u3067\u3082\u4e0e\u3048\u3089\u308c\u308b\uff0e\u3055\u3089\u306b\uff0c\u9707\u6e90\u306e\u5927\u304d\u3055\u3092\u8868\u3059\u65b9\u6cd5\u306b\u5730\u9707\u30e2\u30fc\u30e1\u30f3\u30c8 M_0 \uff0c\u30e2\u30fc\u30e1\u30f3\u30c8\u30de\u30b0\u30cb\u30c1\u30e5\u30fc\u30c9 M_W \uff0c\u3059\u3079\u308a\u91cf D \u3068\u65ad\u5c64\u9762\u7a4d S \u306e3\u901a\u308a\u304c\u3042\u308b\uff0e\u3053\u308c\u3089\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u3088\u308a\uff0c\u3042\u308f\u305b\u306610\u7a2e\u985e\u306e\u9707\u6e90\u30e1\u30ab\u30cb\u30ba\u30e0\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u3042\u308b\uff0e \u9707\u6e90\u306f\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\u3092\u7528\u3044\u3066\u5fdc\u529b\u964d\u4e0b\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u308b\uff0e\u8981\u7d20\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\u306f\u4e0a\u8ff0\u306e6\u7a2e\u985e\u304b\u3089\u9078\u3073\uff0c\u95a2\u6570\u540d\u3092\u30d1\u30e9\u30e1\u30bf\u3068\u3057\u3066\u4e0e\u3048\u308b\uff0e\u3069\u306e\u95a2\u6570\u3067\u3042\u3063\u3066\u3082\uff0c\u9707\u6e90\u306e\u7834\u58ca\u958b\u59cb\u6642\u9593 T_0 \u3068\u7d99\u7d9a\u6642\u9593 T_R \uff0c\u306a\u3089\u3073\u306b\u5168\u30e2\u30fc\u30e1\u30f3\u30c8\uff08\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\u306e\u6642\u9593\u7a4d\u5206\u5024\uff09 M_0 \u304c\u30d1\u30e9\u30e1\u30bf\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u308b\uff0e OpenSWPC \u306f\u8907\u6570\u306e\u70b9\u9707\u6e90\u3092\u7528\u3044\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u9707\u6e90\u30d5\u30a1\u30a4\u30eb\u306b\u8907\u6570\u884c\u306e\u9707\u6e90\u8981\u7d20\u304c\u3042\u308c\u3070\uff0c\u305d\u308c\u3089\u3059\u3079\u3066\u306e\u8981\u7d20\uff08\u306e\u3046\u3061\u8a08\u7b97\u30e2\u30c7\u30eb\u9818\u57df\u5185\u306b\u3042\u308b\u70b9\uff09\u304b\u3089\u5730\u9707\u52d5\u3092\u653e\u5c04\u3055\u305b\u308b\uff0e\u9707\u6e90\u4f4d\u7f6e\u3068\u7834\u58ca\u958b\u59cb\u6642\u523b\u7b49\u3092\u5c11\u3057\u305a\u3064\u305a\u3089\u3059\u3053\u3068\u306b\u3088\u308a\uff0c\u64ec\u4f3c\u7684\u306b\u6709\u9650\u65ad\u5c64\u9762\u304b\u3089\u306e\u7834\u58ca\u3092\u518d\u73fe\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308b\uff0e \u306a\u304a\uff0c\u9707\u6e90\u30d5\u30a1\u30a4\u30eb\u306f\uff0c\u305d\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u95a2\u308f\u3089\u305a\u3059\u3079\u3066 # \u304b\u3089\u59cb\u307e\u308b\u884c\u306f\u30b3\u30e1\u30f3\u30c8\u884c\u3068\u898b\u306a\u3055\u308c\u308b\uff0e \u7279\u6b8a\u306a\u6761\u4ef6\u3068\u3057\u3066\uff0c\u30d1\u30e9\u30e1\u30bf sdep_fit \u306b\u3088\u308a\uff0c\u9707\u6e90\u4f4d\u7f6e\u3092\u901f\u5ea6\u69cb\u9020\u30e2\u30c7\u30eb\u306e\u30d7\u30ec\u30fc\u30c8\u5883\u754c\u4e0a\u306b\u7f6e\u304f\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\uff0e\u3053\u306e\u5834\u5408\u306f\uff0c\u9707\u6e90\u30d5\u30a1\u30a4\u30eb\u306e\u6df1\u3055\u6307\u5b9a\u306f\u7121\u8996\u3055\u308c\u308b\uff0e\u3053\u306e\u5834\u5408\uff0c\u69cb\u9020\u30e2\u30c7\u30eb\u306e\u6307\u5b9a\u3067\u8a72\u5f53\u3059\u308b\u756a\u53f7\u306e\u5c64\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e Parameters stf_format \u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u306e\u8868\u73fe\u306e\u7a2e\u5225\uff0e\u4ee5\u4e0b10\u7a2e\u985e\u304b\u3089\u9078\u3076\uff0e 'xym0ij' : x , y , z , T_0 , T_R , M_0 , m_{xx} , m_{yy} , m_{zz} , m_{yz} , m_{xz} , m_{xy} 'xym0dc' : x , y , z , T_0 , T_R , M_0 , strike, dip, rake 'llm0ij' : lon, lat, z , T_0 , T_R , M_0 , m_{xx} , m_{yy} , m_{zz} , m_{yz} , m_{xz} , m_{xy} 'llm0dc' : lon, lat, z , T_0 , T_R , M_0 , strike, dip, rake 'xymwij' : x , y , z , T_0 , T_R , M_W , m_{xx} , m_{yy} , m_{zz} , m_{yz} , m_{xz} , m_{xy} 'xymwdc' : x , y , z , T_0 , T_R , M_W , strike, dip, rake 'llmwij' : lon, lat, z , T_0 , T_R , M_W , m_{xx} , m_{yy} , m_{zz} , m_{yz} , m_{xz} , m_{xy} 'llmwdc' : lon, lat, z , T_0 , T_R , M_W , strike, dip, rake 'lldsdc' : lon, lat, z , T_0 , T_R , D , S , strike, dip, rake 'xydsdc' : x , y , z , T_0 , T_R , D , S , strike, dip, rake 'psmeca' : lon, lat, z , M_{rr} , M_{tt} , M_{ff} , M_{rt} , M_{rf} , M_{tf} , iexp (new in v5.2) \u305d\u308c\u305e\u308c\u306e\u91cf\u306e\u5358\u4f4d\u306f\uff0c x , y , z \u306f[km]\uff0c M_0 \u3068 m_{ij} \u306f [Nm], T_0 , T_R \u306f [s], \u89d2\u5ea6\u5909\u6570\u306f\u3059\u3079\u3066 [degree]\uff0c\u3059\u3079\u308a\u91cf D \u306f [m]\uff0c\u9762\u7a4d S \u306f[m {}^2 ]\u304c\u305d\u308c\u305e\u308c\u4eee\u5b9a\u3055\u308c\u3066\u3044\u308b\uff0e stftype \u8981\u7d20\u9707\u6e90\u6642\u9593\u95a2\u6570\uff08\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\uff09\u306e\u7a2e\u985e\uff0e 'boxcar' \uff08\u7bb1\u5f62\u95a2\u6570\uff09, 'triangle' \uff08\u4e09\u89d2\u5f62\uff09, 'herrmann' \uff08Herrmann\u95a2\u6570\uff09, 'kupper' \uff08Kupper wavelet\uff09, 'cosine' \uff08 \\cos \u95a2\u6570\uff09, 'texp' \uff08 t \\exp \u95a2\u6570\uff09\u304b\u3089\u9078\u629e\u3059\u308b\uff0e fn_stf \u9707\u6e90\u60c5\u5831\u30d5\u30a1\u30a4\u30eb\uff0e\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u4e2d\u306b stf_format \u3067\u6307\u5b9a\u3055\u308c\u305f\u66f8\u5f0f\u3067\u9707\u6e90\u60c5\u5831\u3092\u8a18\u8f09\u3059\u308b\uff0e sdep_fit \u9707\u6e90\u306e\u6df1\u3055\u3092\u5f37\u5236\u7684\u306b\u5883\u754c\u306b\u5408\u308f\u305b\u308b\u304b\u3069\u3046\u304b\u306e\u6307\u5b9a\uff0e 'asis' : \u306a\u306b\u3082\u3057\u306a\u3044\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09 'bd{i}' (i=1,2, \\cdots 9): i \u756a\u76ee\u306e\u5883\u754c\u306b\u5408\u308f\u305b\u308b\uff0e","title":"\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u9707\u6e90"},{"location":"ja/2._Parameters/0207_source/#_4","text":"\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u6210\u5206\u3092\u76f4\u63a5\u4e0e\u3048\u308b\u5834\u5408\u306b\u306f\uff0c\u5730\u9707\u30e2\u30fc\u30e1\u30f3\u30c8 M_0 \u3042\u308b\u3044\u306f\u30e2\u30fc\u30e1\u30f3\u30c8\u30de\u30b0\u30cb\u30c1\u30e5\u30fc\u30c9 M_W \u306e\u6307\u5b9a\u3068\uff0c\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u6210\u5206\u306e\u3042\u3044\u3060\u306b\uff0c\u5927\u304d\u3055\u306b\u95a2\u3059\u308b\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u304c\u3042\u308b\uff0e\u305f\u3068\u3048\u3070\uff0c\u4ee5\u4e0b\u306e2\u3064\u306e\u6307\u5b9a\u306f\u5b8c\u5168\u306b\u7b49\u4fa1\u3067\u3042\u308b\uff1a M_0 m_{xx} m_{yy} m_{zz} m_{yz} m_{xz} m_{xy} 1e15 1.0 1.0 1.0 0.0 0.0 0.0 1.0 1e15 1e15 1e15 0.0 0.0 0.0 \u5165\u529b\u3055\u308c\u305f\u30d1\u30e9\u30e1\u30bf\u306b\u57fa\u3065\u304d\uff0c\u6700\u7d42\u7684\u306a\u5730\u9707\u30e2\u30fc\u30e1\u30f3\u30c8 \\overline{M}_0 \u306f\uff0c \\overline{M}_0 =\\times \\frac{ M_0 }{\\sqrt{2}} \\sqrt{m_{xx}^2 +m_{yy}^2 +m_{zz}^2 + 2(m_{yz}^2+m_{xz}^2+m_{xy}^2)} \u306b\u3088\u308a\u5b9a\u307e\u308b\uff0e\u3082\u3057\u8907\u6570\u306e\u70b9\u9707\u6e90\u304c\u6307\u5b9a\u3055\u308c\u308b\u5834\u5408\u306b\u306f\u4e0a\u5f0f\u306e\u3059\u3079\u3066\u306e\u5929\u9707\u6e90\u8981\u7d20\u306b\u3064\u3044\u3066\u306e\u548c\u304c\u5168\u5730\u9707\u30e2\u30fc\u30e1\u30f3\u30c8\u3068\u306a\u308b\uff0e2\u6b21\u5143P-SV, SH\u8a08\u7b97\u306e\u5834\u5408\u306b\u306f\uff0c\u305d\u308c\u305e\u308c\u306e\u65ad\u9762\u3067\u6709\u52b9\u306a\u6210\u5206\u306e\u307f\u304c\u8a55\u4fa1\u3055\u308c\u308b\uff0e\u3053\u306e\u3088\u3046\u306b\u5927\u304d\u3055\u304c\u5206\u96e2\u3067\u304d\u308b\u8a18\u6cd5\u3092\u63a1\u7528\u3057\u3066\u3044\u308b\u305f\u3081\uff0c\u901a\u5e38\u306f\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u6210\u5206\u306f \\sqrt{m_{xx}^2 +m_{yy}^2 +m_{zz}^2 + 2(m_{yz}^2+m_{xz}^2+m_{xy}^2)} = 1 \u3068\u898f\u683c\u5316\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u6697\u306b\u671f\u5f85\u3055\u308c\u3066\u3044\u308b\uff0e\u304b\u306a\u3089\u305a\u3057\u3082\u305d\u3046\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u304c\uff0c\u3053\u306e\u898f\u683c\u5316\u304c\u3055\u308c\u3066\u3044\u306a\u3044\u3068\uff0c\u30d1\u30e9\u30e1\u30bf\u3068\u3057\u3066\u5165\u529b\u3057\u305f M_W \u3084 M_0 \u3068\u5b9f\u969b\u306b\u8a08\u7b97\u3055\u308c\u308b\u5730\u9707\u306e\u5927\u304d\u3055\u304c\u7570\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\uff0e","title":"\u5730\u9707\u306e\u5927\u304d\u3055\u306e\u6307\u5b9a"},{"location":"ja/2._Parameters/0207_source/#psmeca","text":"GMT \u306e psmeca -Sm \u3084 globalcmt \u3067\u6a19\u6e96\u7684\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u9707\u6e90\u3092\u6307\u5b9a\u3059\u308b\uff0e\u6307\u5b9a\u3055\u308c\u308b\u306e\u306f\u9707\u6e90\u306e\u7def\u5ea6\u7d4c\u5ea6\u6df1\u3055\u306a\u3089\u3073\u306b\u6975\u5ea7\u6a19\u7cfb\u306b\u304a\u3051\u308b\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\uff08 M_{rr} , M_{tt} , M_{ff} , M_{rt} , M_{rf} , M_{tf} \u306e\u9806\uff09\u3068\u5730\u9707\u30e2\u30fc\u30e1\u30f3\u30c8\u306e\u6307\u6570\u90e8\uff08\u6574\u6570\uff09\u3067\u3042\u308b\uff0e\u6307\u6570\u90e8\u306f\u6163\u4f8b\u306b\u5f93\u3044 dyn-cm \u5358\u4f4d\u3067\u4e0e\u3048\u3089\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f\u3055\u308c\u305f\u3044\uff0e\u3053\u308c\u3089\u306e\u30d1\u30e9\u30e1\u30bf\u304cOpenSWPC\u5185\u90e8\u3067\u76f4\u4ea4\u5ea7\u6a19\u7cfb\u306b\u304a\u3051\u308b\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u306b\u5909\u63db\u3055\u308c\u3066\u8a08\u7b97\u306b\u7528\u3044\u3089\u308c\u308b\uff0e\u9707\u6e90\u306b\u304a\u3051\u308b\u7834\u58ca\u958b\u59cb\u6642\u9593 T_0 \u306f 0 \uff0c\u30e9\u30a4\u30ba\u30bf\u30a4\u30e0 T_R \u306f Ekstr\u00f6m et al. (2012)[^Ekstr\u00f6m2012] \u306b\u57fa\u3065\u304d\uff0c\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0 T_R = 2 \\times 1.05 \\times 10^{-8} \\times M_0^{1/3} \u306b\u3088\u3063\u3066\u5b9a\u3081\u308b\uff0e\u305f\u3060\u3057\u3053\u3053\u3067\u3082 M_0 \u306fdyn-cm\u5358\u4f4d\u306e\u5024\u3067\u3042\u308b\uff0e \u306a\u304a\uff0c\u672c\u6307\u5b9a\u306f version 5.2 \u304b\u3089\u6709\u52b9\u3068\u306a\u308b\uff0e \u6c34\u5e73\u56de\u8ee2\u306b\u95a2\u3059\u308b\u6ce8\u610f Version 5.2 \u73fe\u5728\uff0c\u30d1\u30e9\u30e1\u30bf phi \\neq0 \u306e\u3068\u304d\uff0c\u9707\u6e90\u30e1\u30ab\u30cb\u30ba\u30e0\u3092 strike, dip, rake \u3067\u4e0e\u3048\u305f\u3068\u304d\u3068\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u3067\u4e0e\u3048\u305f\u3068\u304d\u3067\uff0c\u30e1\u30ab\u30cb\u30ba\u30e0\u306e\u56de\u8ee2\u306e\u6319\u52d5\u304c\u7570\u306a\u308b\uff0e \u524d\u8005 strike, dip, rake \u3067\u4e0e\u3048\u305f\u3068\u304d\u306b\u306f\uff0c phi \u306e\u5024\u306b\u95a2\u308f\u3089\u305a strike \u306f\u5317\u304b\u3089\u6e2c\u3063\u305f\u3082\u306e\u3068\u3057\u3066\u8a08\u7b97\u3055\u308c\u308b\uff0e\u4e00\u65b9\uff0c\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u306f\u3042\u304f\u307e\u3067\u3082\u56de\u8ee2\u5f8c\u306e x , y \u5ea7\u6a19\u306b\u5bfe\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u4eee\u5b9a\u3055\u308c\u308b\uff0e\u3064\u307e\u308a\uff0c\u30ab\u30bf\u30ed\u30b0\u304b\u3089\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u6210\u5206\u3092\u5229\u7528\u3057\uff0c\u304b\u3064\u5ea7\u6a19\u7cfb\u3092\u6c34\u5e73\u56de\u8ee2\u3057\u3066\u8a08\u7b97\u3059\u308b\u3068\u304d\u306b\u306f\uff0c\u30e6\u30fc\u30b6\u30fc\u304c\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u306e\u56de\u8ee2\u8a08\u7b97\u3092\u81ea\u3089\u884c\u3063\u3066\u30d1\u30e9\u30e1\u30bf\u3068\u3057\u3066\u4e0e\u3048\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff0e \u3053\u308c\u3089\u306e\u6319\u52d5\u304c\u7cfb\u7d71\u7684\u3067\u306a\u3044\u3053\u3068\u306f\u958b\u767a\u8005\u3082\u8a8d\u8b58\u3057\u3066\u304a\u308a\uff0c\u5c06\u6765\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u6319\u52d5\u304c\u5909\u66f4\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\uff0e","title":"psmeca \u6307\u5b9a"},{"location":"ja/2._Parameters/0207_source/#_5","text":"\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u9707\u6e90\u306b\u4ee3\u308f\u308a\uff0c\u5b9f\u4f53\u529b\u3092\u9707\u6e90\u3068\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\uff0e \u3053\u306e\u5834\u5408\uff0c m_{ij} \u306e\u304b\u308f\u308a\u306b f_x , f_y , f_z \u306e\u529b\u6e90\u3092\u76f4\u63a5\u6307\u5b9a\u3059\u308b\uff0e \u5b9f\u4f53\u529b\u306f\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u9707\u6e90\u3068\u540c\u69d8\u306e\u30d9\u30eb\u578b\u306e\u9707\u6e90\u6642\u9593\u95a2\u6570\u3092\u7528\u3044\u3066\u8a08\u7b97\u3055\u308c\u308b\uff0e \u4efb\u610f\u500b\u306e\u70b9\u9707\u6e90\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304c\uff0c \u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u306b\u3088\u308b\u9707\u6e90\u3068\u5b9f\u4f53\u529b\u306b\u3088\u308b\u9707\u6e90\u304b\u3089\u306e\u540c\u6642\u8f3b\u5c04\u306f\uff0c\u4e00\u5ea6\u306e\u5b9f\u884c\u3067\u306f\u8a08\u7b97\u3067\u304d\u306a\u3044\uff0e Parameters bf_mode \u5b9f\u4f53\u6ce2\u30e2\u30fc\u30c9\u306eON/OFF\u3092\u8a2d\u5b9a\u3059\u308b\uff0e .true. \u3067ON\u306b\u306a\u308b\uff0e stf_format \u9707\u6e90\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff08\u4e0b\u8a18\u53c2\u7167\uff09\uff0e\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u9707\u6e90\u3068\u306f\u8a18\u6cd5\u304c\u7570\u306a\u308b\u306e\u3067\u6ce8\u610f\uff0e 'xy' : x, y, z, T_0 , T_R , f_x , f_y , f_z 'll' : lon, lat , z, T_0 , T_R , f_x , f_y , f_z stftype \u8981\u7d20\u9707\u6e90\u6642\u9593\u95a2\u6570\uff08\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\uff09\u306e\u7a2e\u985e\uff0e\u6307\u5b9a\u6cd5\u306f\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u9707\u6e90\u306b\u540c\u3058\uff0e fn_stf \u9707\u6e90\u60c5\u5831\u30d5\u30a1\u30a4\u30eb\uff0e\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u3068\u306f\u8a18\u6cd5\u304c\u7570\u306a\u308b\u306e\u3067\u6ce8\u610f\uff0e sdep_fit \u9707\u6e90\u306e\u6df1\u3055\u3092\u5f37\u5236\u7684\u306b\u5883\u754c\u306b\u5408\u308f\u305b\u308b\u304b\u3069\u3046\u304b\u306e\u6307\u5b9a\uff0e 'asis' : \u306a\u306b\u3082\u3057\u306a\u3044\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09 'bd{i}' (i=1,2, \\cdots 9): i \u756a\u76ee\u306e\u5883\u754c\u306b\u5408\u308f\u305b\u308b\uff0e","title":"\u5b9f\u4f53\u529b\u30e2\u30fc\u30c9"},{"location":"ja/2._Parameters/0207_source/#_6","text":"\u9707\u6e90\u304b\u3089\u306e\u8f3b\u5c04\u306e\u4ee3\u308f\u308a\u306b\uff0c\u4e0b\u65b9\u304b\u3089\u5e73\u9762\u6ce2\u3092\u5165\u5c04\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u5e73\u9762\u6ce2\u5165\u5c04\u306f\uff0c\u30e2\u30c7\u30eb\u6df1\u90e8\u306b\u3042\u3089\u304b\u3058\u3081\u4e0a\u65b9\u306b\u5411\u304b\u3046\u6ce2\u52d5\u65b9\u7a0b\u5f0f\u306e\u89e3\u3092\u521d\u671f\u6761\u4ef6\u3068\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3059\u308b\uff0e \u521d\u671f\u6761\u4ef6\u306f\u5ea7\u6a19\u539f\u70b9\u306b\u304a\u3051\u308b\u521d\u671f\u6df1\u3055\uff08 pw_ztop \uff09\uff0c\u5e73\u9762\u6ce2\u521d\u671f\u6761\u4ef6\u306e\u7279\u5fb4\u7684\u9577\u3055\uff08 pw_zlen \uff09\u3068\uff0c\u521d\u671f\u6761\u4ef6\u306e\u6700\u4e0a\u7aef\u306e\u5e73\u9762\u5f62\u72b6\u3092\u6307\u5b9a\u3059\u308b\u89d2\u5ea6\u30d1\u30e9\u30e1\u30bf\uff08 pw_strike, pw_dip \uff09\u304a\u3088\u3073\uff0cS\u6ce2\u306e\u5834\u5408\u306b\u306f\u5e73\u9762\u5185\u306e\u632f\u52d5\u6975\u6027\u65b9\u5411\u30d1\u30e9\u30e1\u30bf\uff08 pw_rake \uff09\u3092\u8981\u3059\u308b\uff0e\u3053\u308c\u3089\u306e\u89d2\u5ea6\u30d1\u30e9\u30e1\u30bf\u306f\uff0cAki and Richards (2002 1 )\u306b\u3088\u308b\u65ad\u5c64\u9762\u6307\u5b9a\u306estrike, dip, rake\u306e\u89d2\u5ea6\u5b9a\u7fa9\u306b\u6e96\u305a\u308b\uff0e3\u6b21\u5143\u306e\u5834\u5408\uff0c pw_strike=0 \u3067 y \u8ef8\uff08\u901a\u5e38\u306f\u6771\uff09\u306b\u89d2\u5ea6 pw_dip \u3067\u50be\u304d\u4e0b\u304c\u308b\u3088\u3046\u306a\u5e73\u9762\u3068\u306a\u308b\uff0e pw_rake=0 {}^\\circ \u3082\u3057\u304f\u306f pw_rake=180 {}^\\circ \u306e\u5834\u5408\uff0cS\u6ce2\u306e\u632f\u52d5\u6975\u6027\u306e\u65b9\u5411\u304c\u6c34\u5e73\u9762\u3068\u4e00\u81f4\u3059\u308bSH\u6ce2\u306b\u306a\u308b\uff0e \u539f\u70b9\u306b\u304a\u3051\u308b\u6df1\u3055 z= pw_ztop \u306e\u4f4d\u7f6e\u304b\u3089\uff0c\u5e45 pw_zlen (km)\u306e\u533a\u9593\u306b\uff0c\u5e73\u9762\u6ce2\u5f62\u72b6\u95a2\u6570\u3068\u3057\u3066\uff0c\u30d1\u30e9\u30e1\u30bf stftype \u3067\u5b9a\u3081\u305f\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\u306e\u5f62\u72b6\u3092\u5229\u7528\u3059\u308b\uff0e\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\u306e\u5b9a\u7fa9\u306b\u3088\u308a\uff0c\u305d\u306e\u4f1d\u64ad\u65b9\u5411\u306b\u6cbf\u3063\u305f\u7a7a\u9593\u7a4d\u5206\u304c1\u306b\u306a\u308b\u3088\u3046\u306b\u898f\u683c\u5316\u3055\u308c\u3066\u3044\u308b\uff0e \u5e73\u9762\u6ce2\u306e\u30b8\u30aa\u30e1\u30c8\u30ea \u5e73\u9762\u6ce2\u30e2\u30fc\u30c9\u306e\u5ea7\u6a19\u7cfb\u6307\u5b9a\uff0e\uff08\u5de6\uff09\u5e73\u9762\u6ce2\u6700\u4e0a\u9762\u4f4d\u7f6e\u306e\u6307\u5b9a\uff0e\uff08\u53f3\uff09\u6df1\u3055\u65ad\u9762\u306b\u304a\u3051\u308b\u521d\u671f\u6761\u4ef6\u6307\u5b9a\uff0e Parameters pw_mode \u5e73\u9762\u6ce2\u30e2\u30fc\u30c9ON/OFF\u3092\u5b9a\u3081\u308b\uff0e .true. \u306e\u3068\u304d\u306b\u306f\u5e73\u9762\u6ce2\u30e2\u30fc\u30c9\u3068\u306a\u308a\uff0c\u70b9\u9707\u6e90\u306e\u30ea\u30b9\u30c8\u306f\u7121\u8996\u3055\u308c\u308b\uff0e pw_ztop \u521d\u671f\u6761\u4ef6\u306e\u539f\u70b9 x=y=0 \u306b\u304a\u3051\u308b\u5e73\u9762\u6ce2\u4e0a\u7aef\u306e z \u5ea7\u6a19\u5024 pw_zlen \u521d\u671f\u6761\u4ef6\u306e\u5e73\u9762\u6ce2\u6ce2\u9577\u30b9\u30b1\u30fc\u30eb\uff0e\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\u306e\u5e45\uff08\u30e9\u30a4\u30ba\u30bf\u30a4\u30e0\uff09\u306b\u76f8\u5f53\u3059\u308b\uff0e pw_ps \u5e73\u9762\u6ce2\u7a2e\u5225\uff0e'p'\u3082\u3057\u304f\u306f's'\uff0e pw_strike \u5e73\u9762\u6ce2\u521d\u671f\u6761\u4ef6\u306e\u65b9\u4f4d\u89d2\uff0e x \u8ef8\u304b\u3089\u6642\u8a08\u56de\u308a\u306b\u89d2\u5ea6\u5358\u4f4d\u3067\u4e0e\u3048\u308b\uff0e pw_dip \u5e73\u9762\u6ce2\u521d\u671f\u6761\u4ef6\u306e\u50be\u659c\u89d2\uff08\u5ea6\uff09\uff0e0\u5ea6\u3067\u6c34\u5e73\u5165\u5c04\u3067\u3042\u308b\uff0e pw_rake S\u6ce2\u306e\u5834\u5408\u306e\u5e73\u9762\u5185\u632f\u52d5\u65b9\u5411\uff08\u5ea6\uff09\uff0e\u6c34\u5e73\u9762\u65b9\u5411\u304b\u3089\u53cd\u6642\u8a08\u56de\u308a\u306b\u6e2c\u3063\u305f\u89d2\u5ea6\u3067\u8a18\u8ff0\u3059\u308b\uff0e stftype \u8981\u7d20\u9707\u6e90\u6642\u9593\u95a2\u6570\uff08\u30e2\u30fc\u30e1\u30f3\u30c8\u6642\u9593\u95a2\u6570\uff09\u306e\u7a2e\u985e\uff0e\u6307\u5b9a\u6cd5\u306f\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u9707\u6e90\u306b\u540c\u3058\uff0e \u306a\u304a\uff0c\u5e73\u9762\u6ce2\u30e2\u30fc\u30c9\u306e\u5834\u5408\u306b\u306f\uff0c\u5438\u53ce\u5883\u754c\u6761\u4ef6\u3068\u3057\u3066\u304b\u306a\u3089\u305a abc_type='pml' \u3092\u7528\u3044\u308b\u3079\u304d\u3067\u3042\u308b\uff0e \u7c21\u6613\u7248\u306e\u5883\u754c\u6761\u4ef6 abc_type='cerjan' \u3067\u306f\uff0c\u6c34\u5e73\u65b9\u5411\u306e\u7aef\u304b\u3089\u975e\u5e38\u306b\u5f37\u3044\u4eba\u5de5\u53cd\u5c04\u6ce2\u304c\u751f\u3058\u3066\u3057\u307e\u3046\uff0e \u5e73\u9762\u6ce2\u5165\u5c04\u3068\u5438\u53ce\u5883\u754c\u6761\u4ef6 S\u6ce2\u5e73\u9762\u6ce2\u5165\u5c04\u6df1\u3055\u65ad\u9762\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u4f8b\uff0e\u7dd1\u8272\u304cS\u6ce2(rot)\uff0c\u8d64\u8272\u304cP\u6ce2(div)\u632f\u5e45\u3092\u305d\u308c\u305e\u308c\u8868\u3059\uff0e\u5883\u754c\u6761\u4ef6\u304c(a) Cerjan\u306e\u5834\u5408\u3068(b) PML\u306e\u5834\u5408\uff0e \u307e\u305f\uff0cPML\u3092\u7528\u3044\u305f\u3068\u3057\u3066\u3082\uff0c\u50be\u659c\u89d2\u304c\u30bc\u30ed\u3067\u306f\u306a\u3044\u5e73\u9762\u6ce2\u5165\u5c04\u306f\uff0c\u304b\u306a\u3089\u305a\u5883\u754c\u304b\u3089\u306e\u6c5a\u67d3\u3092\u4f34\u3046\uff0e\u4eba\u5de5\u53cd\u5c04\u6ce2\u306e\u632f\u5e45\u304c\u5c0f\u3055\u304f\u306a\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u304b\uff0c\u6c5a\u67d3\u3092\u3055\u3051\u308b\u305f\u3081\u9818\u57df\u3092\u5145\u5206\u5e83\u304f\u53d6\u308b\u306a\u3069\u306e\u5bfe\u7b56\u304c\u5fc5\u8981\u3068\u306a\u308b\uff0e Aki, K., and P. G. Richards (2002), Quantitative Seismology: Theory and Methods , 2nd eidtion ed., University Science Books. \u21a9","title":"\u5e73\u9762\u6ce2\u30e2\u30fc\u30c9"},{"location":"ja/2._Parameters/0208_abc/","text":"\u5438\u53ce\u5883\u754c\u6761\u4ef6 \u00b6 OpenSWPC \u3067\u306f\uff0c\u4e3b\u305f\u308b\u5438\u53ce\u5883\u754c\u6761\u4ef6\u3068\u3057\u3066Auxiliary Differential Equation, Complex Frequency-Shifted Perfectly Matched Layer (ADE CFS-PML; Zhang et al., 2010 1 \uff09\u3092\u63a1\u7528\u3057\u3066\u3044\u308b\uff0e PML\u3068\u306f\uff0c\u5a92\u8cea\u306e\u7aef\u70b9\u304b\u3089\u6570\u5341\u30b0\u30ea\u30c3\u30c9\u3092\u5438\u53ce\uff08\u30b9\u30dd\u30f3\u30b8\uff09\u9818\u57df\u3068\u3057\uff0c\u5fae\u5206\u65b9\u5411\u306b\u4f9d\u5b58\u3057\u305f\u6e1b\u8870\u6027\u5a92\u8cea\u306e\u6642\u9593\u767a\u5c55\u65b9\u7a0b\u5f0f\u3092\u89e3\u304f\u3053\u3068\u3067\u52b9\u679c\u7684\u306b\u4eba\u5de5\u53cd\u5c04\u3092\u62bc\u3055\u3048\u308b\u624b\u6cd5\u3067\u3042\u308b\uff0e \u3088\u308a\u5358\u7d14\u304b\u3064\u4f1d\u7d71\u7684\u306aCerjan\u306b\u3088\u308b\u30b9\u30dd\u30f3\u30b8\u6761\u4ef6\uff08Cerjan et al., 1985 2 \uff09\u3082\u5229\u7528\u3067\u304d\u308b\uff0e \u5883\u754c\u6761\u4ef6\u306e\u7a2e\u985e\u306f\u5165\u529b\u30d1\u30e9\u30e1\u30bf\u306b\u3088\u3063\u3066\u5207\u308a\u66ff\u3048\u308b\uff0e \u5168\u30e2\u30c7\u30eb\u7a7a\u9593\u306f\u5438\u53ce\u5883\u754c\u306e\u539a\u3055\u30b0\u30ea\u30c3\u30c9\u6570 na \u306e\u6307\u5b9a\u306b\u3088\u3063\u3066\uff0c\u56f3\u306e\u3088\u3046\u306b\u5185\u90e8\u9818\u57df\u3068\u5916\u90e8\u9818\u57df\u306b\u5206\u3051\u3089\u308c\u308b\uff0e \u5438\u53ce\u5883\u754c\u306f\u30e2\u30c7\u30eb\u306e\u7aef\u9762\u3092\u8986\u3046\u5fc5\u8981\u304c\u3042\u308b\uff0e \u3057\u304b\u3057\uff0c\u672c\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u306f\u5730\u8868\u9762\u304c\u3042\u308b\u5a92\u8cea\u3067\u306e\u8a08\u7b97\u3092\u524d\u63d0\u3068\u3057\u3066\u304a\u308a\uff0c\u304b\u3064\u7a7a\u4e2d\u97f3\u6ce2\u306f\u7121\u8996\u3059\u308b\uff08\u4eee\u60f3\u7684\u306a\u771f\u7a7a\u72b6\u614b\uff09\u305f\u3081\uff0c\u4e0a\u9762\u306e\u5438\u53ce\u6761\u4ef6\u306f\u5fc5\u8981\u306a\u3044\uff0e \u305d\u3053\u3067\uff0c\u901a\u5e38\u306f\u6df1\u3055\u30b0\u30ea\u30c3\u30c9\u4f4d\u7f6e kbeg_a \u3088\u308a\u6df1\u3044\u90e8\u5206\u306e\u307f\uff0c\u5438\u53ce\u5883\u754c\u6761\u4ef6\u3092\u9069\u7528\u3059\u308b\uff0e \u5438\u53ce\u5883\u754c\u6761\u4ef6\u306e\u5b9a\u7fa9\u9818\u57df \u5438\u53ce\u5883\u754c\u6761\u4ef6\u306e\u5b9a\u7fa9\u9818\u57df\u306e\u6a21\u5f0f\u56f3\uff0e\u8d64\u70b9\u7dda\u304c kbeg_a(I,J) \u306e\u4f4d\u7f6e\u3092\u8868\u3059\uff0e \u7c21\u5358\u306e\u305f\u3081\uff0c OpenSWPC \u3067\u306fPML\u9818\u57df\u306f\u7c98\u5f3e\u6027\u3092\u89e3\u304b\u305a\uff0c\u5f3e\u6027\u4f53\u306e\u69cb\u6210\u65b9\u7a0b\u5f0f\u3068PML\u5438\u53ce\u6761\u4ef6\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\uff0e \u3053\u306e\u3053\u3068\u306b\u3088\u308a\u8a08\u7b97\u30e1\u30e2\u30ea\u3092\u7bc0\u7d04\u3067\u304d\u308b\u4e0a\uff0c\u5438\u53ce\u5883\u754c\u3068\u5185\u90e8\u9818\u57df\u3068\u306e\u9593\u3067\u306e\u8a08\u7b97\u8ca0\u8377\u306e\u30d0\u30e9\u30f3\u30b9\u3092\u6539\u5584\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u3057\u304b\u3057\uff0cQ\u5024\u304c\u6975\u7aef\u306b\u5c0f\u3055\u306a\u5a92\u8cea\u306e\u5834\u5408\uff0c\u5185\u90e8\u9818\u57df\u3067\u306e\u7269\u7406\u5206\u6563\u306b\u3088\u308b\u901f\u5ea6\u4f4e\u4e0b\u304c\u7121\u8996\u3067\u304d\u306a\u304f\u306a\u308b\uff0e \u3053\u306e\u5834\u5408\uff0c\u5438\u53ce\u5883\u754c\u5185\u3068\u5185\u90e8\u9818\u57df\u3068\u3067\u7269\u7406\u5206\u6563\u306e\u6709\u7121\u306b\u4f34\u3046\u901f\u5ea6\u30b3\u30f3\u30c8\u30e9\u30b9\u30c8\u304c\u767a\u751f\u3057\uff0c\u305d\u308c\u306b\u4f34\u3046\u4eba\u5de5\u53cd\u5c04\u6ce2\u304c\u751f\u305a\u308b\u3053\u3068\u304c\u3042\u308b\uff0e \u901f\u5ea6\u5747\u8cea\u5a92\u8cea\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306a\u3069\u304b\u3089\u53cd\u5c04\u6ce2\u751f\u6210\u306e\u5ea6\u5408\u3044\u3092\u78ba\u8a8d\u3057\uff0c\u305d\u308c\u304c\u8a31\u5bb9\u7bc4\u56f2\u3067\u3042\u308b\u304b\u3042\u3089\u304b\u3058\u3081\u8abf\u67fb\u3059\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\uff0e Cerjan\u306b\u3088\u308b\u5438\u53ce\u5883\u754c\u6761\u4ef6\u306b\u3064\u3044\u3066\u306f\uff0cCerjan (1985) 2 \u3067\u63d0\u6848\u3055\u308c\u305f\u30d1\u30e9\u30e1\u30bf\u304c\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\uff0e\u305f\u3060\u3057\uff0c\u30b9\u30dd\u30f3\u30b8\u5883\u754c\u306e\u539a\u3055\u306b\u3088\u3063\u3066\u5438\u53ce\u4fc2\u6570\u306f\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3055\u308c\u308b\uff0e PML\u306f\u591a\u304f\u306e\u5834\u5408\u306b\u3064\u3044\u3066\u975e\u5e38\u306b\u9ad8\u6027\u80fd\u306a\u5438\u53ce\u5883\u754c\u6761\u4ef6\u3067\u3042\u308b\u304c\uff0c\u30b3\u30f3\u30c8\u30e9\u30b9\u30c8\u306e\u5927\u304d\u306a\u901f\u5ea6\u69cb\u9020\u4e0d\u9023\u7d9a\u3084\u4f4e\u901f\u5ea6\u5c64\u306e\u5b58\u5728\u306a\u3069\u306b\u3088\u3063\u3066\uff0c\u6570\u5024\u4e0d\u5b89\u5b9a\u3092\u8d77\u3053\u3059\u3053\u3068\u304c\u3042\u308b\uff0e OpenSWPC \u3067\u63a1\u7528\u3057\u305fADE CFS-PML\u306f\u305d\u306e\u3088\u3046\u306a\u4e0d\u5b89\u5b9a\u304c\u8d77\u3053\u308a\u306b\u304f\u3044\u3068\u3055\u308c\u3066\u3044\u308b\u304c\uff0c\u4e07\u4e00\u6570\u5024\u8a08\u7b97\u306e\u4e0d\u5b89\u5b9a\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306b\u306f\uff0c \u8a08\u7b97\u9818\u57df\u3092\u5c11\u3057\u5e73\u884c\u79fb\u52d5\u3057\u3066\u307f\u308b\uff0e clon \u3068 clat \u3092\u5909\u66f4\u3059\u308b\u304b\uff0c\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba nx , ny \u3092\u5897\u6e1b\u3055\u305b\u308b\uff0e \u6975\u7aef\u306a\u4f4e\u901f\u5ea6\u5c64\u3092 stabilize_pml \u30aa\u30d7\u30b7\u30e7\u30f3\u3092 .true. \u306b\u3059\u308b\u3053\u3068\u3067\u6392\u9664\u3057\u3066\u307f\u308b \u9707\u6e90\u3067\u306e\u30e9\u30a4\u30ba\u30bf\u30a4\u30e0\u3092\u9577\u304f\u3057\u3066\u9ad8\u5468\u6ce2\u3092\u6291\u3048\u308b \u306a\u3069\u306e\u5de5\u592b\u306b\u3088\u308a\u6539\u5584\u3059\u308b\u5834\u5408\u304c\u3042\u308b\uff0eCerjan\u306b\u3088\u308b\u5438\u53ce\u5883\u754c\u6761\u4ef6\u306f\u5e38\u306b\u5b89\u5b9a\u3067\u3042\u308b\u304c\uff0cPML\u3068\u6bd4\u3079\u308b\u3068\u5883\u754c\u306b\u304a\u3051\u308b\u5438\u53ce\u6027\u80fd\u306f\u4f4e\u304f\u306a\u308b\uff0e Parameters abc_type \u5438\u53ce\u5883\u754c\u6761\u4ef6\u306e\u7a2e\u985e\uff0e \u2019pml\u2019 \u3082\u3057\u304f\u306f \u2019cerjan\u2019 \u306e\u3069\u3061\u3089\u304b\u3092\u6307\u5b9a\uff0e na \u5438\u53ce\u5883\u754c\u9818\u57df\u306e\u30b0\u30ea\u30c3\u30c9\u539a\uff0e\u901a\u5e3810\u304b\u308920\u7a0b\u5ea6\u306e\u5024\u304c\u7528\u3044\u3089\u308c\u308b\uff0e stabilize_pml .true. \u306e\u3068\u304d\uff0c\u4f4e\u901f\u5ea6\u5c64\u3092\u6392\u9664\u3057\u3066PML\u306e\u5b89\u5b9a\u5316\u3092\u8a66\u307f\u308b\uff0e\u305f\u3060\u3057\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u526f\u4f5c\u7528\u3068\u3057\u3066\u4eba\u5de5\u53cd\u5c04\u6ce2\u306e\u632f\u5e45\u306f\u5927\u304d\u304f\u306a\u308b\u3053\u3068\u304c\u3042\u308b\uff0e Caution Version 5.0 -- 5.1 \u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u305f fullspace_mode \u306f\uff0c\u7279\u5b9a\u306e\u74b0\u5883\u4e0b\u3067\uff0c\u8a72\u5f53\u30e2\u30fc\u30c9\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u306a\u304f\u3066\u3082\u30c8\u30e9\u30d6\u30eb\u3092\u5f15\u304d\u8d77\u3053\u3059\u3053\u3068\u304c\u5224\u660e\u3057\u305f\u305f\u3081\uff0c\u4e00\u6642\u7684\u306b\u5229\u7528\u4e0d\u53ef\u3068\u3057\u3066\u3044\u308b\uff0e\u30c8\u30e9\u30d6\u30eb\u306e\u539f\u56e0\u306f\u76ee\u4e0b\u8ffd\u6c42\u4e2d\u3067\u3042\u308b\uff0e Zhang, W., and Y. Shen (2010), Unsplit complex frequency-shifted PML implementation using auxiliary differential equations for seismic wave modeling, Geophysics , 75 (4), T141\u2013T154, doi:10.1190/1.3463431. \u21a9 Cerjan, C., D. Kosloff, R. Kosloff, and M. Reshef (1985), A nonreflecting boundary condition for discrete acoustic and elastic wave equations, Geophysics , 50 (4), 705\u2013708. \u21a9 \u21a9","title":"\u5438\u53ce\u5883\u754c\u6761\u4ef6"},{"location":"ja/2._Parameters/0208_abc/#_1","text":"OpenSWPC \u3067\u306f\uff0c\u4e3b\u305f\u308b\u5438\u53ce\u5883\u754c\u6761\u4ef6\u3068\u3057\u3066Auxiliary Differential Equation, Complex Frequency-Shifted Perfectly Matched Layer (ADE CFS-PML; Zhang et al., 2010 1 \uff09\u3092\u63a1\u7528\u3057\u3066\u3044\u308b\uff0e PML\u3068\u306f\uff0c\u5a92\u8cea\u306e\u7aef\u70b9\u304b\u3089\u6570\u5341\u30b0\u30ea\u30c3\u30c9\u3092\u5438\u53ce\uff08\u30b9\u30dd\u30f3\u30b8\uff09\u9818\u57df\u3068\u3057\uff0c\u5fae\u5206\u65b9\u5411\u306b\u4f9d\u5b58\u3057\u305f\u6e1b\u8870\u6027\u5a92\u8cea\u306e\u6642\u9593\u767a\u5c55\u65b9\u7a0b\u5f0f\u3092\u89e3\u304f\u3053\u3068\u3067\u52b9\u679c\u7684\u306b\u4eba\u5de5\u53cd\u5c04\u3092\u62bc\u3055\u3048\u308b\u624b\u6cd5\u3067\u3042\u308b\uff0e \u3088\u308a\u5358\u7d14\u304b\u3064\u4f1d\u7d71\u7684\u306aCerjan\u306b\u3088\u308b\u30b9\u30dd\u30f3\u30b8\u6761\u4ef6\uff08Cerjan et al., 1985 2 \uff09\u3082\u5229\u7528\u3067\u304d\u308b\uff0e \u5883\u754c\u6761\u4ef6\u306e\u7a2e\u985e\u306f\u5165\u529b\u30d1\u30e9\u30e1\u30bf\u306b\u3088\u3063\u3066\u5207\u308a\u66ff\u3048\u308b\uff0e \u5168\u30e2\u30c7\u30eb\u7a7a\u9593\u306f\u5438\u53ce\u5883\u754c\u306e\u539a\u3055\u30b0\u30ea\u30c3\u30c9\u6570 na \u306e\u6307\u5b9a\u306b\u3088\u3063\u3066\uff0c\u56f3\u306e\u3088\u3046\u306b\u5185\u90e8\u9818\u57df\u3068\u5916\u90e8\u9818\u57df\u306b\u5206\u3051\u3089\u308c\u308b\uff0e \u5438\u53ce\u5883\u754c\u306f\u30e2\u30c7\u30eb\u306e\u7aef\u9762\u3092\u8986\u3046\u5fc5\u8981\u304c\u3042\u308b\uff0e \u3057\u304b\u3057\uff0c\u672c\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u306f\u5730\u8868\u9762\u304c\u3042\u308b\u5a92\u8cea\u3067\u306e\u8a08\u7b97\u3092\u524d\u63d0\u3068\u3057\u3066\u304a\u308a\uff0c\u304b\u3064\u7a7a\u4e2d\u97f3\u6ce2\u306f\u7121\u8996\u3059\u308b\uff08\u4eee\u60f3\u7684\u306a\u771f\u7a7a\u72b6\u614b\uff09\u305f\u3081\uff0c\u4e0a\u9762\u306e\u5438\u53ce\u6761\u4ef6\u306f\u5fc5\u8981\u306a\u3044\uff0e \u305d\u3053\u3067\uff0c\u901a\u5e38\u306f\u6df1\u3055\u30b0\u30ea\u30c3\u30c9\u4f4d\u7f6e kbeg_a \u3088\u308a\u6df1\u3044\u90e8\u5206\u306e\u307f\uff0c\u5438\u53ce\u5883\u754c\u6761\u4ef6\u3092\u9069\u7528\u3059\u308b\uff0e \u5438\u53ce\u5883\u754c\u6761\u4ef6\u306e\u5b9a\u7fa9\u9818\u57df \u5438\u53ce\u5883\u754c\u6761\u4ef6\u306e\u5b9a\u7fa9\u9818\u57df\u306e\u6a21\u5f0f\u56f3\uff0e\u8d64\u70b9\u7dda\u304c kbeg_a(I,J) \u306e\u4f4d\u7f6e\u3092\u8868\u3059\uff0e \u7c21\u5358\u306e\u305f\u3081\uff0c OpenSWPC \u3067\u306fPML\u9818\u57df\u306f\u7c98\u5f3e\u6027\u3092\u89e3\u304b\u305a\uff0c\u5f3e\u6027\u4f53\u306e\u69cb\u6210\u65b9\u7a0b\u5f0f\u3068PML\u5438\u53ce\u6761\u4ef6\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\uff0e \u3053\u306e\u3053\u3068\u306b\u3088\u308a\u8a08\u7b97\u30e1\u30e2\u30ea\u3092\u7bc0\u7d04\u3067\u304d\u308b\u4e0a\uff0c\u5438\u53ce\u5883\u754c\u3068\u5185\u90e8\u9818\u57df\u3068\u306e\u9593\u3067\u306e\u8a08\u7b97\u8ca0\u8377\u306e\u30d0\u30e9\u30f3\u30b9\u3092\u6539\u5584\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u3057\u304b\u3057\uff0cQ\u5024\u304c\u6975\u7aef\u306b\u5c0f\u3055\u306a\u5a92\u8cea\u306e\u5834\u5408\uff0c\u5185\u90e8\u9818\u57df\u3067\u306e\u7269\u7406\u5206\u6563\u306b\u3088\u308b\u901f\u5ea6\u4f4e\u4e0b\u304c\u7121\u8996\u3067\u304d\u306a\u304f\u306a\u308b\uff0e \u3053\u306e\u5834\u5408\uff0c\u5438\u53ce\u5883\u754c\u5185\u3068\u5185\u90e8\u9818\u57df\u3068\u3067\u7269\u7406\u5206\u6563\u306e\u6709\u7121\u306b\u4f34\u3046\u901f\u5ea6\u30b3\u30f3\u30c8\u30e9\u30b9\u30c8\u304c\u767a\u751f\u3057\uff0c\u305d\u308c\u306b\u4f34\u3046\u4eba\u5de5\u53cd\u5c04\u6ce2\u304c\u751f\u305a\u308b\u3053\u3068\u304c\u3042\u308b\uff0e \u901f\u5ea6\u5747\u8cea\u5a92\u8cea\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306a\u3069\u304b\u3089\u53cd\u5c04\u6ce2\u751f\u6210\u306e\u5ea6\u5408\u3044\u3092\u78ba\u8a8d\u3057\uff0c\u305d\u308c\u304c\u8a31\u5bb9\u7bc4\u56f2\u3067\u3042\u308b\u304b\u3042\u3089\u304b\u3058\u3081\u8abf\u67fb\u3059\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\uff0e Cerjan\u306b\u3088\u308b\u5438\u53ce\u5883\u754c\u6761\u4ef6\u306b\u3064\u3044\u3066\u306f\uff0cCerjan (1985) 2 \u3067\u63d0\u6848\u3055\u308c\u305f\u30d1\u30e9\u30e1\u30bf\u304c\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\uff0e\u305f\u3060\u3057\uff0c\u30b9\u30dd\u30f3\u30b8\u5883\u754c\u306e\u539a\u3055\u306b\u3088\u3063\u3066\u5438\u53ce\u4fc2\u6570\u306f\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3055\u308c\u308b\uff0e PML\u306f\u591a\u304f\u306e\u5834\u5408\u306b\u3064\u3044\u3066\u975e\u5e38\u306b\u9ad8\u6027\u80fd\u306a\u5438\u53ce\u5883\u754c\u6761\u4ef6\u3067\u3042\u308b\u304c\uff0c\u30b3\u30f3\u30c8\u30e9\u30b9\u30c8\u306e\u5927\u304d\u306a\u901f\u5ea6\u69cb\u9020\u4e0d\u9023\u7d9a\u3084\u4f4e\u901f\u5ea6\u5c64\u306e\u5b58\u5728\u306a\u3069\u306b\u3088\u3063\u3066\uff0c\u6570\u5024\u4e0d\u5b89\u5b9a\u3092\u8d77\u3053\u3059\u3053\u3068\u304c\u3042\u308b\uff0e OpenSWPC \u3067\u63a1\u7528\u3057\u305fADE CFS-PML\u306f\u305d\u306e\u3088\u3046\u306a\u4e0d\u5b89\u5b9a\u304c\u8d77\u3053\u308a\u306b\u304f\u3044\u3068\u3055\u308c\u3066\u3044\u308b\u304c\uff0c\u4e07\u4e00\u6570\u5024\u8a08\u7b97\u306e\u4e0d\u5b89\u5b9a\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306b\u306f\uff0c \u8a08\u7b97\u9818\u57df\u3092\u5c11\u3057\u5e73\u884c\u79fb\u52d5\u3057\u3066\u307f\u308b\uff0e clon \u3068 clat \u3092\u5909\u66f4\u3059\u308b\u304b\uff0c\u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba nx , ny \u3092\u5897\u6e1b\u3055\u305b\u308b\uff0e \u6975\u7aef\u306a\u4f4e\u901f\u5ea6\u5c64\u3092 stabilize_pml \u30aa\u30d7\u30b7\u30e7\u30f3\u3092 .true. \u306b\u3059\u308b\u3053\u3068\u3067\u6392\u9664\u3057\u3066\u307f\u308b \u9707\u6e90\u3067\u306e\u30e9\u30a4\u30ba\u30bf\u30a4\u30e0\u3092\u9577\u304f\u3057\u3066\u9ad8\u5468\u6ce2\u3092\u6291\u3048\u308b \u306a\u3069\u306e\u5de5\u592b\u306b\u3088\u308a\u6539\u5584\u3059\u308b\u5834\u5408\u304c\u3042\u308b\uff0eCerjan\u306b\u3088\u308b\u5438\u53ce\u5883\u754c\u6761\u4ef6\u306f\u5e38\u306b\u5b89\u5b9a\u3067\u3042\u308b\u304c\uff0cPML\u3068\u6bd4\u3079\u308b\u3068\u5883\u754c\u306b\u304a\u3051\u308b\u5438\u53ce\u6027\u80fd\u306f\u4f4e\u304f\u306a\u308b\uff0e Parameters abc_type \u5438\u53ce\u5883\u754c\u6761\u4ef6\u306e\u7a2e\u985e\uff0e \u2019pml\u2019 \u3082\u3057\u304f\u306f \u2019cerjan\u2019 \u306e\u3069\u3061\u3089\u304b\u3092\u6307\u5b9a\uff0e na \u5438\u53ce\u5883\u754c\u9818\u57df\u306e\u30b0\u30ea\u30c3\u30c9\u539a\uff0e\u901a\u5e3810\u304b\u308920\u7a0b\u5ea6\u306e\u5024\u304c\u7528\u3044\u3089\u308c\u308b\uff0e stabilize_pml .true. \u306e\u3068\u304d\uff0c\u4f4e\u901f\u5ea6\u5c64\u3092\u6392\u9664\u3057\u3066PML\u306e\u5b89\u5b9a\u5316\u3092\u8a66\u307f\u308b\uff0e\u305f\u3060\u3057\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u526f\u4f5c\u7528\u3068\u3057\u3066\u4eba\u5de5\u53cd\u5c04\u6ce2\u306e\u632f\u5e45\u306f\u5927\u304d\u304f\u306a\u308b\u3053\u3068\u304c\u3042\u308b\uff0e Caution Version 5.0 -- 5.1 \u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u305f fullspace_mode \u306f\uff0c\u7279\u5b9a\u306e\u74b0\u5883\u4e0b\u3067\uff0c\u8a72\u5f53\u30e2\u30fc\u30c9\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u306a\u304f\u3066\u3082\u30c8\u30e9\u30d6\u30eb\u3092\u5f15\u304d\u8d77\u3053\u3059\u3053\u3068\u304c\u5224\u660e\u3057\u305f\u305f\u3081\uff0c\u4e00\u6642\u7684\u306b\u5229\u7528\u4e0d\u53ef\u3068\u3057\u3066\u3044\u308b\uff0e\u30c8\u30e9\u30d6\u30eb\u306e\u539f\u56e0\u306f\u76ee\u4e0b\u8ffd\u6c42\u4e2d\u3067\u3042\u308b\uff0e Zhang, W., and Y. Shen (2010), Unsplit complex frequency-shifted PML implementation using auxiliary differential equations for seismic wave modeling, Geophysics , 75 (4), T141\u2013T154, doi:10.1190/1.3463431. \u21a9 Cerjan, C., D. Kosloff, R. Kosloff, and M. Reshef (1985), A nonreflecting boundary condition for discrete acoustic and elastic wave equations, Geophysics , 50 (4), 705\u2013708. \u21a9 \u21a9","title":"\u5438\u53ce\u5883\u754c\u6761\u4ef6"},{"location":"ja/2._Parameters/0209_checkpoint/","text":"\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30fb\u30ea\u30b9\u30bf\u30fc\u30c8 \u00b6 \u5927\u578b\u8a08\u7b97\u6a5f\u306e\u30d0\u30c3\u30c1\u30b7\u30b9\u30c6\u30e0\u3067\u306f\uff0c\u4e00\u5ea6\u306e\u30b8\u30e7\u30d6\u3067\u8a08\u7b97\u3067\u304d\u308b\u7d99\u7d9a\u6642\u9593\u306b\u9650\u308a\u304c\u3042\u308b\u305f\u3081\uff0c\u4e00\u5b9a\u306e\u7d4c\u904e\u6642\u9593\uff08\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\uff09\u3067\u30e1\u30e2\u30ea\u306e\u5185\u5bb9\u3092\u3059\u3079\u3066\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3057\uff0c\u5225\u306e\u30b8\u30e7\u30d6\u3067\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u9014\u4e2d\u304b\u3089\u8a08\u7b97\u3092\u518d\u958b\u3059\u308b\uff08\u30ea\u30b9\u30bf\u30fc\u30c8\uff09\u3053\u3068\u304c\u884c\u308f\u308c\u308b\uff0e OpenSWPC \u3067\u306f\uff0e\u52d5\u4f5c\u6642\u9593\u304c ckp_time \uff08\u79d2\uff09\u3092\u8d85\u3048\u308b\u3068\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u901a\u904e\u3057\u305f\u3068\u898b\u306a\u3055\u308c\uff0c\u3059\u3079\u3066\u306e\u8a08\u7b97\u9014\u4e2d\u914d\u5217\u30a4\u30e1\u30fc\u30b8\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u5410\u304d\u51fa\u3057\u3066\u7d42\u4e86\u3059\u308b\uff0e \u540c\u3058\u74b0\u5883\u4e0b\u3067\u540c\u3058\u5b9f\u884c\u30bf\u30a4\u30c8\u30eb\uff08 title \uff09\u306e\u8a08\u7b97\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\uff0c\u306f\u307e\u305a\u30c7\u30a3\u30ec\u30af\u30c8\u30eacdir\u3092\u78ba\u8a8d\u3057\uff0c\u305d\u3053\u306b\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3088\u3046\u3067\u3042\u308c\u3070\u9014\u4e2d\u304b\u3089\u8a08\u7b97\u3092\u518d\u958b\u3059\u308b\uff0e \u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u3082\u3057\u304f\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3057\u306a\u3051\u308c\u3070\uff0c\u30bc\u30ed\u304b\u3089\u8a08\u7b97\u3092\u958b\u59cb\u3059\u308b\uff0e \u307e\u305f\uff0c\u5168\u8a08\u7b97\u304c\u7d42\u4e86\u3057\u305f\u5f8c\u306b\u306f\uff0c\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u306f\u307b\u307c\u3059\u3079\u3066\u524a\u9664\u3059\u308b\u304c\uff0c\u6574\u6570\u5024\u306e\u8a8d\u8b58\u30b3\u30fc\u30c9\u304c\u683c\u7d0d\u3055\u308c\u305f\u5c0f\u30d5\u30a1\u30a4\u30eb\u3092\u6b8b\u3059\uff0e \u3053\u308c\u306f\uff0c\u30ea\u30b9\u30bf\u30fc\u30c8\u6642\u306e\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u8abf\u67fb\u6642\u306b\u8a08\u7b97\u304c\u65e2\u306b\u7d42\u4e86\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u691c\u77e5\u3057\uff0c\u540c\u3058\u8a08\u7b97\u3092\u7e70\u308a\u8fd4\u3059\u3053\u3068\u3092\u9632\u3050\u305f\u3081\u306e\u3082\u306e\u3067\u3042\u308b\uff0e Parameters is_ckp \u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30fb\u30ea\u30b9\u30bf\u30fc\u30c8\u30e2\u30fc\u30c9\u306eON/OFF cdir :\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u5148\uff0e\u30ea\u30b9\u30bf\u30fc\u30c8\u306e\u5834\u5408\u306f\u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3059\u308b\u304b\u78ba\u8a8d\u3059\u308b\uff0e ckp_time \u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u6642\u9593\uff0e\u3053\u306e\u6642\u9593\u3092\u7d4c\u904e\u3059\u308b\u3068\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3057\u3066\u7d42\u4e86\u3059\u308b\uff0e ckp_interval ckp_interval \u6642\u9593\u30b9\u30c6\u30c3\u30d7\u6bce\u306b\u7d4c\u904e\u6642\u9593\u304c ckp_time \u3092\u8d85\u3048\u305f\u304b\u5224\u5b9a\u3059\u308b\uff0e","title":"\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30fb\u30ea\u30b9\u30bf\u30fc\u30c8"},{"location":"ja/2._Parameters/0209_checkpoint/#_1","text":"\u5927\u578b\u8a08\u7b97\u6a5f\u306e\u30d0\u30c3\u30c1\u30b7\u30b9\u30c6\u30e0\u3067\u306f\uff0c\u4e00\u5ea6\u306e\u30b8\u30e7\u30d6\u3067\u8a08\u7b97\u3067\u304d\u308b\u7d99\u7d9a\u6642\u9593\u306b\u9650\u308a\u304c\u3042\u308b\u305f\u3081\uff0c\u4e00\u5b9a\u306e\u7d4c\u904e\u6642\u9593\uff08\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\uff09\u3067\u30e1\u30e2\u30ea\u306e\u5185\u5bb9\u3092\u3059\u3079\u3066\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3057\uff0c\u5225\u306e\u30b8\u30e7\u30d6\u3067\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u9014\u4e2d\u304b\u3089\u8a08\u7b97\u3092\u518d\u958b\u3059\u308b\uff08\u30ea\u30b9\u30bf\u30fc\u30c8\uff09\u3053\u3068\u304c\u884c\u308f\u308c\u308b\uff0e OpenSWPC \u3067\u306f\uff0e\u52d5\u4f5c\u6642\u9593\u304c ckp_time \uff08\u79d2\uff09\u3092\u8d85\u3048\u308b\u3068\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u901a\u904e\u3057\u305f\u3068\u898b\u306a\u3055\u308c\uff0c\u3059\u3079\u3066\u306e\u8a08\u7b97\u9014\u4e2d\u914d\u5217\u30a4\u30e1\u30fc\u30b8\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u5410\u304d\u51fa\u3057\u3066\u7d42\u4e86\u3059\u308b\uff0e \u540c\u3058\u74b0\u5883\u4e0b\u3067\u540c\u3058\u5b9f\u884c\u30bf\u30a4\u30c8\u30eb\uff08 title \uff09\u306e\u8a08\u7b97\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\uff0c\u306f\u307e\u305a\u30c7\u30a3\u30ec\u30af\u30c8\u30eacdir\u3092\u78ba\u8a8d\u3057\uff0c\u305d\u3053\u306b\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3088\u3046\u3067\u3042\u308c\u3070\u9014\u4e2d\u304b\u3089\u8a08\u7b97\u3092\u518d\u958b\u3059\u308b\uff0e \u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u3082\u3057\u304f\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3057\u306a\u3051\u308c\u3070\uff0c\u30bc\u30ed\u304b\u3089\u8a08\u7b97\u3092\u958b\u59cb\u3059\u308b\uff0e \u307e\u305f\uff0c\u5168\u8a08\u7b97\u304c\u7d42\u4e86\u3057\u305f\u5f8c\u306b\u306f\uff0c\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u306f\u307b\u307c\u3059\u3079\u3066\u524a\u9664\u3059\u308b\u304c\uff0c\u6574\u6570\u5024\u306e\u8a8d\u8b58\u30b3\u30fc\u30c9\u304c\u683c\u7d0d\u3055\u308c\u305f\u5c0f\u30d5\u30a1\u30a4\u30eb\u3092\u6b8b\u3059\uff0e \u3053\u308c\u306f\uff0c\u30ea\u30b9\u30bf\u30fc\u30c8\u6642\u306e\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u8abf\u67fb\u6642\u306b\u8a08\u7b97\u304c\u65e2\u306b\u7d42\u4e86\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u691c\u77e5\u3057\uff0c\u540c\u3058\u8a08\u7b97\u3092\u7e70\u308a\u8fd4\u3059\u3053\u3068\u3092\u9632\u3050\u305f\u3081\u306e\u3082\u306e\u3067\u3042\u308b\uff0e Parameters is_ckp \u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30fb\u30ea\u30b9\u30bf\u30fc\u30c8\u30e2\u30fc\u30c9\u306eON/OFF cdir :\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u5148\uff0e\u30ea\u30b9\u30bf\u30fc\u30c8\u306e\u5834\u5408\u306f\u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3059\u308b\u304b\u78ba\u8a8d\u3059\u308b\uff0e ckp_time \u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u6642\u9593\uff0e\u3053\u306e\u6642\u9593\u3092\u7d4c\u904e\u3059\u308b\u3068\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3057\u3066\u7d42\u4e86\u3059\u308b\uff0e ckp_interval ckp_interval \u6642\u9593\u30b9\u30c6\u30c3\u30d7\u6bce\u306b\u7d4c\u904e\u6642\u9593\u304c ckp_time \u3092\u8d85\u3048\u305f\u304b\u5224\u5b9a\u3059\u308b\uff0e","title":"\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30fb\u30ea\u30b9\u30bf\u30fc\u30c8"},{"location":"ja/2._Parameters/0210_reciprocity/","text":"\u76f8\u53cd\u5b9a\u7406\u30e2\u30fc\u30c9 \u00b6 \u89b3\u6e2c\u70b9\u304b\u3089\u70b9\u9707\u6e90\u306b\u3088\u308b\u5730\u9707\u6ce2\u3092\u52b1\u8d77\u3057\uff0c\u8907\u6570\u306e\u9707\u6e90\u4f4d\u7f6e\u3092\u4eee\u60f3\u89b3\u6e2c\u70b9\u3068\u3057\u305f\u6ce2\u5f62\u3092\u8a08\u7b97\u3059\u308b\uff0e \u3053\u308c\u3089\u306f\uff0c\u76f8\u53cd\u5b9a\u7406\u306b\u3088\u3063\u3066\uff0c\u5404\u9707\u6e90\u4f4d\u7f6e\u304b\u3089\u89b3\u6e2c\u70b9\u307e\u3067\u306e\u8a08\u7b97\u6ce2\u5f62\u306b\u76f8\u5f53\u3059\u308b\uff0e\u3053\u308c\u3089\u306f\uff0c\u9707\u6e90\u6642\u9593\u95a2\u6570\u304c\u5145\u5206\u306b\u77ed\u3051\u308c\u3070Green\u95a2\u6570\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u672c\u30e2\u30fc\u30c9\u3067\u8a08\u7b97\u3055\u308c\u308b\u306e\u306f\uff0c\u9707\u6e90\u4f4d\u7f6e \\mathbf{\\xi} \u304b\u3089\u89b3\u6e2c\u70b9\u4f4d\u7f6e \\mathbf{r} \u3078\u306eGreen\u30c6\u30f3\u30bd\u30eb\u3092 G_{ij}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) \u306b\uff0c\u8a08\u7b97\u6642\u306b\u4eee\u5b9a\u3059\u308b\u9707\u6e90\u6642\u9593\u95a2\u6570\u3092 s(t) \u304c\u305f\u305f\u307f\u3053\u307e\u308c\u305f \\begin{align} \\begin{split} G^{M1}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\frac{\\partial G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_x} \\ast s(t) = \\frac{\\partial G_{ix} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_x} \\ast s(t) \\\\ G^{M2}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\frac{\\partial G_{iy} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_y} \\ast s(t) = \\frac{\\partial G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_y} \\ast s(t) \\\\ G^{M3}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\frac{\\partial G_{iz} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_z} \\ast s(t) = \\frac{\\partial G_{iz} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_z} \\ast s(t) \\\\ G^{M4}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\left( \\frac{\\partial G_{iy} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_z} + \\frac{\\partial G_{iz} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_y} \\right) \\ast s(t) \\\\ &= \\left( \\frac{\\partial G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_z} + \\frac{\\partial G_{iz} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_y} \\right) \\ast s(t) \\\\ G^{M5}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\left( \\frac{\\partial G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_z} + \\frac{\\partial G_{iz} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_x}\\right) \\ast s(t) \\\\& = \\left( \\frac{\\partial G_{ix} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_z} + \\frac{\\partial G_{iz} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_x}\\right) \\ast s(t) \\\\ G^{M6}_{i} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\left( \\frac{\\partial G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_y} + \\frac{\\partial G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_x} \\right) \\ast s(t) \\\\ &= \\left( \\frac{\\partial G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_y} + \\frac{\\partial G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_x} \\right) \\ast s(t) \\end{split} \\end{align} \u3067\u3042\u308b\uff0e\u307e\u305f\uff0c\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5b9f\u4f53\u6ce2Green\u8a08\u7b97 \\begin{align} \\begin{split} G^{B1}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) \\ast s(t) = G_{ix} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) \\ast s(t) \\\\ G^{B2}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv G_{iy} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) \\ast s(t) = G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) \\ast s(t) \\\\ G^{B3}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv G_{iz} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right)\\ast s(t) = G_{iz} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right)\\ast s(t) \\end{split} \\end{align} \u3082\u8a08\u7b97\u3055\u308c\u308b\uff0e \u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u3067\u6307\u5b9a\u3055\u308c\u305f\u89b3\u6e2c\u70b9 green_stnm \u304b\u3089\uff0c green_cmp \u6210\u5206\u306e\u5b9f\u4f53\u529b\u306b\u3088\u308b\u5730\u9707\u6ce2\u3092\uff0c\u6642\u9593\u9577\u3055 green_trise \u306e\u9707\u6e90\u6642\u9593\u95a2\u6570\u3067\u52b1\u8d77\u3059\u308b\uff0e \u305d\u306e\u305f\u3081\uff0c\u5168\u30b0\u30ea\u30fc\u30f3\u30c6\u30f3\u30bd\u30eb\u3092\u6c42\u3081\u308b\u306b\u306f\uff0c green_cmp=\u2019x\u2019, \u2019y\u2019, \u2019z\u2019 \u306e3\u7a2e\u985e\u306e\u8a08\u7b97\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b\uff0e \u9707\u6e90\u8981\u7d20\u306f\u30c7\u30ab\u30eb\u30c8\u5ea7\u6a19\u7cfb\u3082\u3057\u304f\u306f\u7def\u5ea6\u7d4c\u5ea6\u304a\u3088\u3073\u6df1\u3055\u3067\u6307\u5b9a\u3057\uff0c\u305d\u308c\u305e\u308c\u306e\u9707\u6e90\u8981\u7d20\u306b\u5bfe\u3057\u3066\u6574\u6570\u306e gid \u3092\u4ed8\u4e0e\u3059\u308b\uff0e \u7d50\u679c\u306f\uff0c (odir)/green/(gid) \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\uff0c (title)__(green_cmp)__mij__.sac \u3042\u308b\u3044\u306f (title)__(green_cmp)__fi__.sac \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u540d\u306eSAC\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u683c\u7d0d\u3055\u308c\u308b\uff0e gid \u306f\u5fc5\u305a\u3057\u3082\u9023\u756a\u3067\u3042\u308b\u5fc5\u8981\u306f\u306a\u3044\uff0eSAC\u306e\u898f\u7d04\u6ce2\u5f62\u3068\u76f4\u63a5\u6bd4\u8f03\u3059\u308b\u305f\u3081\uff0c\u51fa\u529b\u6ce2\u5f62\u306b\u306f 10^9 \u304c\u4e57\u3058\u3089\u308c\u3066\u3044\u308b\uff0e\u307e\u305f\uff0c z \u306f\u4e0b\u304c\u6b63\u306b\u306a\u308b\u5ea7\u6a19\u7cfb\u3092\u53d6\u3063\u3066\u3044\u308b\u304c\uff0cGreen\u95a2\u6570\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b\u6ce2\u5f62\u306f\uff0c\u591a\u304f\u306e\u5834\u5408\u306e\u89b3\u6e2c\u306b\u6e96\u3058\uff0c\u4e0a\u304c\u6b63\u306b\u306a\u308b\u3088\u3046\u306b\u5909\u63db\u3055\u308c\u3066\u3044\u308b\uff0e\u3057\u304b\u3057\uff0c\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u5fdc\u7b54\u306e\u8a08\u7b97\u306e\u6df1\u3055\u65b9\u5411\u5fae\u5206\u306f\u8a08\u7b97\u5ea7\u6a19\u7cfb\u306e\u4e0b\u304c\u6b63\u306e\u5b9a\u7fa9\u306e\u307e\u307e\u884c\u308f\u308c\u3066\u3044\u308b\uff0e Parameters green_mode :Green\u95a2\u6570\u30e2\u30fc\u30c9\u306eON/OFF\u3092\u8a2d\u5b9a\u3059\u308b\uff0e .true. \u3067ON\u306b\u306a\u308a\uff0c\u901a\u5e38\u306e\u9707\u6e90\u306b\u95a2\u3059\u308b\u6307\u5b9a\u306f\u7121\u8996\u3055\u308c\u308b\uff0e green_stnm \u53d7\u4fe1\u89b3\u6e2c\u70b9\u540d\uff0e\u3053\u306e\u89b3\u6e2c\u70b9\u304c\u5225\u9014\u4e0e\u3048\u308b\u89b3\u6e2c\u70b9\u30ea\u30b9\u30c8\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e green_cmp Green\u95a2\u6570\u3092\u8a08\u7b97\u3059\u308b\u6210\u5206\uff0e\u53d7\u4fe1\u70b9\u306b\u304a\u3051\u308b\u89b3\u6e2c\u6210\u5206\u306b\u76f8\u5f53\u3059\u308b\uff0e \u2019x\u2019 , \u2019y\u2019 , \u2019z\u2019 \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\uff0e green_trise Green\u95a2\u6570\u306b\u305f\u305f\u307f\u8fbc\u307e\u308c\u308b\u9707\u6e90\u6642\u9593\u95a2\u6570\u306e\u30e9\u30a4\u30ba\u30bf\u30a4\u30e0 green_bforce .true. \u306e\u3068\u304d\u5b9f\u4f53\u6ce2\u306eGreen\u95a2\u6570\u3082\u8a08\u7b97\u3059\u308b\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u306f .false. green_fmt Green\u95a2\u6570\u306e\u9707\u6e90\u8981\u7d20\u4f4d\u7f6e\u30d5\u30a1\u30a4\u30eb\u30ea\u30b9\u30c8\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff0e \u2019xyz\u2019 \uff08\u30c7\u30ab\u30eb\u30c8\u5ea7\u6a19\uff1b\u30c7\u30d5\u30a9\u30eb\u30c8\uff09\u304b \u2019llz\u2019 \uff08\u7def\u5ea6\u30fb\u7d4c\u5ea6\u30fb\u6df1\u3055\uff09\u306e\u3069\u3061\u3089\u304b\u3092\u6307\u5b9a\u3059\u308b\uff0e green_maxdist \u9707\u6e90\u8981\u7d20\u4f4d\u7f6e\u3068\u89b3\u6e2c\u70b9\u306e\u9593\u306e\u9707\u592e\u8ddd\u96e2\u304c\u3053\u306e\u6307\u5b9a\u30d1\u30e9\u30e1\u30bf\uff08km\u5358\u4f4d\uff09\u4ee5\u5185\u306e\u5834\u5408\u306b\u306e\u307fGreen\u95a2\u6570\u3092\u8a08\u7b97\u3059\u308b\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u5e38\u306b\u8a08\u7b97\u3059\u308b\uff0e fn_glst Green\u95a2\u6570\u9707\u6e90\u8981\u7d20\u4f4d\u7f6e\u30d5\u30a1\u30a4\u30eb\u540d\uff0e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u8868\u306e\u901a\u308a\uff0e stftype \u9707\u6e90\u6642\u9593\u95a2\u6570\u7a2e\u5225\uff0e\u6307\u5b9a\u6cd5\u306f\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u9707\u6e90\u306b\u540c\u3058\uff0e ntdec_w Green\u95a2\u6570\u6ce2\u5f62\u51fa\u529b\u306e\u6642\u9593\u9593\u5f15\u304d\u9593\u9694\uff0e\u901a\u5e38\u8a08\u7b97\u306e\u6ce2\u5f62\u51fa\u529b\u6642\u306e\u6307\u5b9a\u306b\u540c\u3058\uff0e \u9707\u6e90\u8981\u7d20\u4f4d\u7f6e\u30d5\u30a1\u30a4\u30eb\u306f green_fmt \u306e\u5024\u306b\u5fdc\u3058\u3066\u4ee5\u4e0b\u306e\u66f8\u5f0f\u3092\u53d6\u308b\uff0e green_fmt \u66f8\u5f0f \u2019xyz\u2019 x y z gid \u2019llz\u2019 lon lat z gid","title":"\u76f8\u53cd\u5b9a\u7406\u30e2\u30fc\u30c9"},{"location":"ja/2._Parameters/0210_reciprocity/#_1","text":"\u89b3\u6e2c\u70b9\u304b\u3089\u70b9\u9707\u6e90\u306b\u3088\u308b\u5730\u9707\u6ce2\u3092\u52b1\u8d77\u3057\uff0c\u8907\u6570\u306e\u9707\u6e90\u4f4d\u7f6e\u3092\u4eee\u60f3\u89b3\u6e2c\u70b9\u3068\u3057\u305f\u6ce2\u5f62\u3092\u8a08\u7b97\u3059\u308b\uff0e \u3053\u308c\u3089\u306f\uff0c\u76f8\u53cd\u5b9a\u7406\u306b\u3088\u3063\u3066\uff0c\u5404\u9707\u6e90\u4f4d\u7f6e\u304b\u3089\u89b3\u6e2c\u70b9\u307e\u3067\u306e\u8a08\u7b97\u6ce2\u5f62\u306b\u76f8\u5f53\u3059\u308b\uff0e\u3053\u308c\u3089\u306f\uff0c\u9707\u6e90\u6642\u9593\u95a2\u6570\u304c\u5145\u5206\u306b\u77ed\u3051\u308c\u3070Green\u95a2\u6570\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u672c\u30e2\u30fc\u30c9\u3067\u8a08\u7b97\u3055\u308c\u308b\u306e\u306f\uff0c\u9707\u6e90\u4f4d\u7f6e \\mathbf{\\xi} \u304b\u3089\u89b3\u6e2c\u70b9\u4f4d\u7f6e \\mathbf{r} \u3078\u306eGreen\u30c6\u30f3\u30bd\u30eb\u3092 G_{ij}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) \u306b\uff0c\u8a08\u7b97\u6642\u306b\u4eee\u5b9a\u3059\u308b\u9707\u6e90\u6642\u9593\u95a2\u6570\u3092 s(t) \u304c\u305f\u305f\u307f\u3053\u307e\u308c\u305f \\begin{align} \\begin{split} G^{M1}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\frac{\\partial G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_x} \\ast s(t) = \\frac{\\partial G_{ix} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_x} \\ast s(t) \\\\ G^{M2}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\frac{\\partial G_{iy} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_y} \\ast s(t) = \\frac{\\partial G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_y} \\ast s(t) \\\\ G^{M3}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\frac{\\partial G_{iz} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_z} \\ast s(t) = \\frac{\\partial G_{iz} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_z} \\ast s(t) \\\\ G^{M4}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\left( \\frac{\\partial G_{iy} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_z} + \\frac{\\partial G_{iz} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_y} \\right) \\ast s(t) \\\\ &= \\left( \\frac{\\partial G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_z} + \\frac{\\partial G_{iz} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_y} \\right) \\ast s(t) \\\\ G^{M5}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\left( \\frac{\\partial G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_z} + \\frac{\\partial G_{iz} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_x}\\right) \\ast s(t) \\\\& = \\left( \\frac{\\partial G_{ix} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_z} + \\frac{\\partial G_{iz} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_x}\\right) \\ast s(t) \\\\ G^{M6}_{i} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv \\left( \\frac{\\partial G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_y} + \\frac{\\partial G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_x} \\right) \\ast s(t) \\\\ &= \\left( \\frac{\\partial G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) }{\\partial \\xi_y} + \\frac{\\partial G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) }{\\partial \\xi_x} \\right) \\ast s(t) \\end{split} \\end{align} \u3067\u3042\u308b\uff0e\u307e\u305f\uff0c\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5b9f\u4f53\u6ce2Green\u8a08\u7b97 \\begin{align} \\begin{split} G^{B1}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv G_{ix} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) \\ast s(t) = G_{ix} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) \\ast s(t) \\\\ G^{B2}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv G_{iy} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) \\ast s(t) = G_{iy} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right) \\ast s(t) \\\\ G^{B3}_{i}\\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right) &\\equiv G_{iz} \\left( \\mathbf{r}, t; \\mathbf{\\xi}\\right)\\ast s(t) = G_{iz} \\left( \\mathbf{\\xi}, t; \\mathbf{r}\\right)\\ast s(t) \\end{split} \\end{align} \u3082\u8a08\u7b97\u3055\u308c\u308b\uff0e \u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u3067\u6307\u5b9a\u3055\u308c\u305f\u89b3\u6e2c\u70b9 green_stnm \u304b\u3089\uff0c green_cmp \u6210\u5206\u306e\u5b9f\u4f53\u529b\u306b\u3088\u308b\u5730\u9707\u6ce2\u3092\uff0c\u6642\u9593\u9577\u3055 green_trise \u306e\u9707\u6e90\u6642\u9593\u95a2\u6570\u3067\u52b1\u8d77\u3059\u308b\uff0e \u305d\u306e\u305f\u3081\uff0c\u5168\u30b0\u30ea\u30fc\u30f3\u30c6\u30f3\u30bd\u30eb\u3092\u6c42\u3081\u308b\u306b\u306f\uff0c green_cmp=\u2019x\u2019, \u2019y\u2019, \u2019z\u2019 \u306e3\u7a2e\u985e\u306e\u8a08\u7b97\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b\uff0e \u9707\u6e90\u8981\u7d20\u306f\u30c7\u30ab\u30eb\u30c8\u5ea7\u6a19\u7cfb\u3082\u3057\u304f\u306f\u7def\u5ea6\u7d4c\u5ea6\u304a\u3088\u3073\u6df1\u3055\u3067\u6307\u5b9a\u3057\uff0c\u305d\u308c\u305e\u308c\u306e\u9707\u6e90\u8981\u7d20\u306b\u5bfe\u3057\u3066\u6574\u6570\u306e gid \u3092\u4ed8\u4e0e\u3059\u308b\uff0e \u7d50\u679c\u306f\uff0c (odir)/green/(gid) \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\uff0c (title)__(green_cmp)__mij__.sac \u3042\u308b\u3044\u306f (title)__(green_cmp)__fi__.sac \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u540d\u306eSAC\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u683c\u7d0d\u3055\u308c\u308b\uff0e gid \u306f\u5fc5\u305a\u3057\u3082\u9023\u756a\u3067\u3042\u308b\u5fc5\u8981\u306f\u306a\u3044\uff0eSAC\u306e\u898f\u7d04\u6ce2\u5f62\u3068\u76f4\u63a5\u6bd4\u8f03\u3059\u308b\u305f\u3081\uff0c\u51fa\u529b\u6ce2\u5f62\u306b\u306f 10^9 \u304c\u4e57\u3058\u3089\u308c\u3066\u3044\u308b\uff0e\u307e\u305f\uff0c z \u306f\u4e0b\u304c\u6b63\u306b\u306a\u308b\u5ea7\u6a19\u7cfb\u3092\u53d6\u3063\u3066\u3044\u308b\u304c\uff0cGreen\u95a2\u6570\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b\u6ce2\u5f62\u306f\uff0c\u591a\u304f\u306e\u5834\u5408\u306e\u89b3\u6e2c\u306b\u6e96\u3058\uff0c\u4e0a\u304c\u6b63\u306b\u306a\u308b\u3088\u3046\u306b\u5909\u63db\u3055\u308c\u3066\u3044\u308b\uff0e\u3057\u304b\u3057\uff0c\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u5fdc\u7b54\u306e\u8a08\u7b97\u306e\u6df1\u3055\u65b9\u5411\u5fae\u5206\u306f\u8a08\u7b97\u5ea7\u6a19\u7cfb\u306e\u4e0b\u304c\u6b63\u306e\u5b9a\u7fa9\u306e\u307e\u307e\u884c\u308f\u308c\u3066\u3044\u308b\uff0e Parameters green_mode :Green\u95a2\u6570\u30e2\u30fc\u30c9\u306eON/OFF\u3092\u8a2d\u5b9a\u3059\u308b\uff0e .true. \u3067ON\u306b\u306a\u308a\uff0c\u901a\u5e38\u306e\u9707\u6e90\u306b\u95a2\u3059\u308b\u6307\u5b9a\u306f\u7121\u8996\u3055\u308c\u308b\uff0e green_stnm \u53d7\u4fe1\u89b3\u6e2c\u70b9\u540d\uff0e\u3053\u306e\u89b3\u6e2c\u70b9\u304c\u5225\u9014\u4e0e\u3048\u308b\u89b3\u6e2c\u70b9\u30ea\u30b9\u30c8\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e green_cmp Green\u95a2\u6570\u3092\u8a08\u7b97\u3059\u308b\u6210\u5206\uff0e\u53d7\u4fe1\u70b9\u306b\u304a\u3051\u308b\u89b3\u6e2c\u6210\u5206\u306b\u76f8\u5f53\u3059\u308b\uff0e \u2019x\u2019 , \u2019y\u2019 , \u2019z\u2019 \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\uff0e green_trise Green\u95a2\u6570\u306b\u305f\u305f\u307f\u8fbc\u307e\u308c\u308b\u9707\u6e90\u6642\u9593\u95a2\u6570\u306e\u30e9\u30a4\u30ba\u30bf\u30a4\u30e0 green_bforce .true. \u306e\u3068\u304d\u5b9f\u4f53\u6ce2\u306eGreen\u95a2\u6570\u3082\u8a08\u7b97\u3059\u308b\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u306f .false. green_fmt Green\u95a2\u6570\u306e\u9707\u6e90\u8981\u7d20\u4f4d\u7f6e\u30d5\u30a1\u30a4\u30eb\u30ea\u30b9\u30c8\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff0e \u2019xyz\u2019 \uff08\u30c7\u30ab\u30eb\u30c8\u5ea7\u6a19\uff1b\u30c7\u30d5\u30a9\u30eb\u30c8\uff09\u304b \u2019llz\u2019 \uff08\u7def\u5ea6\u30fb\u7d4c\u5ea6\u30fb\u6df1\u3055\uff09\u306e\u3069\u3061\u3089\u304b\u3092\u6307\u5b9a\u3059\u308b\uff0e green_maxdist \u9707\u6e90\u8981\u7d20\u4f4d\u7f6e\u3068\u89b3\u6e2c\u70b9\u306e\u9593\u306e\u9707\u592e\u8ddd\u96e2\u304c\u3053\u306e\u6307\u5b9a\u30d1\u30e9\u30e1\u30bf\uff08km\u5358\u4f4d\uff09\u4ee5\u5185\u306e\u5834\u5408\u306b\u306e\u307fGreen\u95a2\u6570\u3092\u8a08\u7b97\u3059\u308b\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u5e38\u306b\u8a08\u7b97\u3059\u308b\uff0e fn_glst Green\u95a2\u6570\u9707\u6e90\u8981\u7d20\u4f4d\u7f6e\u30d5\u30a1\u30a4\u30eb\u540d\uff0e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u8868\u306e\u901a\u308a\uff0e stftype \u9707\u6e90\u6642\u9593\u95a2\u6570\u7a2e\u5225\uff0e\u6307\u5b9a\u6cd5\u306f\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u9707\u6e90\u306b\u540c\u3058\uff0e ntdec_w Green\u95a2\u6570\u6ce2\u5f62\u51fa\u529b\u306e\u6642\u9593\u9593\u5f15\u304d\u9593\u9694\uff0e\u901a\u5e38\u8a08\u7b97\u306e\u6ce2\u5f62\u51fa\u529b\u6642\u306e\u6307\u5b9a\u306b\u540c\u3058\uff0e \u9707\u6e90\u8981\u7d20\u4f4d\u7f6e\u30d5\u30a1\u30a4\u30eb\u306f green_fmt \u306e\u5024\u306b\u5fdc\u3058\u3066\u4ee5\u4e0b\u306e\u66f8\u5f0f\u3092\u53d6\u308b\uff0e green_fmt \u66f8\u5f0f \u2019xyz\u2019 x y z gid \u2019llz\u2019 lon lat z gid","title":"\u76f8\u53cd\u5b9a\u7406\u30e2\u30fc\u30c9"},{"location":"ja/2._Parameters/0211_2dcode/","text":"2\u6b21\u5143\u30b3\u30fc\u30c9\u56fa\u6709\u306e\u8a2d\u5b9a \u00b6 OpenSWPC \u306b\u306f\uff0c2\u6b21\u5143\u65ad\u9762\u306b\u304a\u3051\u308bP-SV\uff08 swpc_psv \uff09\u3068SH\uff08 swpc_sh \uff09\u306e\u30b3\u30fc\u30c9\u3082\u540c\u68b1\u3055\u308c\u3066\u3044\u308b\uff0e 2\u6b21\u5143\u30b3\u30fc\u30c9\u306f\u3059\u3079\u30663\u6b21\u5143\u30b3\u30fc\u30c9\u306exz\u65ad\u9762\uff08 y=0 ; \u56f3\u53c2\u7167\uff09\u306b\u304a\u3051\u308b x , z \u6210\u5206\uff08P-SV\uff09\u3082\u3057\u304f\u306f y \u6210\u5206\uff08SH\uff09\u3092\u8a08\u7b97\u3059\u308b\u30b3\u30fc\u30c9\u3068\u3057\u3066\u52d5\u4f5c\u3057\uff0c3\u6b21\u5143\u7248\u3068\u5b8c\u5168\u306b\u540c\u3058\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u7fa4\u3067\u52d5\u4f5c\u3059\u308b\uff0e \u9707\u6e90\u4f4d\u7f6e\u3082 x-z \u65ad\u9762\uff08 y=0 \uff09\u306b\u6295\u5f71\u3055\u308c\u308b\uff0e Figure \u6c34\u5e73\u9762\u5185\u306b\u304a\u3051\u308b2\u6b21\u5143\u554f\u984c\u3078\u306e\u6295\u5f71 \u305f\u3060\u3057\uff0c\u305d\u308c\u305e\u308c\u306e\u6210\u5206\u3067\u5229\u7528\u3057\u306a\u3044\u30d1\u30e9\u30e1\u30bf\uff08\u305f\u3068\u3048\u3070\u89b3\u6e2c\u70b9\u4f4d\u7f6e\u306e y \u65b9\u5411\u6210\u5206\u3084\u9707\u6e90\u306b\u304a\u3051\u308b\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u306e\u975e\u5229\u7528\u6210\u5206\uff09\u306f\u7121\u8996\u3055\u308c\u308b\uff0e\u89b3\u6e2c\u70b9\u3084\u9707\u6e90\u4f4d\u7f6e\u306e\u6295\u5f71\u306e\u969b\uff0c\u305d\u306ey\u8ef8\u65b9\u5411\u306e\u5ea7\u6a19\u306f\u8003\u616e\u3055\u308c\u306a\u3044\uff0e\u6295\u5f71\u8ef8\u304b\u3089\u9060\u3044\u89b3\u6e2c\u70b9\u306e\u8a18\u9332\u3082\u51fa\u529b\u3055\u308c\u3066\u3057\u307e\u3046\u305f\u3081\uff0c\u30ea\u30b9\u30c8\u306e\u6307\u5b9a\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e \u5e73\u9762\u6ce2\u5165\u5c04\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u304c\uff0c pw_strike , pw_rake \u306f2\u6b21\u5143\u65ad\u9762\u5185\u3067\u306e\u632f\u52d5\u3092\u6e80\u305f\u3059\u3088\u3046\u306b\u56fa\u5b9a\u3055\u308c\u308b\uff0e\u50be\u659c\u89d2 pw_dip \u3060\u3051\u304c\u6307\u5b9a\u3067\u304d\u308b\uff0e 2\u6b21\u5143\u30b3\u30fc\u30c9\u306e\u7d50\u679c\u306b\u3064\u3044\u3066 \u00b6 \u5730\u9707\u6ce2\u4f1d\u64ad\u306b\u304a\u3044\u3066\uff0c3\u6b21\u5143\u30682\u6b21\u5143\u306e\u554f\u984c\u306f\u672c\u8cea\u7684\u306b\u7570\u306a\u3063\u3066\u3044\u308b\uff0e2\u6b21\u5143\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306f\uff0c3\u6b21\u5143\u7a7a\u9593\u3067 y \u65b9\u5411\u306b\u7121\u9650\u306b\u7d9a\u304f\u7dda\u9707\u6e90\u3092\u4eee\u5b9a\u3057\u305f\u3053\u3068\u306b\u7b49\u3057\u304f\uff0c\u5730\u9707\u6ce2\u306e\u632f\u5e45\u3084\u5e7e\u4f55\u6e1b\u8870\u304c3\u6b21\u5143\u306e\u3082\u306e\u3068\u5927\u304d\u304f\u3053\u3068\u306a\u308b\uff0e\u305d\u306e\u305f\u3081\uff0c2\u6b21\u5143\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7d50\u679c\u306e\u5730\u9707\u6ce2\u5f62\u3092\u89b3\u6e2c\u3055\u308c\u305f\u8a18\u9332\u3068\u5b9a\u91cf\u7684\u306b\u6bd4\u8f03\u3059\u308b\u306e\u306f\u305f\u3044\u3078\u3093\u306b\u5371\u967a\u3067\u3042\u308b\uff0e \u305f\u3060\u3057\uff0c\u4e00\u5b9a\u306e\u4eee\u5b9a\u306e\u3082\u3068\u3067\uff0c2\u6b21\u5143\u30b3\u30fc\u30c9\u306e\u7d50\u679c\u3092\u3042\u305f\u304b\u3082 y \u65b9\u5411\u306b\u306f\u4e00\u69d8\u306a\u69cb\u9020\u3092\u6301\u30643\u6b21\u5143\u7a7a\u9593\u3067\u306e\u5730\u9707\u6ce2\u5f62\u3067\u3042\u308b\u304b\u306e\u3088\u3046\u306b\u5909\u63db\u3059\u308b\u624b\u6cd5\u306f\u5b58\u5728\u3059\u308b\uff0eVersion 5.2\u4ee5\u964d\u306f wvconv \u3067\u305d\u306e\u3088\u3046\u306a\u5909\u63db\u3092\u5b9f\u73fe\u3067\u304d\u308b\uff0e","title":"2\u6b21\u5143\u30b3\u30fc\u30c9\u56fa\u6709\u306e\u8a2d\u5b9a"},{"location":"ja/2._Parameters/0211_2dcode/#2","text":"OpenSWPC \u306b\u306f\uff0c2\u6b21\u5143\u65ad\u9762\u306b\u304a\u3051\u308bP-SV\uff08 swpc_psv \uff09\u3068SH\uff08 swpc_sh \uff09\u306e\u30b3\u30fc\u30c9\u3082\u540c\u68b1\u3055\u308c\u3066\u3044\u308b\uff0e 2\u6b21\u5143\u30b3\u30fc\u30c9\u306f\u3059\u3079\u30663\u6b21\u5143\u30b3\u30fc\u30c9\u306exz\u65ad\u9762\uff08 y=0 ; \u56f3\u53c2\u7167\uff09\u306b\u304a\u3051\u308b x , z \u6210\u5206\uff08P-SV\uff09\u3082\u3057\u304f\u306f y \u6210\u5206\uff08SH\uff09\u3092\u8a08\u7b97\u3059\u308b\u30b3\u30fc\u30c9\u3068\u3057\u3066\u52d5\u4f5c\u3057\uff0c3\u6b21\u5143\u7248\u3068\u5b8c\u5168\u306b\u540c\u3058\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u7fa4\u3067\u52d5\u4f5c\u3059\u308b\uff0e \u9707\u6e90\u4f4d\u7f6e\u3082 x-z \u65ad\u9762\uff08 y=0 \uff09\u306b\u6295\u5f71\u3055\u308c\u308b\uff0e Figure \u6c34\u5e73\u9762\u5185\u306b\u304a\u3051\u308b2\u6b21\u5143\u554f\u984c\u3078\u306e\u6295\u5f71 \u305f\u3060\u3057\uff0c\u305d\u308c\u305e\u308c\u306e\u6210\u5206\u3067\u5229\u7528\u3057\u306a\u3044\u30d1\u30e9\u30e1\u30bf\uff08\u305f\u3068\u3048\u3070\u89b3\u6e2c\u70b9\u4f4d\u7f6e\u306e y \u65b9\u5411\u6210\u5206\u3084\u9707\u6e90\u306b\u304a\u3051\u308b\u30e2\u30fc\u30e1\u30f3\u30c8\u30c6\u30f3\u30bd\u30eb\u306e\u975e\u5229\u7528\u6210\u5206\uff09\u306f\u7121\u8996\u3055\u308c\u308b\uff0e\u89b3\u6e2c\u70b9\u3084\u9707\u6e90\u4f4d\u7f6e\u306e\u6295\u5f71\u306e\u969b\uff0c\u305d\u306ey\u8ef8\u65b9\u5411\u306e\u5ea7\u6a19\u306f\u8003\u616e\u3055\u308c\u306a\u3044\uff0e\u6295\u5f71\u8ef8\u304b\u3089\u9060\u3044\u89b3\u6e2c\u70b9\u306e\u8a18\u9332\u3082\u51fa\u529b\u3055\u308c\u3066\u3057\u307e\u3046\u305f\u3081\uff0c\u30ea\u30b9\u30c8\u306e\u6307\u5b9a\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e \u5e73\u9762\u6ce2\u5165\u5c04\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u304c\uff0c pw_strike , pw_rake \u306f2\u6b21\u5143\u65ad\u9762\u5185\u3067\u306e\u632f\u52d5\u3092\u6e80\u305f\u3059\u3088\u3046\u306b\u56fa\u5b9a\u3055\u308c\u308b\uff0e\u50be\u659c\u89d2 pw_dip \u3060\u3051\u304c\u6307\u5b9a\u3067\u304d\u308b\uff0e","title":"2\u6b21\u5143\u30b3\u30fc\u30c9\u56fa\u6709\u306e\u8a2d\u5b9a"},{"location":"ja/2._Parameters/0211_2dcode/#2_1","text":"\u5730\u9707\u6ce2\u4f1d\u64ad\u306b\u304a\u3044\u3066\uff0c3\u6b21\u5143\u30682\u6b21\u5143\u306e\u554f\u984c\u306f\u672c\u8cea\u7684\u306b\u7570\u306a\u3063\u3066\u3044\u308b\uff0e2\u6b21\u5143\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306f\uff0c3\u6b21\u5143\u7a7a\u9593\u3067 y \u65b9\u5411\u306b\u7121\u9650\u306b\u7d9a\u304f\u7dda\u9707\u6e90\u3092\u4eee\u5b9a\u3057\u305f\u3053\u3068\u306b\u7b49\u3057\u304f\uff0c\u5730\u9707\u6ce2\u306e\u632f\u5e45\u3084\u5e7e\u4f55\u6e1b\u8870\u304c3\u6b21\u5143\u306e\u3082\u306e\u3068\u5927\u304d\u304f\u3053\u3068\u306a\u308b\uff0e\u305d\u306e\u305f\u3081\uff0c2\u6b21\u5143\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7d50\u679c\u306e\u5730\u9707\u6ce2\u5f62\u3092\u89b3\u6e2c\u3055\u308c\u305f\u8a18\u9332\u3068\u5b9a\u91cf\u7684\u306b\u6bd4\u8f03\u3059\u308b\u306e\u306f\u305f\u3044\u3078\u3093\u306b\u5371\u967a\u3067\u3042\u308b\uff0e \u305f\u3060\u3057\uff0c\u4e00\u5b9a\u306e\u4eee\u5b9a\u306e\u3082\u3068\u3067\uff0c2\u6b21\u5143\u30b3\u30fc\u30c9\u306e\u7d50\u679c\u3092\u3042\u305f\u304b\u3082 y \u65b9\u5411\u306b\u306f\u4e00\u69d8\u306a\u69cb\u9020\u3092\u6301\u30643\u6b21\u5143\u7a7a\u9593\u3067\u306e\u5730\u9707\u6ce2\u5f62\u3067\u3042\u308b\u304b\u306e\u3088\u3046\u306b\u5909\u63db\u3059\u308b\u624b\u6cd5\u306f\u5b58\u5728\u3059\u308b\uff0eVersion 5.2\u4ee5\u964d\u306f wvconv \u3067\u305d\u306e\u3088\u3046\u306a\u5909\u63db\u3092\u5b9f\u73fe\u3067\u304d\u308b\uff0e","title":"2\u6b21\u5143\u30b3\u30fc\u30c9\u306e\u7d50\u679c\u306b\u3064\u3044\u3066"},{"location":"ja/3._Tools/0301_snapshot/","text":"\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8 \u00b6 read_snp.x \u00b6 \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306f\u72ec\u81ea\u5f62\u5f0f\u3082\u3057\u304f\u306f NetCDF \u5f62\u5f0f\u306e\u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b\u304c\uff0c\u3044\u305a\u308c\u3082\u30d7\u30ed\u30b0\u30e9\u30e0 read_snp.x \u306b\u3088\u3063\u3066\u53ef\u8996\u5316\u3082\u3057\u304f\u306f\u632f\u5e45\u30c7\u30fc\u30bf\u306e\u62bd\u51fa\u304c\u3067\u304d\u308b\uff0e 1 2 read_snp.x -i snapshotfile [ -h ] [ -ppm | -bmp ] [ -pall ] [ -mul var | -mul1 var -mul2 var ... ] [ -bin ] [ -asc ] [ -skip n ] -h \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u5185\u5305\u3055\u308c\u3066\u3044\u308b\u30d8\u30c3\u30c0\u60c5\u5831\u3092\u51fa\u529b\u3059\u308b\uff0e\u8a08\u7b97\u3092\u5b9f\u65bd\u3057\u305f\u65e5\u6642\u30fb\u8a08\u7b97\u30bf\u30a4\u30c8\u30eb\u30fb\u30b3\u30fc\u30c9\u7a2e\u5225\uff083D/PSV/SH\uff09\u30fb\u30b0\u30ea\u30c3\u30c9\u9593\u9694\u30fb\u5ea7\u6a19\u7cfb\u306a\u3069\u306e\u60c5\u5831\u304c\u51fa\u529b\u3055\u308c\u308b\uff0e\u4ee5\u4e0b\u306b\u4f8b\u3092\u793a\u3059\uff0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 $ ../bin/read_snp.x -i swpc_3d.xz.ps.snp -h [binary type] : STREAMIO [code type] : SWPC_3D [header version]: 3 [title] : swpc_3d [date generated]: 1408015126 2014-08-14T11-18-46 [coordinate] : xz [data type] : ps [ns1] : 256 [ns2] : 256 [beg1] : -63.87500 [beg2] : -9.87500 [ds1] : 0.25000 [ds2] : 0.25000 [dt] : 0.05000 [na1] : 20 [na2] : 20 [nmed] : 3 [nsnp] : 2 [clon] : 143.50000 [clat] : 42.00000 -ppm , -bmp \u305d\u308c\u305e\u308cppm\u3082\u3057\u304f\u306fbmp\u5f62\u5f0f\u306e\u753b\u50cf\u3092\u51fa\u529b\u3059\u308b\uff0e\u7d50\u679c\u306f\u305d\u308c\u305e\u308c ppm / bmp \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff08\u81ea\u52d5\u4f5c\u6210\uff09\u306b\u9023\u756a\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u683c\u7d0d\u3055\u308c\u308b\uff0e\u53ef\u8996\u5316\u5bfe\u8c61\u304c\u901f\u5ea6\u3042\u308b\u3044\u306f\u5909\u4f4d\u3067\u3042\u308c\u3070\uff0c\u4e0a\u4e0b\u52d5\u3068\u6c34\u5e73\u52d5\u3092\u305d\u308c\u305e\u308c\u8d64\u3068\u7dd1\u3067\uff0cP\u6ce2\u30fbS\u6ce2\uff08div, rot\uff09\u3067\u3042\u308c\u3070\u305d\u308c\u305e\u308c\u306e\u6210\u5206\u306e\u7d76\u5bfe\u5024\u3092\u8d64\u3068\u7dd1\u3067\u8272\u5206\u3051\u3057\u3066\u8868\u793a\u3059\u308b\uff0e\u305f\u3060\u3057\uff0c\u7d76\u5bfe\u5024\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u4ed8\u52a0\u3055\u308c\u305f\u5834\u5408\u306b\u306fGMT\u306e\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8hot\u76f8\u5f53\u306e\u8272\u3067\u7d76\u5bfe\u5024\u3092\u53ef\u8996\u5316\u3059\u308b\uff0e BMP\u5f62\u5f0f\u306e\u5236\u9650 bmp \u306f\u4ed5\u69d8\u306b\u3088\u308a\u753b\u7d20\u6570\u306b\u3088\u3063\u3066\u3046\u307e\u304f\u52d5\u304b\u306a\u3044\u3053\u3068\u304c\u3042\u308b\uff0e ppm \u5f62\u5f0f\u3092\u63a8\u5968\u3059\u308b\uff0e -pall \u5438\u53ce\u5883\u754c\u9818\u57df\u307e\u3067\u542b\u3081\u3066\u53ef\u8996\u5316\u3092\u884c\u3046\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u5207\u308a\u843d\u3068\u3059\uff09 -mul \u53ef\u8996\u5316\u3059\u308b\u969b\u306b\u51fa\u529b\u632f\u5e45\u3092var\u500d\u3059\u308b\uff0e\u8272\u306e\u5f37\u3055\u306e\u8abf\u6574\u3092\u3053\u3053\u3067\u884c\u3046\uff0e -mul1 , -mul2 \u306a\u3069\u3092\u7528\u3044\u308b\u3068\uff0c\u6210\u5206\u3054\u3068\u306e\u632f\u5e45\u306e\u91cd\u307f\u3092\u500b\u5225\u306b\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u3053\u308c\u306b\u3088\u308a\uff0c\u305f\u3068\u3048\u3070P\u6ce2\u3060\u3051\u3042\u308b\u3044\u306f\u4e0a\u4e0b\u52d5\u3060\u3051\u3068\u3044\u3046\u3088\u3046\u306b\uff0c\u7279\u5b9a\u6210\u5206\u3060\u3051\u3092\u5207\u308a\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\uff0e -abs \u901f\u5ea6\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u305d\u306e\u7d76\u5bfe\u5024\u3092\u53ef\u8996\u5316\u3059\u308b\uff0eP\u6ce2\u30fbS\u6ce2\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306f\u3082\u3068\u3082\u3068\u305d\u308c\u305e\u308c\u306e\u7d76\u5bfe\u5024\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u52d5\u4f5c\u3057\u306a\u3044\uff0e -bin , -asc \u5404\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3092\u5358\u7cbe\u5ea6\u30d0\u30a4\u30ca\u30ea\u3082\u3057\u304f\u306f\u30a2\u30b9\u30ad\u30fc\u30c7\u30fc\u30bf\u3068\u3057\u3066bin\u3082\u3057\u304f\u306fasc\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u51fa\u529b\u3059\u308b\uff0e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u306f GMT ( xyz2grd \u306a\u3069\uff09\u304b\u3089-bis\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u76f4\u63a5\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\uff0e -skip n \u6700\u521d\u306e n \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3092\u8aad\u307f\u98db\u3070\u3059\uff0e -notim (after v5.1) \u53ef\u8996\u5316\u753b\u50cf\u306b\u7d4c\u904e\u6642\u9593\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u306a\u3044\uff0e diff_snp.x \u00b6 \u3075\u305f\u3064\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5dee\u3092\u53d6\u308a\uff0c\u540c\u3058\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3059\u308b\uff0e 1 $ diff_snp.x snap1 snap2 diffile \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff08 NetCDF \u3082\u3057\u304f\u306f\u72ec\u81ea\u30d0\u30a4\u30ca\u30ea\uff09\u306f\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u4f9d\u5b58\u3059\u308b\uff0e fs2grd.x \u00b6 New in v5.1 OpenSWPC \u306e\u5730\u8868\u9762\u3082\u3057\u304f\u306f\u6d77\u9762\u306b\u304a\u3051\u308b\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb (title).(ob|fs).(typ).nc \u306f\uff0cNetCDF\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u3067\u306f\u3042\u308b\u3082\u306e\u306e\uff0c\u7def\u5ea6\u7d4c\u5ea6\u65b9\u5411\u306b\u7b49\u9593\u9694\u306e\u30c7\u30fc\u30bf\u3067\u306f\u306a\u3044\u305f\u3081\uff0cGMT\u306e grdimage \u3067\u306f\u305d\u306e\u307e\u307e\u30d7\u30ed\u30c3\u30c8\u3067\u304d\u306a\u3044\uff0e fs2grd.x \u306f\uff0c OpenSWPC \u5185\u6307\u5b9a\u3055\u308c\u305f\u7def\u5ea6\u7d4c\u5ea6\u7bc4\u56f2\u3068\u9593\u9694\u3067\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u3092\u30ea\u30b5\u30f3\u30d7\u30eb\u3057\uff0cGMT\u3067\u76f4\u63a5\u5229\u7528\u53ef\u80fd\u306agrd\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u3059\u308b\uff0e 1 2 $ fs2grd.x -i input.nc -v variable_name -R region -dlon delta_lon -dlat delta_lat -i OpenSWPC \u51fa\u529b\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\uff08NetCDF\u5f62\u5f0f\uff09\u30d5\u30a1\u30a4\u30eb\uff0e\u5730\u8868\u9762\uff08 fs \uff09\u30fb\u6d77\u5e95\u9762\uff08 ob \uff09\u3042\u308b\u3044\u306f xy \u30c7\u30fc\u30bf\u3067\u3042\u308b\u3053\u3068\uff0e -R lon0/lon1/lat0/lat1 \u30ea\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u4f5c\u308b\u9818\u57df\uff0e\u7d4c\u5ea6\u65b9\u5411\u306e\u6700\u5c0f lon0 \u3068\u6700\u5927 lon1 \uff0c\u7def\u5ea6\u65b9\u5411\u306e\u6700\u5c0f lat0 \u3068 lat1 \u3092\u4e0e\u3048\u308b\uff0e \u8a18\u6cd5\u306fGMT\u306e\u66f8\u5f0f\u306b\u6e96\u3058\u308b\u304c\uff0c -R \u3068\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5024\u306e\u9593\u306b\u306f\u7a7a\u767d\u304c\u5fc5\u8981\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\uff0e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u9818\u57df\u306e\u5916\u5074\u3092\u542b\u3093\u3060\u5834\u5408\uff0c\u305d\u3053\u306fNaN\u3067\u57cb\u3081\u3089\u308c\u308b\uff0e -dlon delta_lon, -dlat delta_lat \u7d4c\u5ea6\u30fb\u7def\u5ea6\u65b9\u5411\u306e\u30b0\u30ea\u30c3\u30c9\u9593\u9694\uff0e\u3053\u306e\u9593\u9694\u3067\u88dc\u9593\u3055\u308c\u308b\uff0e -v variable_name \u5909\u6570\u540d\uff0e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u6c34\u5e73\u97622\u6b21\u5143\u914d\u5217\u30c7\u30fc\u30bf\u3067\u3042\u308c\u3070\u4f55\u3067\u3082\u826f\u3044\uff0e\u5909\u6570\u306e\u4e00\u89a7\u306f ncdump -h \u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e Vx, Vy, Vz \u3084 div, rot_x, rot_y, rot_z \u306e\u3088\u3046\u306a\u6642\u9593\u5909\u5316\u3059\u308b\u30c7\u30fc\u30bf\u306f\uff0c\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u3054\u3068\u306b\u5206\u5272\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u308b\uff0e","title":"\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8"},{"location":"ja/3._Tools/0301_snapshot/#_1","text":"","title":"\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8"},{"location":"ja/3._Tools/0301_snapshot/#read_snpx","text":"\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306f\u72ec\u81ea\u5f62\u5f0f\u3082\u3057\u304f\u306f NetCDF \u5f62\u5f0f\u306e\u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b\u304c\uff0c\u3044\u305a\u308c\u3082\u30d7\u30ed\u30b0\u30e9\u30e0 read_snp.x \u306b\u3088\u3063\u3066\u53ef\u8996\u5316\u3082\u3057\u304f\u306f\u632f\u5e45\u30c7\u30fc\u30bf\u306e\u62bd\u51fa\u304c\u3067\u304d\u308b\uff0e 1 2 read_snp.x -i snapshotfile [ -h ] [ -ppm | -bmp ] [ -pall ] [ -mul var | -mul1 var -mul2 var ... ] [ -bin ] [ -asc ] [ -skip n ] -h \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u5185\u5305\u3055\u308c\u3066\u3044\u308b\u30d8\u30c3\u30c0\u60c5\u5831\u3092\u51fa\u529b\u3059\u308b\uff0e\u8a08\u7b97\u3092\u5b9f\u65bd\u3057\u305f\u65e5\u6642\u30fb\u8a08\u7b97\u30bf\u30a4\u30c8\u30eb\u30fb\u30b3\u30fc\u30c9\u7a2e\u5225\uff083D/PSV/SH\uff09\u30fb\u30b0\u30ea\u30c3\u30c9\u9593\u9694\u30fb\u5ea7\u6a19\u7cfb\u306a\u3069\u306e\u60c5\u5831\u304c\u51fa\u529b\u3055\u308c\u308b\uff0e\u4ee5\u4e0b\u306b\u4f8b\u3092\u793a\u3059\uff0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 $ ../bin/read_snp.x -i swpc_3d.xz.ps.snp -h [binary type] : STREAMIO [code type] : SWPC_3D [header version]: 3 [title] : swpc_3d [date generated]: 1408015126 2014-08-14T11-18-46 [coordinate] : xz [data type] : ps [ns1] : 256 [ns2] : 256 [beg1] : -63.87500 [beg2] : -9.87500 [ds1] : 0.25000 [ds2] : 0.25000 [dt] : 0.05000 [na1] : 20 [na2] : 20 [nmed] : 3 [nsnp] : 2 [clon] : 143.50000 [clat] : 42.00000 -ppm , -bmp \u305d\u308c\u305e\u308cppm\u3082\u3057\u304f\u306fbmp\u5f62\u5f0f\u306e\u753b\u50cf\u3092\u51fa\u529b\u3059\u308b\uff0e\u7d50\u679c\u306f\u305d\u308c\u305e\u308c ppm / bmp \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff08\u81ea\u52d5\u4f5c\u6210\uff09\u306b\u9023\u756a\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u683c\u7d0d\u3055\u308c\u308b\uff0e\u53ef\u8996\u5316\u5bfe\u8c61\u304c\u901f\u5ea6\u3042\u308b\u3044\u306f\u5909\u4f4d\u3067\u3042\u308c\u3070\uff0c\u4e0a\u4e0b\u52d5\u3068\u6c34\u5e73\u52d5\u3092\u305d\u308c\u305e\u308c\u8d64\u3068\u7dd1\u3067\uff0cP\u6ce2\u30fbS\u6ce2\uff08div, rot\uff09\u3067\u3042\u308c\u3070\u305d\u308c\u305e\u308c\u306e\u6210\u5206\u306e\u7d76\u5bfe\u5024\u3092\u8d64\u3068\u7dd1\u3067\u8272\u5206\u3051\u3057\u3066\u8868\u793a\u3059\u308b\uff0e\u305f\u3060\u3057\uff0c\u7d76\u5bfe\u5024\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u4ed8\u52a0\u3055\u308c\u305f\u5834\u5408\u306b\u306fGMT\u306e\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8hot\u76f8\u5f53\u306e\u8272\u3067\u7d76\u5bfe\u5024\u3092\u53ef\u8996\u5316\u3059\u308b\uff0e BMP\u5f62\u5f0f\u306e\u5236\u9650 bmp \u306f\u4ed5\u69d8\u306b\u3088\u308a\u753b\u7d20\u6570\u306b\u3088\u3063\u3066\u3046\u307e\u304f\u52d5\u304b\u306a\u3044\u3053\u3068\u304c\u3042\u308b\uff0e ppm \u5f62\u5f0f\u3092\u63a8\u5968\u3059\u308b\uff0e -pall \u5438\u53ce\u5883\u754c\u9818\u57df\u307e\u3067\u542b\u3081\u3066\u53ef\u8996\u5316\u3092\u884c\u3046\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u5207\u308a\u843d\u3068\u3059\uff09 -mul \u53ef\u8996\u5316\u3059\u308b\u969b\u306b\u51fa\u529b\u632f\u5e45\u3092var\u500d\u3059\u308b\uff0e\u8272\u306e\u5f37\u3055\u306e\u8abf\u6574\u3092\u3053\u3053\u3067\u884c\u3046\uff0e -mul1 , -mul2 \u306a\u3069\u3092\u7528\u3044\u308b\u3068\uff0c\u6210\u5206\u3054\u3068\u306e\u632f\u5e45\u306e\u91cd\u307f\u3092\u500b\u5225\u306b\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u3053\u308c\u306b\u3088\u308a\uff0c\u305f\u3068\u3048\u3070P\u6ce2\u3060\u3051\u3042\u308b\u3044\u306f\u4e0a\u4e0b\u52d5\u3060\u3051\u3068\u3044\u3046\u3088\u3046\u306b\uff0c\u7279\u5b9a\u6210\u5206\u3060\u3051\u3092\u5207\u308a\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\uff0e -abs \u901f\u5ea6\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u305d\u306e\u7d76\u5bfe\u5024\u3092\u53ef\u8996\u5316\u3059\u308b\uff0eP\u6ce2\u30fbS\u6ce2\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306f\u3082\u3068\u3082\u3068\u305d\u308c\u305e\u308c\u306e\u7d76\u5bfe\u5024\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u52d5\u4f5c\u3057\u306a\u3044\uff0e -bin , -asc \u5404\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3092\u5358\u7cbe\u5ea6\u30d0\u30a4\u30ca\u30ea\u3082\u3057\u304f\u306f\u30a2\u30b9\u30ad\u30fc\u30c7\u30fc\u30bf\u3068\u3057\u3066bin\u3082\u3057\u304f\u306fasc\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u51fa\u529b\u3059\u308b\uff0e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u306f GMT ( xyz2grd \u306a\u3069\uff09\u304b\u3089-bis\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u76f4\u63a5\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\uff0e -skip n \u6700\u521d\u306e n \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3092\u8aad\u307f\u98db\u3070\u3059\uff0e -notim (after v5.1) \u53ef\u8996\u5316\u753b\u50cf\u306b\u7d4c\u904e\u6642\u9593\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u306a\u3044\uff0e","title":"read_snp.x"},{"location":"ja/3._Tools/0301_snapshot/#diff_snpx","text":"\u3075\u305f\u3064\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5dee\u3092\u53d6\u308a\uff0c\u540c\u3058\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3059\u308b\uff0e 1 $ diff_snp.x snap1 snap2 diffile \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff08 NetCDF \u3082\u3057\u304f\u306f\u72ec\u81ea\u30d0\u30a4\u30ca\u30ea\uff09\u306f\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u4f9d\u5b58\u3059\u308b\uff0e","title":"diff_snp.x"},{"location":"ja/3._Tools/0301_snapshot/#fs2grdx","text":"New in v5.1 OpenSWPC \u306e\u5730\u8868\u9762\u3082\u3057\u304f\u306f\u6d77\u9762\u306b\u304a\u3051\u308b\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb (title).(ob|fs).(typ).nc \u306f\uff0cNetCDF\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u3067\u306f\u3042\u308b\u3082\u306e\u306e\uff0c\u7def\u5ea6\u7d4c\u5ea6\u65b9\u5411\u306b\u7b49\u9593\u9694\u306e\u30c7\u30fc\u30bf\u3067\u306f\u306a\u3044\u305f\u3081\uff0cGMT\u306e grdimage \u3067\u306f\u305d\u306e\u307e\u307e\u30d7\u30ed\u30c3\u30c8\u3067\u304d\u306a\u3044\uff0e fs2grd.x \u306f\uff0c OpenSWPC \u5185\u6307\u5b9a\u3055\u308c\u305f\u7def\u5ea6\u7d4c\u5ea6\u7bc4\u56f2\u3068\u9593\u9694\u3067\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u3092\u30ea\u30b5\u30f3\u30d7\u30eb\u3057\uff0cGMT\u3067\u76f4\u63a5\u5229\u7528\u53ef\u80fd\u306agrd\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u3059\u308b\uff0e 1 2 $ fs2grd.x -i input.nc -v variable_name -R region -dlon delta_lon -dlat delta_lat -i OpenSWPC \u51fa\u529b\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\uff08NetCDF\u5f62\u5f0f\uff09\u30d5\u30a1\u30a4\u30eb\uff0e\u5730\u8868\u9762\uff08 fs \uff09\u30fb\u6d77\u5e95\u9762\uff08 ob \uff09\u3042\u308b\u3044\u306f xy \u30c7\u30fc\u30bf\u3067\u3042\u308b\u3053\u3068\uff0e -R lon0/lon1/lat0/lat1 \u30ea\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u4f5c\u308b\u9818\u57df\uff0e\u7d4c\u5ea6\u65b9\u5411\u306e\u6700\u5c0f lon0 \u3068\u6700\u5927 lon1 \uff0c\u7def\u5ea6\u65b9\u5411\u306e\u6700\u5c0f lat0 \u3068 lat1 \u3092\u4e0e\u3048\u308b\uff0e \u8a18\u6cd5\u306fGMT\u306e\u66f8\u5f0f\u306b\u6e96\u3058\u308b\u304c\uff0c -R \u3068\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5024\u306e\u9593\u306b\u306f\u7a7a\u767d\u304c\u5fc5\u8981\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\uff0e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u9818\u57df\u306e\u5916\u5074\u3092\u542b\u3093\u3060\u5834\u5408\uff0c\u305d\u3053\u306fNaN\u3067\u57cb\u3081\u3089\u308c\u308b\uff0e -dlon delta_lon, -dlat delta_lat \u7d4c\u5ea6\u30fb\u7def\u5ea6\u65b9\u5411\u306e\u30b0\u30ea\u30c3\u30c9\u9593\u9694\uff0e\u3053\u306e\u9593\u9694\u3067\u88dc\u9593\u3055\u308c\u308b\uff0e -v variable_name \u5909\u6570\u540d\uff0e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u6c34\u5e73\u97622\u6b21\u5143\u914d\u5217\u30c7\u30fc\u30bf\u3067\u3042\u308c\u3070\u4f55\u3067\u3082\u826f\u3044\uff0e\u5909\u6570\u306e\u4e00\u89a7\u306f ncdump -h \u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e Vx, Vy, Vz \u3084 div, rot_x, rot_y, rot_z \u306e\u3088\u3046\u306a\u6642\u9593\u5909\u5316\u3059\u308b\u30c7\u30fc\u30bf\u306f\uff0c\u6642\u9593\u30b9\u30c6\u30c3\u30d7\u3054\u3068\u306b\u5206\u5272\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u308b\uff0e","title":"fs2grd.x"},{"location":"ja/3._Tools/0302_vmodel/","text":"\u69cb\u9020\u30e2\u30c7\u30eb\u306e\u78ba\u8a8d \u00b6 qmodel_tau.x \u00b6 OpenSWPC \u306e\u5165\u529b\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u3092\u5143\u306b\uff0c Q^{-1} \u5024\u3068\u5b9f\u4f53\u6ce2\u306e\u5206\u6563\u6027\u306e\u5468\u6ce2\u6570\u4f9d\u5b58\u6027\u3092\u8a08\u7b97\u3059\u308b\uff0e 1 $ qmodel_tau.x -nm [ nm ] -i [ prm_file ] -f0 [ min_freq ] -f1 [ max_freq ] -nf [ ngrid ] \u5468\u6ce2\u6570 min_freq \u304b\u3089 max_freq \u307e\u3067\u306e\u533a\u9593\u3092\u5bfe\u6570\u7b49\u9593\u9694\u306b ngrid \u306b\u5206\u5272\u3057\uff0c Q^{-1}(f) \u3068\u5b9f\u4f53\u6ce2\u901f\u5ea6\u306e\u5206\u6563\u6027\u3092\u51fa\u529b\u3059\u308b\uff0e\u5730\u9707\u6ce2\u901f\u5ea6\u306f\u57fa\u6e96\u5468\u6ce2\u6570\u30671\u306b\u898f\u683c\u5316\u3055\u308c\u3066\u3044\u308b\uff0e\u7c98\u5f3e\u6027\u4f53\u306b\u95a2\u308f\u308b\u30d1\u30e9\u30e1\u30bf\u306f\u306e\u5165\u529b prm_file \u304b\u3089\u8aad\u307f\u8fbc\u3080\u304c\uff0c\u30b3\u30fc\u30c9\u306e\u57cb\u3081\u8fbc\u307f\u30d1\u30e9\u30e1\u30bf\u3067\u3042\u308b NM \u306f\u5225\u9014\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u4e0e\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e grdsnp.x \u00b6 \u69cb\u9020\u30e2\u30c7\u30ebgrd\u30d5\u30a1\u30a4\u30eb\u304b\u3089\uff0c OpenSWPC \u306e\u5165\u529b\u30d1\u30e9\u30e1\u30bf\u306b\u57fa\u3065\u3044\u305f\u5ea7\u6a19\u5909\u63db\u306b\u3088\u308a\uff0c\u8a08\u7b97\u5ea7\u6a19\u7cfb\u306e(x, y, depth)\u3092\u30a2\u30b9\u30ad\u30fc\u3067\u6a19\u6e96\u51fa\u529b\u306b\u51fa\u529b\u3059\u308b\uff0e\u8a08\u7b97\u30e2\u30c7\u30eb\u9818\u57df\u306e\u5207\u308a\u51fa\u3057\u306e\u78ba\u8a8d\u3084\uff0c\u305d\u308c\u3092GMT\u7b49\u3067\u53ef\u8996\u5316\u3059\u308b\u969b\u306b\u7528\u3044\u308b\uff0e 1 $ grdsnp.x -i [prm_file] -g [grd_file]","title":"\u69cb\u9020\u30e2\u30c7\u30eb\u306e\u78ba\u8a8d"},{"location":"ja/3._Tools/0302_vmodel/#_1","text":"","title":"\u69cb\u9020\u30e2\u30c7\u30eb\u306e\u78ba\u8a8d"},{"location":"ja/3._Tools/0302_vmodel/#qmodel_taux","text":"OpenSWPC \u306e\u5165\u529b\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u3092\u5143\u306b\uff0c Q^{-1} \u5024\u3068\u5b9f\u4f53\u6ce2\u306e\u5206\u6563\u6027\u306e\u5468\u6ce2\u6570\u4f9d\u5b58\u6027\u3092\u8a08\u7b97\u3059\u308b\uff0e 1 $ qmodel_tau.x -nm [ nm ] -i [ prm_file ] -f0 [ min_freq ] -f1 [ max_freq ] -nf [ ngrid ] \u5468\u6ce2\u6570 min_freq \u304b\u3089 max_freq \u307e\u3067\u306e\u533a\u9593\u3092\u5bfe\u6570\u7b49\u9593\u9694\u306b ngrid \u306b\u5206\u5272\u3057\uff0c Q^{-1}(f) \u3068\u5b9f\u4f53\u6ce2\u901f\u5ea6\u306e\u5206\u6563\u6027\u3092\u51fa\u529b\u3059\u308b\uff0e\u5730\u9707\u6ce2\u901f\u5ea6\u306f\u57fa\u6e96\u5468\u6ce2\u6570\u30671\u306b\u898f\u683c\u5316\u3055\u308c\u3066\u3044\u308b\uff0e\u7c98\u5f3e\u6027\u4f53\u306b\u95a2\u308f\u308b\u30d1\u30e9\u30e1\u30bf\u306f\u306e\u5165\u529b prm_file \u304b\u3089\u8aad\u307f\u8fbc\u3080\u304c\uff0c\u30b3\u30fc\u30c9\u306e\u57cb\u3081\u8fbc\u307f\u30d1\u30e9\u30e1\u30bf\u3067\u3042\u308b NM \u306f\u5225\u9014\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u4e0e\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e","title":"qmodel_tau.x"},{"location":"ja/3._Tools/0302_vmodel/#grdsnpx","text":"\u69cb\u9020\u30e2\u30c7\u30ebgrd\u30d5\u30a1\u30a4\u30eb\u304b\u3089\uff0c OpenSWPC \u306e\u5165\u529b\u30d1\u30e9\u30e1\u30bf\u306b\u57fa\u3065\u3044\u305f\u5ea7\u6a19\u5909\u63db\u306b\u3088\u308a\uff0c\u8a08\u7b97\u5ea7\u6a19\u7cfb\u306e(x, y, depth)\u3092\u30a2\u30b9\u30ad\u30fc\u3067\u6a19\u6e96\u51fa\u529b\u306b\u51fa\u529b\u3059\u308b\uff0e\u8a08\u7b97\u30e2\u30c7\u30eb\u9818\u57df\u306e\u5207\u308a\u51fa\u3057\u306e\u78ba\u8a8d\u3084\uff0c\u305d\u308c\u3092GMT\u7b49\u3067\u53ef\u8996\u5316\u3059\u308b\u969b\u306b\u7528\u3044\u308b\uff0e 1 $ grdsnp.x -i [prm_file] -g [grd_file]","title":"grdsnp.x"},{"location":"ja/3._Tools/0303_parameter/","text":"\u30d1\u30e9\u30e1\u30bf\u4f5c\u6210\u652f\u63f4 \u00b6 fdmcond.x \u00b6 \u5dee\u5206\u6cd5\u306e\u7a7a\u9593\u30fb\u6642\u9593\u30b0\u30ea\u30c3\u30c9\u9593\u9694\u306f\uff0c\u4e3b\u3068\u3057\u3066CFL\u5b89\u5b9a\u6761\u4ef6\u306b\u5f8b\u901f\u3055\u308c\u308b\uff0e\u307e\u305f\uff0c\u9707\u6e90\u3067\u8f3b\u5c04\u3055\u308c\u308b\u5730\u9707\u52d5\u306e\u7279\u5fb4\u7684\u5468\u6ce2\u6570\u306e\u4e0a\u9650\u306f\u6ce2\u9577\u6761\u4ef6\uff08\u5730\u9707\u6ce2\u306e\u6ce2\u9577\u304c5 \\sim 10\u30b0\u30ea\u30c3\u30c9\u3088\u308a\u5927\u304d\u304f\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u3044\uff09\u306b\u3088\u3063\u3066\u5236\u9650\u3055\u308c\u308b\uff0e \u524d\u8005\u304c\u6e80\u305f\u3055\u308c\u306a\u3044\u3068\u8a08\u7b97\u306f\u5b89\u5b9a\u306b\u5b9f\u884c\u3055\u308c\u305a\u767a\u6563\u3057\uff0c\u5f8c\u8005\u306e\u5834\u5408\u306b\u306f\u767a\u6563\u3053\u305d\u3057\u306a\u3044\u3082\u306e\u306e\u6570\u5024\u5206\u6563\u306b\u3068\u3082\u306a\u3046\u8aa4\u5dee\u304c\u5927\u304d\u304f\u306a\u308b\uff0e fdmcond.x \u306f\u3053\u308c\u3089\u306e\u30d1\u30e9\u30e1\u30bf\u3092\u5bfe\u8a71\u7684\u306b\u6c42\u3081\u308b\u30c4\u30fc\u30eb\u3067\u3042\u308b\uff0e\u7a7a\u9593\u30fb\u6642\u9593\u306e\u30b0\u30ea\u30c3\u30c9\u9593\u9694\uff0c\u6700\u5927\u5468\u6ce2\u6570fmax\uff0c\u9707\u6e90\u306b\u304a\u3051\u308b\u30e9\u30a4\u30ba\u30bf\u30a4\u30e0Tr\uff0c\u5730\u9707\u6ce2\u901f\u5ea6\u306e\u6700\u5c0f\u6700\u5927\u5024vmin, vmax\u306a\u3069\u306e\u5e7e\u3064\u304b\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u4e0e\u3048\u308b\u3068\uff0c\u6b8b\u308a\u306e\u30d1\u30e9\u30e1\u30bf\u306e\u6761\u4ef6\u3092\u63d0\u793a\u3057\u3066\u304f\u308c\u308b\uff0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 $ ./fdmcond.x ---------------------------------------------------------------------- FDM CONDITION ---------------------------------------------------------------------- Model Dimension ? --> 3 2) 2D 3) 3D Source Type ? --> 3 1) Triangle 2) Herrmann 3) Kupper Parameter Combination ? --> 5 1) dh (space grid), fmax (max freq.), vmax (max vel.) 2) dh (space grid), Tr (rise time), vmax (max vel.) 3) dh (space grid), fmax (max freq.), dt (time grid) 4) dh (space grid), Tr (rise time), dt (time grid) 5) dh (space grid), vmin (min vel.), vmax (max vel.) 6) dh (space grid), vmin (min vel.), dt (time grid) 7) fmax (max freq.) , vmax (max vel.), dt (time grid) 8) Tr (rise time) , vmax (max vel.), dt (time grid) 9) vmin (min vel.) , vmax (max vel.), dt (time grid) Assumed Parameters: dx = 0.25 dy = 0.25 dz = 0.25 vmin = 0.3 vmax = 8.0 Derivaed Parameters: dt <= 0.01546 fmax <= 0.17143 Tr >= 13.41667 mapregion.x \u00b6 \u8a08\u7b97\u9818\u57df\u306f clon , clat , phi , xbeg , ybeg , nx , ny , dx , dy \u306a\u3069\u306e\u30d1\u30e9\u30e1\u30bf\u306b\u3088\u3063\u3066\u81ea\u52d5\u7684\u306b\u6c7a\u5b9a\u3055\u308c\u308b\uff0e mapregion.x \u306f\uff0c\u306e\u5165\u529b\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u3053\u307f\uff0c\u5bfe\u5fdc\u3059\u308b\u5730\u56f3\u9818\u57df\u7bc4\u56f2\u3092\u51fa\u529b\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3042\u308b\uff0e xbeg , ybeg , xend , yend \u3067\u5b9a\u7fa9\u3055\u308c\u308b\u9818\u57df\u306e\u5916\u5074\u7dda\u306e\u7def\u5ea6\u7d4c\u5ea6\u4f4d\u7f6e\u3092\u51fa\u529b\u3059\u308b\uff0e 1 $ mapregion.x -i input.inf -o region.dat -o \u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u4e0e\u3048\u3089\u308c\u306a\u3044\u5834\u5408\u306b\u306f\u6a19\u6e96\u51fa\u529b\u306b\u51fa\u529b\u3092\u884c\u3046\uff0e \u307e\u305f\uff0c\u672c\u30b3\u30fc\u30c9\u306f N_M=3 \u3092\u4eee\u5b9a\u3057\u305f\u5834\u5408\u306e\u4e88\u60f3\u30e1\u30e2\u30ea\u5229\u7528\u91cf\u3092\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u51fa\u529b\u3059\u308b\uff0e mapregion.gmt \u00b6 mapregion.x \u3092\u547c\u3073\u51fa\u3057\u3066\u5730\u56f3\u9818\u57df\u3092\u63cf\u753b\u3059\u308b GMT \u30b9\u30af\u30ea\u30d7\u30c8\uff0eGMT\u30d0\u30fc\u30b8\u30e7\u30f35\u4ee5\u964d\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e","title":"\u30d1\u30e9\u30e1\u30bf\u4f5c\u6210\u652f\u63f4"},{"location":"ja/3._Tools/0303_parameter/#_1","text":"","title":"\u30d1\u30e9\u30e1\u30bf\u4f5c\u6210\u652f\u63f4"},{"location":"ja/3._Tools/0303_parameter/#fdmcondx","text":"\u5dee\u5206\u6cd5\u306e\u7a7a\u9593\u30fb\u6642\u9593\u30b0\u30ea\u30c3\u30c9\u9593\u9694\u306f\uff0c\u4e3b\u3068\u3057\u3066CFL\u5b89\u5b9a\u6761\u4ef6\u306b\u5f8b\u901f\u3055\u308c\u308b\uff0e\u307e\u305f\uff0c\u9707\u6e90\u3067\u8f3b\u5c04\u3055\u308c\u308b\u5730\u9707\u52d5\u306e\u7279\u5fb4\u7684\u5468\u6ce2\u6570\u306e\u4e0a\u9650\u306f\u6ce2\u9577\u6761\u4ef6\uff08\u5730\u9707\u6ce2\u306e\u6ce2\u9577\u304c5 \\sim 10\u30b0\u30ea\u30c3\u30c9\u3088\u308a\u5927\u304d\u304f\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u3044\uff09\u306b\u3088\u3063\u3066\u5236\u9650\u3055\u308c\u308b\uff0e \u524d\u8005\u304c\u6e80\u305f\u3055\u308c\u306a\u3044\u3068\u8a08\u7b97\u306f\u5b89\u5b9a\u306b\u5b9f\u884c\u3055\u308c\u305a\u767a\u6563\u3057\uff0c\u5f8c\u8005\u306e\u5834\u5408\u306b\u306f\u767a\u6563\u3053\u305d\u3057\u306a\u3044\u3082\u306e\u306e\u6570\u5024\u5206\u6563\u306b\u3068\u3082\u306a\u3046\u8aa4\u5dee\u304c\u5927\u304d\u304f\u306a\u308b\uff0e fdmcond.x \u306f\u3053\u308c\u3089\u306e\u30d1\u30e9\u30e1\u30bf\u3092\u5bfe\u8a71\u7684\u306b\u6c42\u3081\u308b\u30c4\u30fc\u30eb\u3067\u3042\u308b\uff0e\u7a7a\u9593\u30fb\u6642\u9593\u306e\u30b0\u30ea\u30c3\u30c9\u9593\u9694\uff0c\u6700\u5927\u5468\u6ce2\u6570fmax\uff0c\u9707\u6e90\u306b\u304a\u3051\u308b\u30e9\u30a4\u30ba\u30bf\u30a4\u30e0Tr\uff0c\u5730\u9707\u6ce2\u901f\u5ea6\u306e\u6700\u5c0f\u6700\u5927\u5024vmin, vmax\u306a\u3069\u306e\u5e7e\u3064\u304b\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u4e0e\u3048\u308b\u3068\uff0c\u6b8b\u308a\u306e\u30d1\u30e9\u30e1\u30bf\u306e\u6761\u4ef6\u3092\u63d0\u793a\u3057\u3066\u304f\u308c\u308b\uff0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 $ ./fdmcond.x ---------------------------------------------------------------------- FDM CONDITION ---------------------------------------------------------------------- Model Dimension ? --> 3 2) 2D 3) 3D Source Type ? --> 3 1) Triangle 2) Herrmann 3) Kupper Parameter Combination ? --> 5 1) dh (space grid), fmax (max freq.), vmax (max vel.) 2) dh (space grid), Tr (rise time), vmax (max vel.) 3) dh (space grid), fmax (max freq.), dt (time grid) 4) dh (space grid), Tr (rise time), dt (time grid) 5) dh (space grid), vmin (min vel.), vmax (max vel.) 6) dh (space grid), vmin (min vel.), dt (time grid) 7) fmax (max freq.) , vmax (max vel.), dt (time grid) 8) Tr (rise time) , vmax (max vel.), dt (time grid) 9) vmin (min vel.) , vmax (max vel.), dt (time grid) Assumed Parameters: dx = 0.25 dy = 0.25 dz = 0.25 vmin = 0.3 vmax = 8.0 Derivaed Parameters: dt <= 0.01546 fmax <= 0.17143 Tr >= 13.41667","title":"fdmcond.x"},{"location":"ja/3._Tools/0303_parameter/#mapregionx","text":"\u8a08\u7b97\u9818\u57df\u306f clon , clat , phi , xbeg , ybeg , nx , ny , dx , dy \u306a\u3069\u306e\u30d1\u30e9\u30e1\u30bf\u306b\u3088\u3063\u3066\u81ea\u52d5\u7684\u306b\u6c7a\u5b9a\u3055\u308c\u308b\uff0e mapregion.x \u306f\uff0c\u306e\u5165\u529b\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u3053\u307f\uff0c\u5bfe\u5fdc\u3059\u308b\u5730\u56f3\u9818\u57df\u7bc4\u56f2\u3092\u51fa\u529b\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3042\u308b\uff0e xbeg , ybeg , xend , yend \u3067\u5b9a\u7fa9\u3055\u308c\u308b\u9818\u57df\u306e\u5916\u5074\u7dda\u306e\u7def\u5ea6\u7d4c\u5ea6\u4f4d\u7f6e\u3092\u51fa\u529b\u3059\u308b\uff0e 1 $ mapregion.x -i input.inf -o region.dat -o \u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u4e0e\u3048\u3089\u308c\u306a\u3044\u5834\u5408\u306b\u306f\u6a19\u6e96\u51fa\u529b\u306b\u51fa\u529b\u3092\u884c\u3046\uff0e \u307e\u305f\uff0c\u672c\u30b3\u30fc\u30c9\u306f N_M=3 \u3092\u4eee\u5b9a\u3057\u305f\u5834\u5408\u306e\u4e88\u60f3\u30e1\u30e2\u30ea\u5229\u7528\u91cf\u3092\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u51fa\u529b\u3059\u308b\uff0e","title":"mapregion.x"},{"location":"ja/3._Tools/0303_parameter/#mapregiongmt","text":"mapregion.x \u3092\u547c\u3073\u51fa\u3057\u3066\u5730\u56f3\u9818\u57df\u3092\u63cf\u753b\u3059\u308b GMT \u30b9\u30af\u30ea\u30d7\u30c8\uff0eGMT\u30d0\u30fc\u30b8\u30e7\u30f35\u4ee5\u964d\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e","title":"mapregion.gmt"},{"location":"ja/3._Tools/0304_rmedia/","text":"\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u751f\u6210 \u00b6 gen_rmed3d.x \u00b6 3\u6b21\u5143\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3092\u4f5c\u6210\u3059\u308b\uff0e 1 2 3 gen_rmed3d.x [-o outfile] [-nx nx] [-ny ny] [-nz nz] [-epsil epsilon] [-kappa kappa] [-dx dx] [-dy dy] [-dz dz] [-ax ax] [-ay ay] [-az az] [-ptype ptype] {-seed seed_number} -o outfile \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d -nx nx , -ny ny -nz nz \u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\uff0e2\u306e\u3079\u304d\u4e57\u3067\u3042\u308b\u3053\u3068\uff0e -epsil epsilon \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306e\u3086\u3089\u304eRMS \\epsilon -ax ax , -ay ay , -az az \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306e\u5404\u65b9\u5411\u306e\u7279\u5fb4\u7684\u30b9\u30b1\u30fc\u30eb\uff0e -dx dx -dy dy -dz dz \u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u9593\u9694\uff0e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u7528\u3044\u308b\u9593\u9694\u3068\u540c\u4e00\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff0e -ptype ptype PSDF\u306e\u7a2e\u5225\uff0e1:Gaussian, 2:Exponential, 3:von K\u00e1rm\u00e1n -kappa kappa von K\u00e1rm\u00e1n\u578b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf \\kappa -seed seed_number \uff08\u30aa\u30d7\u30b7\u30e7\u30f3\uff09\u4e71\u6570\u306e\u30b7\u30fc\u30c9\u3092\u56fa\u5b9a\uff0e\u6574\u6570\u5024\u3067\u4e0e\u3048\u308b\uff0e\u7701\u7565\u3055\u308c\u305f\u5834\u5408\u306f\u65e5\u4ed8\u6642\u523b\u306b\u57fa\u3065\u304d\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\uff0e \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306f3\u6b21\u5143\u306e NetCDF \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u4f5c\u6210\u3055\u308c\u308b\uff0e\u4e00\u822c\u7684\u306a\u53ef\u8996\u5316\u30bd\u30d5\u30c8\uff08\u305f\u3068\u3048\u3070 ParaView \u3084 NetCDF \u5c02\u7528\u306e\u53ef\u8996\u5316\u30bd\u30d5\u30c8\uff08\u305f\u3068\u3048\u3070 Panoply \uff09\u306a\u3069\u3067\u53ef\u8996\u5316\u3057\u305f\u308a\u5185\u5bb9\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306e\u4f8b ParaView \u306b\u3088\u308b3\u6b21\u5143\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306e\u53ef\u8996\u5316\u306e\u4f8b\uff0e gen_rmed2d.x \u00b6 2\u6b21\u5143\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3092\u4f5c\u6210\u3059\u308b\uff0e\u4f7f\u3044\u65b9\u306f gen_rmed3d.x \u3068\u307b\u307c\u540c\u3058\u3067\u3042\u308a\uff0cy\u8ef8\u65b9\u5411\u306e\u5165\u529b\u304c\u7121\u8996\u3055\u308c\u308b\uff0e","title":"\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u751f\u6210"},{"location":"ja/3._Tools/0304_rmedia/#_1","text":"","title":"\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u751f\u6210"},{"location":"ja/3._Tools/0304_rmedia/#gen_rmed3dx","text":"3\u6b21\u5143\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3092\u4f5c\u6210\u3059\u308b\uff0e 1 2 3 gen_rmed3d.x [-o outfile] [-nx nx] [-ny ny] [-nz nz] [-epsil epsilon] [-kappa kappa] [-dx dx] [-dy dy] [-dz dz] [-ax ax] [-ay ay] [-az az] [-ptype ptype] {-seed seed_number} -o outfile \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d -nx nx , -ny ny -nz nz \u30b0\u30ea\u30c3\u30c9\u30b5\u30a4\u30ba\uff0e2\u306e\u3079\u304d\u4e57\u3067\u3042\u308b\u3053\u3068\uff0e -epsil epsilon \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306e\u3086\u3089\u304eRMS \\epsilon -ax ax , -ay ay , -az az \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306e\u5404\u65b9\u5411\u306e\u7279\u5fb4\u7684\u30b9\u30b1\u30fc\u30eb\uff0e -dx dx -dy dy -dz dz \u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u9593\u9694\uff0e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u7528\u3044\u308b\u9593\u9694\u3068\u540c\u4e00\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff0e -ptype ptype PSDF\u306e\u7a2e\u5225\uff0e1:Gaussian, 2:Exponential, 3:von K\u00e1rm\u00e1n -kappa kappa von K\u00e1rm\u00e1n\u578b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf \\kappa -seed seed_number \uff08\u30aa\u30d7\u30b7\u30e7\u30f3\uff09\u4e71\u6570\u306e\u30b7\u30fc\u30c9\u3092\u56fa\u5b9a\uff0e\u6574\u6570\u5024\u3067\u4e0e\u3048\u308b\uff0e\u7701\u7565\u3055\u308c\u305f\u5834\u5408\u306f\u65e5\u4ed8\u6642\u523b\u306b\u57fa\u3065\u304d\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\uff0e \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306f3\u6b21\u5143\u306e NetCDF \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u4f5c\u6210\u3055\u308c\u308b\uff0e\u4e00\u822c\u7684\u306a\u53ef\u8996\u5316\u30bd\u30d5\u30c8\uff08\u305f\u3068\u3048\u3070 ParaView \u3084 NetCDF \u5c02\u7528\u306e\u53ef\u8996\u5316\u30bd\u30d5\u30c8\uff08\u305f\u3068\u3048\u3070 Panoply \uff09\u306a\u3069\u3067\u53ef\u8996\u5316\u3057\u305f\u308a\u5185\u5bb9\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306e\u4f8b ParaView \u306b\u3088\u308b3\u6b21\u5143\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u306e\u53ef\u8996\u5316\u306e\u4f8b\uff0e","title":"gen_rmed3d.x"},{"location":"ja/3._Tools/0304_rmedia/#gen_rmed2dx","text":"2\u6b21\u5143\u30e9\u30f3\u30c0\u30e0\u5a92\u8cea\u3092\u4f5c\u6210\u3059\u308b\uff0e\u4f7f\u3044\u65b9\u306f gen_rmed3d.x \u3068\u307b\u307c\u540c\u3058\u3067\u3042\u308a\uff0cy\u8ef8\u65b9\u5411\u306e\u5165\u529b\u304c\u7121\u8996\u3055\u308c\u308b\uff0e","title":"gen_rmed2d.x"},{"location":"ja/3._Tools/0306_misc/","text":"\u305d\u306e\u4ed6\u306e\u30c4\u30fc\u30eb \u00b6 timvis tools \u00b6 timvis.gmt \u3068 timvis_abs.gmt \u306f stopwatch_mode = .true. \u306e\u969b\u306b\u51fa\u529b\u3055\u308c\u308b\u7d4c\u904e\u6642\u9593\u30d5\u30a1\u30a4\u30eb\u3092\u89e3\u6790\u3057\uff0c\u5404\u8a08\u7b97\u30ce\u30fc\u30c9\u3067\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u6bce\u306e\u8a08\u7b97\u8ca0\u8377\u306e\u30d0\u30e9\u30f3\u30b9\u3092\u53ef\u8996\u5316\u3059\u308b\uff0eGMT\u30d0\u30fc\u30b8\u30e7\u30f35\u4ee5\u964d\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e \u5730\u7406\u5ea7\u6a19\u5909\u63db \u00b6 ll2xy.x \u3068 xy2ll.x \u306f\uff0c\u3067\u63a1\u7528\u3055\u308c\u3066\u3044\u308b\u30ac\u30a6\u30b9\u30fb\u30af\u30ea\u30e5\u30fc\u30b2\u30eb\u5909\u63db\u306b\u3088\u3063\u3066\u7def\u5ea6\u7d4c\u5ea6\u3068\u30c7\u30ab\u30eb\u30c8\u5ea7\u6a19\u7cfb\u306e\u76f8\u4e92\u5909\u63db\u3092\u884c\u3046\u30c4\u30fc\u30eb\u3067\u3042\u308b\uff0e 2D-3D\u5909\u63db\u30c4\u30fc\u30eb wvconv.x \u00b6 New in version 5.2 wvconv.x \u306f2\u6b21\u5143\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u7d50\u679c\u306b\u57fa\u3065\u3044\u3066\uff0c3\u6b21\u5143\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u76f8\u5f53\u306e\u5730\u9707\u6ce2\u5f62\u306b\u5909\u63db\u3059\u308b\u30c4\u30fc\u30eb\u3067\u3042\u308b\uff0e \u9707\u6e90\u4f4d\u7f6e (\\xi, \\eta, \\zeta) \u306e\u70b9\u9707\u6e90\u306b\u3088\u308b3\u6b21\u5143\u7a7a\u9593\u306e\u5730\u9707\u6ce2\u5f62 V_{3D}(\\xi, \\eta, \\zeta, t) \u306f\uff0c\u9707\u6e90\u4f4d\u7f6e (\\xi, \\zeta) \u306b\u3088\u308b2\u6b21\u5143\u7a7a\u9593\u306e\u5730\u9707\u6ce2\u5f62 V_{2D}(\\xi,\\zeta, t) \u3068\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u4fc2\u306b\u3042\u308b: \\begin{align} V_{2D}(\\xi, \\zeta, t) = \\int_{-\\infty}^\\infty V_{3D}(\\xi, \\eta, \\zeta, t) d \\eta \\end{align} \u3064\u307e\u308a\uff0c V_{3D} \u3092 y \u8ef8\u65b9\u5411\u306b\u9707\u6e90\u306b\u3064\u3044\u3066\u7a4d\u5206\u3057\u305f\u7dda\u9707\u6e90\u306b\u3088\u308b\u5730\u9707\u6ce2\u304c2\u6b21\u5143\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u7d50\u679c\u3067\u3042\u308b\uff0e\u4e00\u65b9\uff0c\u3053\u306e\u9006\u5909\u63db\u306f\uff0c \\begin{align} V_{3D}(\\xi, \\eta=0, \\zeta, t) = \\frac{1}{\\pi} \\sqrt{\\frac{1}{2 R v}} \\frac{d}{dt} \\left[ \\frac{1}{\\sqrt{t}} \\ast V_{2D}(\\xi, \\zeta, t) \\right] \\end{align} \u306b\u3088\u3063\u3066\u8a08\u7b97\u3067\u304d\u308b 1 \uff0e\u3053\u3053\u3067 R \u306f\u4f1d\u64ad\u8ddd\u96e2\uff0c v \u306f\u5404\u5730\u9707\u6ce2\u76f8\u306e\u901f\u5ea6\u3067\u3042\u308b\uff0e\u8a18\u53f7 \\ast \u306f\u7573\u307f\u8fbc\u307f\u3092\u8868\u3059\uff0e \u30c4\u30fc\u30eb wvconv.x \u306f\uff0c R \u3068 v \u4e00\u5b9a\u306e\u4eee\u5b9a\u306e\u3082\u3068\u3067\uff0c\u5468\u6ce2\u6570\u9818\u57df\u306b\u3088\u308b\u8a08\u7b97 \\begin{align} & \\widetilde{V}_{2D} (\\xi, \\zeta, f) = \\int_{-\\infty}^\\infty V_{2D} (\\xi, \\zeta, f) e^{i 2 \\pi f t} dt \\\\ & V_{3D}(\\xi, \\eta=0, \\zeta, t) = \\int_{-\\infty}^\\infty \\sqrt{-\\frac{i f}{Rv}} \\widetilde{V}_{2D} (\\xi, \\zeta, f) e^{-i 2 \\pi f t} d f \\end{align} \u306b\u3088\u3063\u30663\u6b21\u5143\u7a7a\u9593\u306b\u304a\u3051\u308b\u6a21\u64ec\u6ce2\u5f62\u3092\u8a08\u7b97\u3059\u308b\uff0e\u3053\u3053\u3067 R \u306f\u9707\u6e90\u89b3\u6e2c\u70b9\u304b\u3089\u306e\u76f4\u7dda\u8ddd\u96e2\u3067\uff0c v \u306e\u5024\u306f\u30d1\u30e9\u30e1\u30bf\u3068\u3057\u3066\u4e0e\u3048\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u304c\uff0c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f v=4000 m/s\u3092\u4eee\u5b9a\u3057\u3066\u8a08\u7b97\u3059\u308b\uff0e Usage \u00b6 1 2 3 4 wvconv.x in.sac out.sac (V0) in.sac: input SAC file (must be 2D simulation output) out.sac: output SAC filename V0 (optional): assumed average velocity in m/s unit. Default is 4000 m/s \u4e00\u4f8b\u3068\u3057\u3066\uff0c example/lhm.dat \u306e1\u6b21\u5143\u69cb\u9020\u3067\u8a08\u7b97\u3057\u305fP-SV2\u6b21\u5143\u30b3\u30fc\u30c9\u306b\u3088\u308b\u6ce2\u5f62\u304b\u3089 wvconv.x \u306b\u3088\u308a\u5909\u63db\u3057\u305f\uff08 V=4000 m/s\uff09\u6ce2\u5f62\u3068\uff0c\u540c\u3058\u69cb\u9020\u3067\u306e3\u6b21\u5143\u8a08\u7b97\u306e\u7d50\u679c\u306e\u6bd4\u8f03\u3092\u4e0b\u56f3\u306b\u793a\u3059\uff0e Figure 3\u6b21\u5143\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7d50\u679c\uff08\u7070\u8272\u7dda\uff09\u30682\u6b21\u5143P-SV\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7d50\u679c\u3092 wvconv.x \u3067\u5909\u63db\u3057\u305f\u3082\u306e\uff08\u8d64\u7dda\uff09\u306e\u6bd4\u8f03\uff0e \u5730\u9707\u6ce2\u76f8\u306e\u901f\u5ea6\u30924000 m/s\u3068\u4eee\u5b9a\u3059\u308b\u305f\u3081\uff0c\u305d\u3053\u304b\u3089\u5916\u308c\u308bP\u6ce2\u3084\u8868\u9762\u6ce2\u5f8c\u7d9a\u76f8\u3067\u306f\u82e5\u5e72\u306e\u632f\u5e45\u306e\u9055\u3044\u304c\u898b\u3089\u308c\u308b\u304c\uff0c\u5168\u822c\u7684\u306b\u6ce2\u5f62\u306f\u975e\u5e38\u306b\u3088\u304f\u4e00\u81f4\u3057\u3066\u3044\u308b\uff0e\u3082\u3057 wvconv.x \u3092\u4ecb\u3055\u305a\u306b\u6bd4\u8f03\u3059\u308b\u3068\uff0c\u632f\u5e45\u3082\u6ce2\u5f62\u5f62\u72b6\u3082\u307e\u3063\u305f\u304f\u7570\u306a\u308b\uff0e Warning wvconv.x \u306fVersion 5.2\u3067\u65b0\u305f\u306b\u5c0e\u5165\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3067\u3042\u308a\uff0c\u307e\u3060\u5341\u5206\u306b\u67af\u308c\u3066\u3044\u306a\u3044\uff0e\u5229\u7528\u306b\u306f\u7d30\u5fc3\u306e\u6ce8\u610f\u3092\u6255\u3063\u3066\u6b32\u3057\u3044\uff0e Li, D., Helmberger, D., Clayton, R. W., & Sun, D. (2014). Global synthetic seismograms using a 2-D finite-difference method. Geophysical Journal International, 197(2), 1166\u20131183. doi:10.1093/gji/ggu050 \u21a9","title":"\u305d\u306e\u4ed6\u306e\u30c4\u30fc\u30eb"},{"location":"ja/3._Tools/0306_misc/#_1","text":"","title":"\u305d\u306e\u4ed6\u306e\u30c4\u30fc\u30eb"},{"location":"ja/3._Tools/0306_misc/#timvis-tools","text":"timvis.gmt \u3068 timvis_abs.gmt \u306f stopwatch_mode = .true. \u306e\u969b\u306b\u51fa\u529b\u3055\u308c\u308b\u7d4c\u904e\u6642\u9593\u30d5\u30a1\u30a4\u30eb\u3092\u89e3\u6790\u3057\uff0c\u5404\u8a08\u7b97\u30ce\u30fc\u30c9\u3067\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u6bce\u306e\u8a08\u7b97\u8ca0\u8377\u306e\u30d0\u30e9\u30f3\u30b9\u3092\u53ef\u8996\u5316\u3059\u308b\uff0eGMT\u30d0\u30fc\u30b8\u30e7\u30f35\u4ee5\u964d\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e","title":"timvis tools"},{"location":"ja/3._Tools/0306_misc/#_2","text":"ll2xy.x \u3068 xy2ll.x \u306f\uff0c\u3067\u63a1\u7528\u3055\u308c\u3066\u3044\u308b\u30ac\u30a6\u30b9\u30fb\u30af\u30ea\u30e5\u30fc\u30b2\u30eb\u5909\u63db\u306b\u3088\u3063\u3066\u7def\u5ea6\u7d4c\u5ea6\u3068\u30c7\u30ab\u30eb\u30c8\u5ea7\u6a19\u7cfb\u306e\u76f8\u4e92\u5909\u63db\u3092\u884c\u3046\u30c4\u30fc\u30eb\u3067\u3042\u308b\uff0e","title":"\u5730\u7406\u5ea7\u6a19\u5909\u63db"},{"location":"ja/3._Tools/0306_misc/#2d-3d-wvconvx","text":"New in version 5.2 wvconv.x \u306f2\u6b21\u5143\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u7d50\u679c\u306b\u57fa\u3065\u3044\u3066\uff0c3\u6b21\u5143\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u76f8\u5f53\u306e\u5730\u9707\u6ce2\u5f62\u306b\u5909\u63db\u3059\u308b\u30c4\u30fc\u30eb\u3067\u3042\u308b\uff0e \u9707\u6e90\u4f4d\u7f6e (\\xi, \\eta, \\zeta) \u306e\u70b9\u9707\u6e90\u306b\u3088\u308b3\u6b21\u5143\u7a7a\u9593\u306e\u5730\u9707\u6ce2\u5f62 V_{3D}(\\xi, \\eta, \\zeta, t) \u306f\uff0c\u9707\u6e90\u4f4d\u7f6e (\\xi, \\zeta) \u306b\u3088\u308b2\u6b21\u5143\u7a7a\u9593\u306e\u5730\u9707\u6ce2\u5f62 V_{2D}(\\xi,\\zeta, t) \u3068\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u4fc2\u306b\u3042\u308b: \\begin{align} V_{2D}(\\xi, \\zeta, t) = \\int_{-\\infty}^\\infty V_{3D}(\\xi, \\eta, \\zeta, t) d \\eta \\end{align} \u3064\u307e\u308a\uff0c V_{3D} \u3092 y \u8ef8\u65b9\u5411\u306b\u9707\u6e90\u306b\u3064\u3044\u3066\u7a4d\u5206\u3057\u305f\u7dda\u9707\u6e90\u306b\u3088\u308b\u5730\u9707\u6ce2\u304c2\u6b21\u5143\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u7d50\u679c\u3067\u3042\u308b\uff0e\u4e00\u65b9\uff0c\u3053\u306e\u9006\u5909\u63db\u306f\uff0c \\begin{align} V_{3D}(\\xi, \\eta=0, \\zeta, t) = \\frac{1}{\\pi} \\sqrt{\\frac{1}{2 R v}} \\frac{d}{dt} \\left[ \\frac{1}{\\sqrt{t}} \\ast V_{2D}(\\xi, \\zeta, t) \\right] \\end{align} \u306b\u3088\u3063\u3066\u8a08\u7b97\u3067\u304d\u308b 1 \uff0e\u3053\u3053\u3067 R \u306f\u4f1d\u64ad\u8ddd\u96e2\uff0c v \u306f\u5404\u5730\u9707\u6ce2\u76f8\u306e\u901f\u5ea6\u3067\u3042\u308b\uff0e\u8a18\u53f7 \\ast \u306f\u7573\u307f\u8fbc\u307f\u3092\u8868\u3059\uff0e \u30c4\u30fc\u30eb wvconv.x \u306f\uff0c R \u3068 v \u4e00\u5b9a\u306e\u4eee\u5b9a\u306e\u3082\u3068\u3067\uff0c\u5468\u6ce2\u6570\u9818\u57df\u306b\u3088\u308b\u8a08\u7b97 \\begin{align} & \\widetilde{V}_{2D} (\\xi, \\zeta, f) = \\int_{-\\infty}^\\infty V_{2D} (\\xi, \\zeta, f) e^{i 2 \\pi f t} dt \\\\ & V_{3D}(\\xi, \\eta=0, \\zeta, t) = \\int_{-\\infty}^\\infty \\sqrt{-\\frac{i f}{Rv}} \\widetilde{V}_{2D} (\\xi, \\zeta, f) e^{-i 2 \\pi f t} d f \\end{align} \u306b\u3088\u3063\u30663\u6b21\u5143\u7a7a\u9593\u306b\u304a\u3051\u308b\u6a21\u64ec\u6ce2\u5f62\u3092\u8a08\u7b97\u3059\u308b\uff0e\u3053\u3053\u3067 R \u306f\u9707\u6e90\u89b3\u6e2c\u70b9\u304b\u3089\u306e\u76f4\u7dda\u8ddd\u96e2\u3067\uff0c v \u306e\u5024\u306f\u30d1\u30e9\u30e1\u30bf\u3068\u3057\u3066\u4e0e\u3048\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u304c\uff0c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f v=4000 m/s\u3092\u4eee\u5b9a\u3057\u3066\u8a08\u7b97\u3059\u308b\uff0e","title":"2D-3D\u5909\u63db\u30c4\u30fc\u30eb wvconv.x"},{"location":"ja/3._Tools/0306_misc/#usage","text":"1 2 3 4 wvconv.x in.sac out.sac (V0) in.sac: input SAC file (must be 2D simulation output) out.sac: output SAC filename V0 (optional): assumed average velocity in m/s unit. Default is 4000 m/s \u4e00\u4f8b\u3068\u3057\u3066\uff0c example/lhm.dat \u306e1\u6b21\u5143\u69cb\u9020\u3067\u8a08\u7b97\u3057\u305fP-SV2\u6b21\u5143\u30b3\u30fc\u30c9\u306b\u3088\u308b\u6ce2\u5f62\u304b\u3089 wvconv.x \u306b\u3088\u308a\u5909\u63db\u3057\u305f\uff08 V=4000 m/s\uff09\u6ce2\u5f62\u3068\uff0c\u540c\u3058\u69cb\u9020\u3067\u306e3\u6b21\u5143\u8a08\u7b97\u306e\u7d50\u679c\u306e\u6bd4\u8f03\u3092\u4e0b\u56f3\u306b\u793a\u3059\uff0e Figure 3\u6b21\u5143\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7d50\u679c\uff08\u7070\u8272\u7dda\uff09\u30682\u6b21\u5143P-SV\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7d50\u679c\u3092 wvconv.x \u3067\u5909\u63db\u3057\u305f\u3082\u306e\uff08\u8d64\u7dda\uff09\u306e\u6bd4\u8f03\uff0e \u5730\u9707\u6ce2\u76f8\u306e\u901f\u5ea6\u30924000 m/s\u3068\u4eee\u5b9a\u3059\u308b\u305f\u3081\uff0c\u305d\u3053\u304b\u3089\u5916\u308c\u308bP\u6ce2\u3084\u8868\u9762\u6ce2\u5f8c\u7d9a\u76f8\u3067\u306f\u82e5\u5e72\u306e\u632f\u5e45\u306e\u9055\u3044\u304c\u898b\u3089\u308c\u308b\u304c\uff0c\u5168\u822c\u7684\u306b\u6ce2\u5f62\u306f\u975e\u5e38\u306b\u3088\u304f\u4e00\u81f4\u3057\u3066\u3044\u308b\uff0e\u3082\u3057 wvconv.x \u3092\u4ecb\u3055\u305a\u306b\u6bd4\u8f03\u3059\u308b\u3068\uff0c\u632f\u5e45\u3082\u6ce2\u5f62\u5f62\u72b6\u3082\u307e\u3063\u305f\u304f\u7570\u306a\u308b\uff0e Warning wvconv.x \u306fVersion 5.2\u3067\u65b0\u305f\u306b\u5c0e\u5165\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3067\u3042\u308a\uff0c\u307e\u3060\u5341\u5206\u306b\u67af\u308c\u3066\u3044\u306a\u3044\uff0e\u5229\u7528\u306b\u306f\u7d30\u5fc3\u306e\u6ce8\u610f\u3092\u6255\u3063\u3066\u6b32\u3057\u3044\uff0e Li, D., Helmberger, D., Clayton, R. W., & Sun, D. (2014). Global synthetic seismograms using a 2-D finite-difference method. Geophysical Journal International, 197(2), 1166\u20131183. doi:10.1093/gji/ggu050 \u21a9","title":"Usage"},{"location":"ja/4._Hints/0401_modelset/","text":"\u8a08\u7b97\u30e2\u30c7\u30eb\u8a2d\u5b9a \u00b6 \u7279\u306b3\u6b21\u5143\u8a08\u7b97\u3067\u306f\uff0c\u8a08\u7b97\u898f\u6a21\u306f\u30e1\u30e2\u30ea\u30b5\u30a4\u30ba\u306b\u3088\u3063\u3066\u5236\u9650\u3055\u308c\u308b\uff0e\u672c\u30b3\u30fc\u30c9\u304c\u5fc5\u8981\u3068\u3059\u308b\u30e1\u30e2\u30ea\u91cf\u306e\u6982\u7b97\u5024\u306f\uff0c\u6df7\u5408\u7cbe\u5ea6\u304b\u3064 NM=3 \u306e\u5834\u5408\uff0c \\begin{align} \\begin{split} &m_\\text{MP} = 116 + 24 \\mathtt{NM} = 188 \\quad (\\mathtt{NM}=3) \\quad \\text{byte} \\\\ \\end{split}\\end{align} \u3067\u3042\u308b\uff0e\u305f\u3060\u3057\uff0c\u3053\u308c\u306f3\u6b21\u5143\u4ee5\u4e0a\u306e\u914d\u5217\u306e\u5bb9\u91cf\u306e\u7dcf\u548c\u3092\u53d6\u3063\u305f\u3082\u306e\u3067\uff0c\u304b\u3064\u5438\u53ce\u5883\u754c\u6761\u4ef6\u90e8\u5206\u306f\u8003\u616e\u3057\u3066\u3044\u306a\u3044\uff0e \u3053\u308c\u306b n_x \\times n_y \\times n_z \u3092\u4e57\u305a\u308c\u3070\u5fc5\u8981\u3068\u3059\u308b\u5408\u8a08\u30e1\u30e2\u30ea\u91cf\u306e\u6982\u7b97\u5024\u304c\u5f97\u3089\u308c\u308b\uff0e \u3042\u3068\u306f\u5404\u8a08\u7b97\u30ce\u30fc\u30c9\u3067\u306e\u8981\u6c42\u30e1\u30e2\u30ea\u91cf\u304c\u5229\u7528\u53ef\u80fd\u306a\u8cc7\u6e90\u91cf\u3092\u8d85\u3048\u306a\u3044\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308c\u3070\u826f\u3044\uff0e \u8a08\u7b97\u6642\u9593\u306f\uff0c1\u79d2\u3042\u305f\u308a\u306b1CPU\u30b3\u30a2\u304c\u51e6\u7406\u3067\u304d\u308b\u6642\u9593\u30fb\u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u6570\uff08 \\mathtt{n_G} \uff09\u304b\u3089\u63a8\u5b9a\u3067\u304d\u308b\uff0e\u6b21\u8868\u306b\u3044\u304f\u3064\u304b\u306e\u30de\u30b7\u30f3\u3067\u306e\u63a8\u5b9a\u7d50\u679c\u3092\u793a\u3059\uff0e\u5168\u4f53\u306e\u8a08\u7b97\u6642\u9593\u306f\uff0c \\begin{align} t_\\text{comp} = \\frac{ {\\tt nx}\\times {\\tt ny}\\times {\\tt nz}}{ \\mathtt{n_G} \\times \\tt nproc} \\times {\\tt nt} \\quad \\text{[s]}\\end{align} \u306b\u3088\u308a\u6982\u7b97\u3067\u304d\u308b\uff0e\u8a08\u7b97\u6642\u9593\u304c\u30b7\u30b9\u30c6\u30e0\u306e\u5236\u9650\u5024\u3092\u8d85\u3048\u308b\u3088\u3046\u3067\u3042\u308c\u3070\uff0c\u30e2\u30c7\u30eb\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3059\u308b\u304b\uff0c\u3042\u308b\u3044\u306f\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30ea\u30b9\u30bf\u30fc\u30c8\u6a5f\u80fd\u3092\u5229\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e \u30de\u30b7\u30f3\u540d CPU Core\u6570 \\mathtt{n_G} Mac Pro 2010 Intel Xeon X5670 2.93GHz 6 6.7 \\times 10^{6} EIC2015 Intel Xeon E5-2680 v3 2.5 GHz 12 7.0 \\times 10^{6} \u5730\u7403\u30b7\u30df\u30e5\u30ec\u30fc\u30bf NEC SX-ACE 4 57 \\times 10^{6}","title":"\u8a08\u7b97\u30e2\u30c7\u30eb\u8a2d\u5b9a"},{"location":"ja/4._Hints/0401_modelset/#_1","text":"\u7279\u306b3\u6b21\u5143\u8a08\u7b97\u3067\u306f\uff0c\u8a08\u7b97\u898f\u6a21\u306f\u30e1\u30e2\u30ea\u30b5\u30a4\u30ba\u306b\u3088\u3063\u3066\u5236\u9650\u3055\u308c\u308b\uff0e\u672c\u30b3\u30fc\u30c9\u304c\u5fc5\u8981\u3068\u3059\u308b\u30e1\u30e2\u30ea\u91cf\u306e\u6982\u7b97\u5024\u306f\uff0c\u6df7\u5408\u7cbe\u5ea6\u304b\u3064 NM=3 \u306e\u5834\u5408\uff0c \\begin{align} \\begin{split} &m_\\text{MP} = 116 + 24 \\mathtt{NM} = 188 \\quad (\\mathtt{NM}=3) \\quad \\text{byte} \\\\ \\end{split}\\end{align} \u3067\u3042\u308b\uff0e\u305f\u3060\u3057\uff0c\u3053\u308c\u306f3\u6b21\u5143\u4ee5\u4e0a\u306e\u914d\u5217\u306e\u5bb9\u91cf\u306e\u7dcf\u548c\u3092\u53d6\u3063\u305f\u3082\u306e\u3067\uff0c\u304b\u3064\u5438\u53ce\u5883\u754c\u6761\u4ef6\u90e8\u5206\u306f\u8003\u616e\u3057\u3066\u3044\u306a\u3044\uff0e \u3053\u308c\u306b n_x \\times n_y \\times n_z \u3092\u4e57\u305a\u308c\u3070\u5fc5\u8981\u3068\u3059\u308b\u5408\u8a08\u30e1\u30e2\u30ea\u91cf\u306e\u6982\u7b97\u5024\u304c\u5f97\u3089\u308c\u308b\uff0e \u3042\u3068\u306f\u5404\u8a08\u7b97\u30ce\u30fc\u30c9\u3067\u306e\u8981\u6c42\u30e1\u30e2\u30ea\u91cf\u304c\u5229\u7528\u53ef\u80fd\u306a\u8cc7\u6e90\u91cf\u3092\u8d85\u3048\u306a\u3044\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308c\u3070\u826f\u3044\uff0e \u8a08\u7b97\u6642\u9593\u306f\uff0c1\u79d2\u3042\u305f\u308a\u306b1CPU\u30b3\u30a2\u304c\u51e6\u7406\u3067\u304d\u308b\u6642\u9593\u30fb\u7a7a\u9593\u30b0\u30ea\u30c3\u30c9\u6570\uff08 \\mathtt{n_G} \uff09\u304b\u3089\u63a8\u5b9a\u3067\u304d\u308b\uff0e\u6b21\u8868\u306b\u3044\u304f\u3064\u304b\u306e\u30de\u30b7\u30f3\u3067\u306e\u63a8\u5b9a\u7d50\u679c\u3092\u793a\u3059\uff0e\u5168\u4f53\u306e\u8a08\u7b97\u6642\u9593\u306f\uff0c \\begin{align} t_\\text{comp} = \\frac{ {\\tt nx}\\times {\\tt ny}\\times {\\tt nz}}{ \\mathtt{n_G} \\times \\tt nproc} \\times {\\tt nt} \\quad \\text{[s]}\\end{align} \u306b\u3088\u308a\u6982\u7b97\u3067\u304d\u308b\uff0e\u8a08\u7b97\u6642\u9593\u304c\u30b7\u30b9\u30c6\u30e0\u306e\u5236\u9650\u5024\u3092\u8d85\u3048\u308b\u3088\u3046\u3067\u3042\u308c\u3070\uff0c\u30e2\u30c7\u30eb\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3059\u308b\u304b\uff0c\u3042\u308b\u3044\u306f\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30ea\u30b9\u30bf\u30fc\u30c8\u6a5f\u80fd\u3092\u5229\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e \u30de\u30b7\u30f3\u540d CPU Core\u6570 \\mathtt{n_G} Mac Pro 2010 Intel Xeon X5670 2.93GHz 6 6.7 \\times 10^{6} EIC2015 Intel Xeon E5-2680 v3 2.5 GHz 12 7.0 \\times 10^{6} \u5730\u7403\u30b7\u30df\u30e5\u30ec\u30fc\u30bf NEC SX-ACE 4 57 \\times 10^{6}","title":"\u8a08\u7b97\u30e2\u30c7\u30eb\u8a2d\u5b9a"},{"location":"ja/4._Hints/0402_modification/","text":"\u30b3\u30fc\u30c9\u6539\u9020\u306e\u30d2\u30f3\u30c8 \u00b6 \u901f\u5ea6\u69cb\u9020\u306e\u5909\u66f4 \u00b6 \u901f\u5ea6\u69cb\u9020\u306f\uff0c\u30e2\u30b8\u30e5\u30fc\u30eb m_medium \u304b\u3089\u547c\u3070\u308c\u308b\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3 vmodel_ast \u306b\u3088\u3063\u3066\u5b9a\u7fa9\u3055\u308c\u308b\uff0e\u3053\u308c\u3089\u306e vmodel \u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u306f\uff0c\u901f\u5ea6\u69cb\u9020\u306e\u7a2e\u985e\u306b\u3088\u3089\u305a\uff0c\u6b21\u8868\u306e\u3088\u3046\u306a\u5165\u51fa\u529b\u5909\u6570\u3092\u3082\u3064\uff0e \u5909\u6570\u540d in/out type \u8aac\u660e io_prm in integer \u5165\u529b\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u88c5\u7f6e\u756a\u53f7 i0,i1 in integer x\u65b9\u5411\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u59cb\u5024\u3068\u7d42\u5024 j0,j1 in integer y\u65b9\u5411\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u59cb\u5024\u3068\u7d42\u5024 k0,k1 in integer z\u65b9\u5411\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u59cb\u5024\u3068\u7d42\u5024 xc(i0:i1) in real x\u5ea7\u6a19\u5024\u914d\u5217 yc(i0:i1) in real y\u5ea7\u6a19\u5024\u914d\u5217 zc(i0:i1) in real z\u5ea7\u6a19\u5024\u914d\u5217 vcut in real \u30ab\u30c3\u30c8\u30aa\u30d5\u901f\u5ea6 rho(k0:k1,i0:i1,j0:j1) out real \u5bc6\u5ea6 [g/cm {}^3 ] lam(k0:k1,i0:i1,j0:j1) out real Lame\u306e\u4fc2\u6570 \\lambda [g/cm {}^3 ] mu(k0:k1,i0:i1,j0:j1) out real Lame\u306e\u4fc2\u6570 \\mu [g/cm {}^3 ] qp(k0:k1,i0:i1,j0:j1) out real \u5185\u90e8\u6e1b\u8870 Q_P qs(k0:k1,i0:i1,j0:j1) out real \u5185\u90e8\u6e1b\u8870 Q_S bddep(i0:i1,j0:j1,0:NBD) out real \u4e0d\u9023\u7d9a\u9762\u6df1\u3055 [km] \u4f4d\u7f6e\u5ea7\u6a19\u914d\u5217 xc, yc, zc \u306e\u4f4d\u7f6e\u3067\u306e\u69cb\u9020 rho, lam, mu, qp, qs \u3092\u4e0e\u3048\u308b\u3088\u3046\u306a\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u3092\u81ea\u4f5c\u3059\u308b\u3053\u3068\u3067\uff0c\u4efb\u610f\u306e\u901f\u5ea6\u69cb\u9020\u306b\u5e2f\u3059\u308b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u5b9f\u73fe\u3067\u304d\u308b\uff0e\u305f\u3060\u3057\uff0c xc, yc, zc \u306fMPI\u3067\u5206\u5272\u3055\u308c\u308b\u9818\u57df\u5185\u3088\u308a\u3082\u3084\u3084\u5e83\u3044\u7bc4\u56f2\u304c\u7528\u3044\u3089\u308c\u308b\uff0e\u3053\u308c\u306f\uff0c\u901a\u4fe1\u306b\u3088\u308b\u5024\u306e\u4ea4\u63db\u3084\uff0c\u9707\u6e90\u306a\u3089\u3073\u306b\u5730\u8868\u6d77\u5e95\u5883\u754c\u6761\u4ef6\u306b\u5fc5\u8981\u3068\u306a\u308b\u305f\u3081\u3067\u3042\u308b\uff0e \u5730\u8868\u5883\u754c\u3084\u6d77\u5e95\u5883\u754c\u9762\u306f m_medium \u5185\u3067\u81ea\u52d5\u5224\u5b9a\u3055\u308c\u308b\uff0e\u305d\u308c\u305e\u308c lam \u304a\u3088\u3073 mu \u304c\u521d\u3081\u3066\u975e\u30bc\u30ed\u306b\u306a\u308b\u30b0\u30ea\u30c3\u30c9\u4f4d\u7f6e\u304c\u5883\u754c\u9762\u3067\u3042\u308b\u3068\u5224\u5b9a\u3055\u308c\u308b\uff0e \u5909\u6570 bddep(:,:,0) \u306f\u5730\u8868\u3067\u3042\u308b\u3053\u3068\u304c\u4eee\u5b9a\u3055\u308c\uff0c\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u53ef\u8996\u5316\u306b\u7528\u3044\u3089\u308c\u308b\uff0e\u305d\u306e\u4ed6 bddep(:,:,1:NBD) \u306f\u9707\u6e90\u3084\u89b3\u6e2c\u70b9\u3092\u5883\u754c\u9762\u306e\u4f4d\u7f6e\u306b\u5f37\u5236\u7684\u306b\u8a2d\u5b9a\u3059\u308b\u969b\u306b\u7528\u3044\u3089\u308c\u308b\uff0e \u9707\u6e90\u6642\u9593\u95a2\u6570\u306e\u8ffd\u52a0 \u00b6 \u9707\u6e90\u6642\u9593\u95a2\u6570\u306e\u7a2e\u5225\u306f\uff0c\u30d1\u30e9\u30e1\u30bf stftype \u306e\u9078\u629e\u306b\u5fdc\u3058\u3066\uff0c\u95a2\u6570 source__momentrate \u3067\u547c\u3073\u51fa\u3055\u308c\u308b\uff0e\u5404\u8981\u7d20\u9707\u6e90\u6642\u9593\u95a2\u6570\u306e\u95a2\u6570\u5b9a\u7fa9\u306f share/m_fdtool.F90 \u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\uff0e\u4e88\u3081\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u4ee5\u5916\u306e\u9707\u6e90\u6642\u9593\u95a2\u6570\u5f62\u72b6\u3092\u4f7f\u3044\u305f\u3051\u308c\u3070\uff0c\u3053\u3053\u306b\u95a2\u6570\u3092\u4ed8\u3051\u52a0\u3048\u308b\u306e\u304c\u7c21\u5358\u3067\u3042\u308d\u3046\uff0e \u307e\u305f\uff0c\u3067\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u9707\u6e90\u6642\u9593\u95a2\u6570\u306f\u3059\u3079\u3066\u7834\u58ca\u958b\u59cb\u6642\u9593 tbeg \u3068\u30e9\u30a4\u30ba\u30bf\u30a4\u30e0 trise \u3092\u30d1\u30e9\u30e1\u30bf\u3068\u3057\u3066\u53d6\u3063\u3066\u3044\u308b\uff0e\u3053\u308c\u3089\u306f\u914d\u5217\u5909\u6570 srcprm(:) \u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\uff0e\u3082\u3057\u9707\u6e90\u6642\u9593\u95a2\u6570\u304c3\u3064\u4ee5\u4e0a\u306e\u30d1\u30e9\u30e1\u30bf\u3092\u5fc5\u8981\u3068\u3059\u308b\u5834\u5408\u306b\u306f\uff0c\u3053\u306e\u914d\u5217\u306e\u30b5\u30a4\u30ba\uff08 n_stfprm \uff09\u3092\u62e1\u5927\u3059\u308c\u3070\u3088\u3044 \u8ffd\u52a0\u30d1\u30e9\u30e1\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u304b\u305f \u00b6 \u591a\u304f\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u306f (modulename)__setup \u306a\u308b\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u304c\u8a08\u7b97\u958b\u59cb\u6642\u306b\u547c\u3070\u308c\uff0c\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30d1\u30e9\u30e1\u30bf\u3092\u53d6\u5f97\u3059\u308b\uff0e\u8ffd\u52a0\u30d1\u30e9\u30e1\u30bf\u3092\u540c\u3058\u3088\u3046\u306b\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3080\u306b\u306f\uff0c subroutine readini \u3092\u7528\u3044\u308b\uff0e\u5b9f\u88c5\u306f src/shared/m_readini.F90 \u306b\u3042\u308b\uff0e","title":"\u30b3\u30fc\u30c9\u6539\u9020\u306e\u30d2\u30f3\u30c8"},{"location":"ja/4._Hints/0402_modification/#_1","text":"","title":"\u30b3\u30fc\u30c9\u6539\u9020\u306e\u30d2\u30f3\u30c8"},{"location":"ja/4._Hints/0402_modification/#_2","text":"\u901f\u5ea6\u69cb\u9020\u306f\uff0c\u30e2\u30b8\u30e5\u30fc\u30eb m_medium \u304b\u3089\u547c\u3070\u308c\u308b\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3 vmodel_ast \u306b\u3088\u3063\u3066\u5b9a\u7fa9\u3055\u308c\u308b\uff0e\u3053\u308c\u3089\u306e vmodel \u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u306f\uff0c\u901f\u5ea6\u69cb\u9020\u306e\u7a2e\u985e\u306b\u3088\u3089\u305a\uff0c\u6b21\u8868\u306e\u3088\u3046\u306a\u5165\u51fa\u529b\u5909\u6570\u3092\u3082\u3064\uff0e \u5909\u6570\u540d in/out type \u8aac\u660e io_prm in integer \u5165\u529b\u30d1\u30e9\u30e1\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u88c5\u7f6e\u756a\u53f7 i0,i1 in integer x\u65b9\u5411\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u59cb\u5024\u3068\u7d42\u5024 j0,j1 in integer y\u65b9\u5411\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u59cb\u5024\u3068\u7d42\u5024 k0,k1 in integer z\u65b9\u5411\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u59cb\u5024\u3068\u7d42\u5024 xc(i0:i1) in real x\u5ea7\u6a19\u5024\u914d\u5217 yc(i0:i1) in real y\u5ea7\u6a19\u5024\u914d\u5217 zc(i0:i1) in real z\u5ea7\u6a19\u5024\u914d\u5217 vcut in real \u30ab\u30c3\u30c8\u30aa\u30d5\u901f\u5ea6 rho(k0:k1,i0:i1,j0:j1) out real \u5bc6\u5ea6 [g/cm {}^3 ] lam(k0:k1,i0:i1,j0:j1) out real Lame\u306e\u4fc2\u6570 \\lambda [g/cm {}^3 ] mu(k0:k1,i0:i1,j0:j1) out real Lame\u306e\u4fc2\u6570 \\mu [g/cm {}^3 ] qp(k0:k1,i0:i1,j0:j1) out real \u5185\u90e8\u6e1b\u8870 Q_P qs(k0:k1,i0:i1,j0:j1) out real \u5185\u90e8\u6e1b\u8870 Q_S bddep(i0:i1,j0:j1,0:NBD) out real \u4e0d\u9023\u7d9a\u9762\u6df1\u3055 [km] \u4f4d\u7f6e\u5ea7\u6a19\u914d\u5217 xc, yc, zc \u306e\u4f4d\u7f6e\u3067\u306e\u69cb\u9020 rho, lam, mu, qp, qs \u3092\u4e0e\u3048\u308b\u3088\u3046\u306a\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u3092\u81ea\u4f5c\u3059\u308b\u3053\u3068\u3067\uff0c\u4efb\u610f\u306e\u901f\u5ea6\u69cb\u9020\u306b\u5e2f\u3059\u308b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u5b9f\u73fe\u3067\u304d\u308b\uff0e\u305f\u3060\u3057\uff0c xc, yc, zc \u306fMPI\u3067\u5206\u5272\u3055\u308c\u308b\u9818\u57df\u5185\u3088\u308a\u3082\u3084\u3084\u5e83\u3044\u7bc4\u56f2\u304c\u7528\u3044\u3089\u308c\u308b\uff0e\u3053\u308c\u306f\uff0c\u901a\u4fe1\u306b\u3088\u308b\u5024\u306e\u4ea4\u63db\u3084\uff0c\u9707\u6e90\u306a\u3089\u3073\u306b\u5730\u8868\u6d77\u5e95\u5883\u754c\u6761\u4ef6\u306b\u5fc5\u8981\u3068\u306a\u308b\u305f\u3081\u3067\u3042\u308b\uff0e \u5730\u8868\u5883\u754c\u3084\u6d77\u5e95\u5883\u754c\u9762\u306f m_medium \u5185\u3067\u81ea\u52d5\u5224\u5b9a\u3055\u308c\u308b\uff0e\u305d\u308c\u305e\u308c lam \u304a\u3088\u3073 mu \u304c\u521d\u3081\u3066\u975e\u30bc\u30ed\u306b\u306a\u308b\u30b0\u30ea\u30c3\u30c9\u4f4d\u7f6e\u304c\u5883\u754c\u9762\u3067\u3042\u308b\u3068\u5224\u5b9a\u3055\u308c\u308b\uff0e \u5909\u6570 bddep(:,:,0) \u306f\u5730\u8868\u3067\u3042\u308b\u3053\u3068\u304c\u4eee\u5b9a\u3055\u308c\uff0c\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u53ef\u8996\u5316\u306b\u7528\u3044\u3089\u308c\u308b\uff0e\u305d\u306e\u4ed6 bddep(:,:,1:NBD) \u306f\u9707\u6e90\u3084\u89b3\u6e2c\u70b9\u3092\u5883\u754c\u9762\u306e\u4f4d\u7f6e\u306b\u5f37\u5236\u7684\u306b\u8a2d\u5b9a\u3059\u308b\u969b\u306b\u7528\u3044\u3089\u308c\u308b\uff0e","title":"\u901f\u5ea6\u69cb\u9020\u306e\u5909\u66f4"},{"location":"ja/4._Hints/0402_modification/#_3","text":"\u9707\u6e90\u6642\u9593\u95a2\u6570\u306e\u7a2e\u5225\u306f\uff0c\u30d1\u30e9\u30e1\u30bf stftype \u306e\u9078\u629e\u306b\u5fdc\u3058\u3066\uff0c\u95a2\u6570 source__momentrate \u3067\u547c\u3073\u51fa\u3055\u308c\u308b\uff0e\u5404\u8981\u7d20\u9707\u6e90\u6642\u9593\u95a2\u6570\u306e\u95a2\u6570\u5b9a\u7fa9\u306f share/m_fdtool.F90 \u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\uff0e\u4e88\u3081\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u4ee5\u5916\u306e\u9707\u6e90\u6642\u9593\u95a2\u6570\u5f62\u72b6\u3092\u4f7f\u3044\u305f\u3051\u308c\u3070\uff0c\u3053\u3053\u306b\u95a2\u6570\u3092\u4ed8\u3051\u52a0\u3048\u308b\u306e\u304c\u7c21\u5358\u3067\u3042\u308d\u3046\uff0e \u307e\u305f\uff0c\u3067\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u9707\u6e90\u6642\u9593\u95a2\u6570\u306f\u3059\u3079\u3066\u7834\u58ca\u958b\u59cb\u6642\u9593 tbeg \u3068\u30e9\u30a4\u30ba\u30bf\u30a4\u30e0 trise \u3092\u30d1\u30e9\u30e1\u30bf\u3068\u3057\u3066\u53d6\u3063\u3066\u3044\u308b\uff0e\u3053\u308c\u3089\u306f\u914d\u5217\u5909\u6570 srcprm(:) \u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\uff0e\u3082\u3057\u9707\u6e90\u6642\u9593\u95a2\u6570\u304c3\u3064\u4ee5\u4e0a\u306e\u30d1\u30e9\u30e1\u30bf\u3092\u5fc5\u8981\u3068\u3059\u308b\u5834\u5408\u306b\u306f\uff0c\u3053\u306e\u914d\u5217\u306e\u30b5\u30a4\u30ba\uff08 n_stfprm \uff09\u3092\u62e1\u5927\u3059\u308c\u3070\u3088\u3044","title":"\u9707\u6e90\u6642\u9593\u95a2\u6570\u306e\u8ffd\u52a0"},{"location":"ja/4._Hints/0402_modification/#_4","text":"\u591a\u304f\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u306f (modulename)__setup \u306a\u308b\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u304c\u8a08\u7b97\u958b\u59cb\u6642\u306b\u547c\u3070\u308c\uff0c\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30d1\u30e9\u30e1\u30bf\u3092\u53d6\u5f97\u3059\u308b\uff0e\u8ffd\u52a0\u30d1\u30e9\u30e1\u30bf\u3092\u540c\u3058\u3088\u3046\u306b\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3080\u306b\u306f\uff0c subroutine readini \u3092\u7528\u3044\u308b\uff0e\u5b9f\u88c5\u306f src/shared/m_readini.F90 \u306b\u3042\u308b\uff0e","title":"\u8ffd\u52a0\u30d1\u30e9\u30e1\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u304b\u305f"}]}